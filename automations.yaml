- id: '1665680853122'
  alias: ☑️ Close Garage Door
  description: Closes the garage door when the action is pressed
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: close_garage_door
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: close_garage_door
  condition: []
  action:
  - service: cover.close_cover
    target:
      entity_id: cover.garage_door
    data: {}
  mode: single
- id: '1665681396617'
  alias: ☑️ Garbage Collection
  description: Confirm collection can is on the curb
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: garbage_collection
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: recycling_collection
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: garbage_collection
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: recycling_collection
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.{{ trigger.event.data.title|lower }}_collection
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: '{{ trigger.event.data.tag }}'
  - service: script.notify_mobile
    data:
      who: parents
      title: '{{ trigger.event.data.title }}'
      message: The {{ trigger.event.data.title }} can is at the curb
      icon: '{{ trigger.event.data.icon_url }}'
      group: '{{ trigger.event.data.group }}'
      tag: '{{ trigger.event.data.tag }}-out'
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: '{{ trigger.event.data.title }}'
      message: The {{ trigger.event.data.title }} can is at the curb
  mode: single
- id: '1665681528781'
  alias: ☑️ Ignore Door Alerts
  description: Ignore door open alerts when the action is pressed
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ignore_door_alerts
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: ignore_door_alerts
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.ignore_alert_doors
    data: {}
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: '{{ trigger.event.data.tag }}'
  - service: script.notify_mobile
    data:
      who: parents
      title: Door Alerts Ignored
      message: The Door Open alerts have been ignored until all doors are closed
      icon: local/icons/door-open.png
      group: Security
      tag: door-alerts-ignored
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Door Alerts Ignored
      message: The Door Open alerts have been ignored until all doors are closed
  mode: single
- id: '1665681539044'
  alias: ☑️ Ignore Garage Door Alerts
  description: Ignore garage door open alerts when the action is pressed
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ignore_garage_door_alerts
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: ignore_garage_door_alerts
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.ignore_alert_garage_door
    data: {}
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: garage-door
  - service: script.notify_mobile
    data:
      who: parents
      title: Garage Door Alerts Ignored
      message: The Garage Door Open alerts have been ignored until the Garage Door
        is closed
      icon: local/icons/garage-open.png
      group: Security
      tag: garage-door-alerts-ignored
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Garage Door Alerts Ignored
      message: The Garage Door Open alerts have been ignored until the Garage Door
        is closed
  mode: single
- id: '1665683799664'
  alias: ☑️ Ignore Window Alerts
  description: Ignore window open alerts when the action is pressed
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ignore_window_alerts
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: ignore_window_alerts
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.ignore_alert_windows
    data: {}
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: '{{ trigger.event.data.tag }}'
  - service: script.notify_mobile
    data:
      who: parents
      title: Window Alerts Ignored
      message: The Window Open alerts have been ignored until all windows are closed
      icon: local/icons/window-open.png
      group: Security
      tag: window-alerts-ignored
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Window Alerts Ignored
      message: The Window Open alerts have been ignored until all windows are closed
- id: '1665681550417'
  alias: ☑️ Retry Remote Start Subaru
  description: Starts the Subaru (usually after a failure) when the action is pressed
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: remote_start_again
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: remote_start_again
  condition: []
  action:
  - parallel:
    - service: button.press
      target:
        entity_id: button.ascent_remote_start
      data: {}
    - service: script.notify_mobile
      data:
        who: parents
        title: ''
        message: clear_notification
        tag: subaru
    - service: persistent_notification.dismiss
      data:
        notification_id: subaru
  mode: single
- id: '1665681684041'
  alias: ☑️ Turn on Water Main
  description: Turns on the water main when the action is pressed
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: turn_on_water
  - platform: event
    event_type: hass_agent_notifications
    event_data:
      action: turn_on_water
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.water_main
    data: {}
  - service: script.notify_mobile
    data:
      who: parents
      title: Water Main
      message: The water main has been turned back on after the leak was detected
      icon: local/icons/water-alert.png
      group: Water Leak
      tag: water-leak-main-on
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Water Main
      message: The water main has been turned back on after the leak was detected
  mode: single
- id: '1665682232855'
  alias: "\U0001F5A5️ [Ardena] Power Actions"
  description: Actions to run when Ardena is on/off
  trigger:
  - platform: state
    entity_id: binary_sensor.ardena_connected
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.ardena_connected
        state: 'on'
      sequence:
      - service: switch.turn_on
        entity_id: switch.computer_exhaust_fan
    - conditions:
      - condition: state
        entity_id: binary_sensor.ardena_connected
        state: 'off'
      sequence:
      - service: switch.turn_off
        entity_id: switch.computer_exhaust_fan
  mode: single
- id: '1665682307865'
  alias: "\U0001F5A5️ [Ardena] Power on Activity"
  description: Turns on Ardena when the Family Room Harmony activity is set to Computer
  trigger:
  - platform: state
    entity_id: remote.family_room
    attribute: current_activity
    to: Computer
  condition: []
  action:
  - service: switch.turn_on
    entity_id: switch.ardena
  mode: restart
- id: '1665682318040'
  alias: "\U0001F5A5️ [Ardena] Sleep When Harmony Off"
  description: Puts Ardena to sleep when the Family Room Harmony activity is Off
  trigger:
  - platform: state
    entity_id: remote.family_room
    attribute: current_activity
    from: Computer
    to: PowerOff
  condition:
  - condition: state
    entity_id: binary_sensor.ardena_connected
    state: 'on'
  action:
  - service: button.press
    data: {}
    target:
      entity_id: button.ardena_sleep
  mode: single
- id: '1665682398363'
  alias: "\U0001F4E6 Clear Packages Out for Delivery"
  description: Clears package delivery notification when packages are delivered
  trigger:
  - platform: state
    entity_id: sensor.mail_packages_in_transit
    to: '0'
  condition:
  - condition: template
    value_template: '{{ (trigger.from_state.state|int(default=0)) > 0 }}'
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) != (trigger.from_state.state|int(default=0))
      }}'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: delivery-packages-pending
  mode: single
- id: '1665682414590'
  alias: "\U0001F4E6 Mail Today"
  description: Notifies when mail will be delivered today
  trigger:
  - platform: state
    entity_id: sensor.mail_usps_mail
  condition:
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) > 0 }}'
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) != (trigger.from_state.state|int(default=0))
      }}'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: Mail Today
      message: '{{ trigger.to_state.state }} {{ "item" if trigger.to_state.state ==
        "1" else "items" }} will be in the mailbox today.'
      camera: camera.mail_usps
      url: lovelace/main
      group: Delivery
      tag: delivery-mail
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Mail Today
      message: '{{ trigger.to_state.state }} {{ "item" if trigger.to_state.state ==
        "1" else "items" }} will be in the mailbox today.'
      camera: camera.mail_usps
  mode: single
- id: '1665682445018'
  alias: "\U0001F4E6 Packages Delivered"
  description: Notifies when packages have been delivered
  trigger:
  - platform: state
    entity_id: sensor.mail_packages_delivered
  condition:
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) > 0 }}'
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) != (trigger.from_state.state|int(default=0))
      }}'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: Package Delivery
      message: '{{ trigger.to_state.state }} {{ "package is" if trigger.to_state.state
        == "1" else "packages are" }} delivered.'
      icon: local/icons/package-variant.png
      group: Delivery
      tag: delivery-packages-delivered
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Package Delivery
      message: '{{ trigger.to_state.state }} {{ "package is" if trigger.to_state.state
        == "1" else "packages are" }} delivered.'
  mode: single
- id: '1665682458887'
  alias: "\U0001F4E6 Packages Out for Delivery"
  description: Notifies when packages are out for delivery
  trigger:
  - platform: state
    entity_id: sensor.mail_packages_in_transit
  condition:
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) > 0 }}'
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) != (trigger.from_state.state|int(default=0))
      }}'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: Package Delivery
      message: '{{ trigger.to_state.state }} {{ "package is" if trigger.to_state.state
        == "1" else "packages are" }} out for delivery.'
      icon: local/icons/package.png
      group: Delivery
      tag: delivery-packages-pending
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Package Delivery
      message: '{{ trigger.to_state.state }} {{ "package is" if trigger.to_state.state
        == "1" else "packages are" }} out for delivery.'
  mode: single
- id: '1665683659569'
  alias: ⚡ Tariff Summer Off-Peak
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.home_123_1mon
    below: 700
  - platform: state
    entity_id:
    - binary_sensor.tariff_summer
    from: 'off'
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ now().month >= 6 and now().month <= 10 }}'
  action:
  - service: select.select_option
    data:
      entity_id: select.monthly_energy
      option: summer_offpeak
  - service: script.notify_mobile
    data:
      who: parents
      title: Energy Tariff Off-Peak
      message: Power usage is under 700 kWh. Now charing summer off-peak rates.
      icon: local/icons/lightning-bolt.png
      group: Power
      tag: energy-tariff
      url: lovelace/power
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Energy Tariff Off-Peak
      message: Power usage is under 700 kWh. Now charing summer off-peak rates.
  mode: single
- id: '1665683670178'
  alias: ⚡ Tariff Summer Peak
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.home_123_1mon
    above: 699
  condition:
  - condition: template
    value_template: '{{ now().month >= 6 and now().month <= 10 }}'
  action:
  - service: select.select_option
    data:
      entity_id: select.monthly_energy
      option: summer_peak
  - service: script.notify_mobile
    data:
      who: parents
      title: Energy Tariff Peak
      message: Power usage is over 700 kWh. Now charing summer peak rates.
      icon: local/icons/lightning-bolt.png
      group: Power
      tag: energy-tariff
      url: lovelace/power
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Energy Tariff Peak
      message: Power usage is over 700 kWh. Now charing summer peak rates.
  mode: single
- id: '1665683680197'
  alias: ⚡ Tariff Winter Off-Peak
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.home_123_1mon
    below: 1000
  - platform: state
    entity_id:
    - binary_sensor.tariff_winter
    from: 'off'
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ now().month <= 5 or now().month >= 11 }}'
  action:
  - service: select.select_option
    data:
      entity_id: select.monthly_energy
      option: winter_offpeak
  - service: script.notify_mobile
    data:
      who: parents
      title: Energy Tariff Off-Peak
      message: Power usage is under 1000 kWh. Now charing winter off-peak rates.
      icon: local/icons/lightning-bolt.png
      group: Power
      tag: energy-tariff
      url: lovelace/power
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Energy Tariff Off-Peak
      message: Power usage is under 1000 kWh. Now charing winter off-peak rates.
  mode: single
- id: '1665683694303'
  alias: ⚡ Tariff Winter Peak
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.home_123_1mon
    above: 999
  condition:
  - condition: template
    value_template: '{{ now().month <= 5 or now().month >= 11 }}'
  action:
  - service: select.select_option
    data:
      entity_id: select.monthly_energy
      option: winter_peak
  - service: script.notify_mobile
    data:
      who: parents
      title: Energy Tariff Peak
      message: Power usage is over 1000 kWh. Now charing winter peak rates.
      icon: local/icons/lightning-bolt.png
      group: Power
      tag: energy-tariff
      url: lovelace/power
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Energy Tariff Peak
      message: Power usage is over 1000 kWh. Now charing winter peak rates.
  mode: single
- id: '1665685653869'
  alias: "\U0001F4E6 Update USPS Mail Camera"
  description: Updates the mail image camera when mail is updated
  trigger:
  - platform: state
    entity_id: sensor.mail_updated
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: mail_and_packages.update_image
    data: {}
  mode: single
- id: '1665685849265'
  alias: "\U0001F4A1 Ethan Lamp off at Sunrise"
  description: Turns Ethan's lamp off at sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: +00:10:00
  condition: []
  action:
  - service: switch.turn_off
    entity_id: switch.ethans_lamp
  mode: single
- id: '1665685861972'
  alias: "\U0001F4A1 Ethan Lamp on at Night"
  description: Turn Ethan's lamp on at night
  trigger:
  - platform: time
    at: input_datetime.ethans_lamp_on
  condition: []
  action:
  - service: switch.turn_on
    entity_id: switch.ethans_lamp
  mode: single
- id: '1665685949212'
  alias: ⏯ Family Room Media Auto Off
  description: Automatically turn off the Media Center in the Family Room
  trigger:
  - platform: state
    entity_id: media_player.family_room_shield
    to: 'off'
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != "unavailable" }}'
  - condition: state
    entity_id: remote.family_room
    state: 'on'
  - condition: state
    entity_id: remote.family_room
    attribute: current_activity
    state: Shield TV
  action:
  - service: remote.turn_off
    entity_id: remote.family_room
  mode: restart
- id: '1665685981903'
  alias: ⏯ Living Room Media Auto Off
  description: Automatically turn off the Media Center in the Living Room
  trigger:
  - platform: state
    entity_id: media_player.living_room_shield
    to: 'off'
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != "unavailable" }}'
  - condition: state
    entity_id: remote.living_room
    state: 'on'
  - condition: state
    entity_id: remote.living_room
    attribute: current_activity
    state: Shield TV
  action:
  - service: remote.turn_off
    entity_id: remote.living_room
  mode: restart
- id: '1665685997408'
  alias: ⏯ Master Bedroom Media Auto Off
  description: Automatically turn off the Media Center in the Master Bedroom
  trigger:
  - platform: state
    entity_id: media_player.master_bedroom_shield
    to: 'off'
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != "unavailable" }}'
  - condition: state
    entity_id: remote.master_bedroom
    state: 'on'
  - condition: state
    entity_id: remote.master_bedroom
    attribute: current_activity
    state: Shield TV
  action:
  - service: remote.turn_off
    entity_id: remote.master_bedroom
  mode: restart
- id: '1665686040957'
  alias: "\U0001F9FA Dryer Running"
  description: Actions when the dryer is running and is done
  trigger:
  - platform: numeric_state
    entity_id: sensor.dryer_1min
    for:
      minutes: 2
    above: 10
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.dryer
    data: {}
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dryer_1min
      below: 10
      for:
        minutes: 2
  - parallel:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.dryer
      data: {}
    - service: script.notify_mobile
      data:
        who: parents
        title: Laundry
        message: The dryer is done!
        icon: local/icons/tumble-dryer.png
        group: Laundry
        tag: laundry-dryer
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Laundry
        message: The dryer is done!
    - service: script.notify_join
      data:
        who: shield_all
        title: Laundry
        message: The dryer is done!
        icon: local/icons/tumble-dryer.png
        group: Laundry
        tag: laundry-dryer
  mode: single
- id: '1665686051361'
  alias: "\U0001F9FA Washer Running"
  description: Actions when the washer is running and is done
  trigger:
  - platform: numeric_state
    entity_id: sensor.washer_1min
    for:
      minutes: 2
    above: 10
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.washer
    data: {}
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.washer_1min
      below: 10
      for:
        minutes: 2
  - parallel:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.washer
      data: {}
    - service: script.notify_mobile
      data:
        who: parents
        title: Laundry
        message: The washer is done!
        icon: local/icons/washing-machine.png
        group: Laundry
        tag: laundry-washer
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Laundry
        message: The washer is done!
    - service: script.notify_join
      data:
        who: shield_all
        title: Laundry
        message: The washer is done!
        icon: local/icons/washing-machine.png
        group: Laundry
        tag: laundry-washer
  mode: single
- id: '1665686312416'
  alias: "\U0001F4A1 All Lights off when Away"
  description: Turns off all the lights when no one is home
  trigger:
  - platform: state
    entity_id: group.people
    from: home
    to: not_home
    for:
      minutes: 15
  condition:
  - condition: sun
    after: sunrise
    after_offset: 00:45:00
  - condition: sun
    before: sunset
    before_offset: -00:45:00
  action:
  - parallel:
    - service: homeassistant.turn_off
      entity_id: group.all_light_switches
    - service: script.notify_mobile
      data:
        who: parents
        title: Lights Out
        message: The lights have been turned off since no one is home.
        icon: local/icons/lightbulb.png
        group: Light
  mode: single
- id: '1665686481763'
  alias: "\U0001F4A1 Dim Front Lights at Night"
  description: Dims the front lights at night
  trigger:
  - platform: time
    at: input_datetime.lights_front_night_dim
  condition: []
  action:
  - service: light.turn_on
    data:
      transition: 360
      brightness_pct: 2
    target:
      entity_id: light.outside_front
  mode: single
- id: '1665686521519'
  alias: "\U0001F4A1 Front Lights off at Sunrise"
  description: Turns the front lights off at sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: +00:20:00
  condition: []
  action:
  - service: light.turn_off
    entity_id: light.outside_front
  mode: single
- id: '1665686549835'
  alias: "\U0001F4A1 Front Lights on at Sunset"
  description: Turns the front lights on at sunset
  trigger:
  - platform: sun
    event: sunset
    offset: -00:20:00
  condition:
  - condition: time
    before: input_datetime.lights_front_night_dim
    after: 00:00:00
  action:
  - service: light.turn_on
    entity_id: light.outside_front
    data:
      brightness: 255
  mode: single
- id: '1665686584864'
  alias: "\U0001F4A1 Living Room Lamps off at Night"
  description: Turns off the Living Room lamps at night
  trigger:
  - platform: time
    at: input_datetime.living_room_lamps_off
  condition: []
  action:
  - service: light.turn_off
    entity_id: light.living_room_floor_lamp
  - service: light.turn_off
    entity_id: light.living_room_lamp
  mode: single
- id: '1665686606211'
  alias: "\U0001F4A1 Living Room Lamps on at Sunset"
  description: Turns the Living Room lamps on at sunset
  trigger:
  - platform: sun
    event: sunset
    offset: -00:20:00
  condition: []
  action:
  - if:
    - condition: state
      entity_id: light.living_room_floor_lamp
      state: 'off'
    then:
    - service: light.turn_on
      entity_id: light.living_room_floor_lamp
      data:
        transition: 30
        brightness: 100
        color_temp: 370
  - if:
    - condition: state
      entity_id: light.living_room_lamp
      state: 'off'
    then:
    - service: light.turn_on
      entity_id: light.living_room_lamp
      data:
        transition: 30
        brightness: 100
  mode: single
- id: '1665686715952'
  alias: "\U0001F4A1 Turn Lights On when Arrive"
  description: Turns lights on when someone arrives home after sunset
  trigger:
  - platform: state
    entity_id: group.people
    from: not_home
    to: home
    for:
      minutes: 1
  condition:
  - condition: sun
    after: sunset
    after_offset: -0:30:00
  - condition: time
    before: '23:59:59'
    after: 00:00:00
  action:
  - parallel:
    - service: homeassistant.turn_on
      entity_id: switch.garage_entry_light
    - service: light.turn_on
      entity_id: light.living_room
      data:
        brightness: 255
    - service: light.turn_on
      entity_id: light.kitchen
      data:
        brightness: 255
    - service: script.notify_mobile
      data:
        who: parents
        title: Lights On
        message: Welcome home, some lights have been turned on for you since it's
          dark.
        icon: local/icons/lightbulb-on.png
        group: Light
  - delay:
      minutes: 5
  - service: homeassistant.turn_off
    entity_id: switch.garage_entry_light
  mode: single
- id: '1665686852635'
  alias: "\U0001F512 Front Door Lock at Night"
  description: ''
  trigger:
  - platform: time
    at: input_datetime.front_door_lock_night
  condition:
  - condition: state
    entity_id: lock.lock_front
    state: unlocked
  - condition: state
    entity_id: binary_sensor.front_door_is_open
    state: 'off'
  action:
  - service: lock.lock
    entity_id: lock.lock_front
  mode: single
- id: '1665686891355'
  alias: "\U0001F512 Front Door Lock Jammed"
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.lock_front_access_control_lock_jammed
    to: 'on'
  condition: []
  action:
  - parallel:
    - service: script.notify_mobile
      data:
        who: parents
        title: Front Door Lock Issue
        message: '{{ message }}'
        icon: local/icons/lock-smart.png
        group: Security
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Front Door Lock Issue
        message: '{{ message }}'
    - service: script.notify_join
      data:
        who: shield_all
        title: Front Door Lock Issue
        message: '{{ message }}'
        icon: local/icons/lock-smart.png
        group: Security
    - service: script.notify_speech
      data:
        media_player: media_player.living_room_speaker
        message: '{{ message }}'
  mode: single
  variables:
    message: Check the front door, something is wrong with the lock.
- id: '1665686913548'
  alias: "\U0001F512 Front Door Lock when Away"
  description: ''
  trigger:
  - platform: state
    entity_id: group.people
    from: home
    to: not_home
    for:
      minutes: 5
  condition:
  - condition: time
    after: input_datetime.front_door_auto_lock_off
    before: input_datetime.front_door_lock_night
  - condition: state
    entity_id: lock.lock_front
    state: unlocked
  action:
  - parallel:
    - service: lock.lock
      entity_id: lock.lock_front
    - service: script.notify_mobile
      data:
        who: parents
        title: Front Door Lock
        message: The Front Door has been locked since no one is home.
        icon: local/icons/lock.png
        group: Security
  mode: single
- id: '1665686933625'
  alias: "\U0001F512 Front Door Re-lock after Unlock"
  description: ''
  trigger:
  - platform: state
    entity_id: lock.lock_front
    to: unlocked
    for:
      minutes: 2
  condition:
  - condition: time
    after: input_datetime.front_door_lock_night
    before: input_datetime.front_door_auto_lock_off
  - condition: state
    entity_id: binary_sensor.front_door_is_open
    state: 'off'
  action:
  - service: lock.lock
    entity_id: lock.lock_front
  mode: single
- id: '1665687778783'
  alias: "\U0001F37D️ Dishwasher is Running"
  description: Sets dishwasher status and sends notification when the dishwasher is
    done
  trigger:
  - platform: numeric_state
    entity_id: sensor.dishwasher_disposal_1min
    for:
      minutes: 2
    above: 40
  condition:
  - or:
    - condition: state
      entity_id: input_select.dishwasher_status
      state: 'Off'
    - condition: state
      entity_id: input_select.dishwasher_status
      state: Clean
  action:
  - service: timer.start
    target:
      entity_id: timer.dishwasher_run_time
    data: {}
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Washing
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dishwasher_disposal_1min
      below: 20
      for:
        minutes: 2
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Draining
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dishwasher_disposal_1min
      above: 200
      for:
        minutes: 2
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Rinsing
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dishwasher_disposal_1min
      below: 20
      for:
        minutes: 2
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Drying
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dishwasher_disposal_1min
      below: 20
      for:
        minutes: 5
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: 'Off'
  - service: timer.finish
    target:
      entity_id: timer.dishwasher_run_time
    data: {}
  - parallel:
    - service: script.notify_mobile
      data:
        who: parents
        title: Dishwasher
        message: The dishwasher is done!
        icon: local/icons/dishwasher.png
        tag: dishwasher
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Dishwasher
        message: The dishwasher is done!
    - service: script.notify_join
      data:
        who: shield_all
        title: Dishwasher
        message: The dishwasher is done!
        icon: local/icons/dishwasher.png
        tag: dishwasher
  mode: single
- id: '1665687879665'
  alias: "\U0001F4AC Door Closed"
  description: Clears notification when doors are closed
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_is_open
    - binary_sensor.sliding_door_is_open
    - binary_sensor.garage_entry_door_is_open
    - binary_sensor.garage_side_door_is_open
    from: 'on'
    to: 'off'
    for:
      seconds: 30
  condition: []
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: door-{{ trigger.to_state.object_id }}
  - if:
    - condition: template
      value_template: "{%- set ns = namespace(pass=true) -%}\n{%- set open_doors =
        states|selectattr('entity_id', 'in', state_attr('group.all_doors', 'entity_id'))|selectattr('state',
        '==', 'on')|map(attribute='entity_id')|list -%}\n{%- for entity_id in open_doors
        if ns.pass -%}\n  {%- set ns.pass = false -%}\n{%- endfor -%}\n{{ ns.pass
        }}"
    then:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.ignore_alert_doors
      data: {}
    - service: script.notify_mobile
      data:
        who: parents
        title: ''
        message: clear_notification
        tag: door-alerts-ignored
  mode: single
- id: '1665687917160'
  alias: "\U0001F4AC Door Left Open"
  description: Sends notification when a door is left open
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_is_open
    - binary_sensor.sliding_door_is_open
    - binary_sensor.garage_entry_door_is_open
    - binary_sensor.garage_side_door_is_open
    from: 'off'
    to: 'on'
    for:
      minutes: 5
  condition:
  - condition: state
    entity_id: input_boolean.ignore_alert_doors
    state: 'off'
  action:
  - repeat:
      until:
      - or:
        - condition: state
          entity_id: input_boolean.ignore_alert_doors
          state: 'on'
        - condition: template
          value_template: '{{ is_state(trigger.to_state.entity_id, "off") }}'
      sequence:
      - variables:
          name: '{{ trigger.to_state.name }}'
          message: The {{ name }} has been open for {{ trigger.to_state.last_changed|relative_time
            }}.
      - parallel:
        - service: script.notify_mobile
          data:
            who: parents
            title: '{{ name }}'
            message: '{{ message }}'
            icon: local/icons/door-open.png
            group: Security
            tag: door-{{ trigger.to_state.object_id }}
            url: lovelace/security
            actions:
            - action: ignore_door_alerts
              title: Ignore Alerts
        - service: script.notify_hass_agent
          data:
            computer: erebus
            title: '{{ name }}'
            message: '{{ message }}'
            actions:
            - action: ignore_door_alerts
              title: Ignore Alerts
        - service: script.notify_join
          data:
            who: shield_all
            title: '{{ name }}'
            message: '{{ message }}'
            icon: local/icons/door-open.png
            group: Security
            tag: door-{{ trigger.to_state.object_id }}
        - service: script.notify_speech
          data:
            media_player: media_player.google_speakers
            message: '{{ message }}'
      - wait_template: '{{ is_state(trigger.to_state.entity_id, "off") }}'
        timeout: 00:05:00
  mode: parallel
- id: '1665687973181'
  alias: "\U0001F4AC Door Left Open and Leaving"
  description: Sends notification if a door is open and everybody leaves
  trigger:
  - platform: state
    entity_id: group.people
    from: home
    to: not_home
    for:
      minutes: 1
  condition:
  - condition: template
    value_template: "{%- set ns = namespace(found=false) -%}\n{%- set open_doors =
      states|selectattr('entity_id', 'in', state_attr('group.all_doors', 'entity_id'))|selectattr('state',
      '==', 'on')|list -%}\n{%- for entity_id in open_doors if not ns.found -%}\n
      \ {%- set ns.found = true -%}\n{%- endfor -%}\n{{ ns.found }}"
  - condition: state
    entity_id: input_boolean.ignore_alert_doors
    state: 'off'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: Door Left Open
      message: '{{ message }}'
      icon: local/icons/door-open.png
      group: Security
      url: lovelace/security
      actions:
      - action: ignore_door_alerts
        title: Ignore
  mode: single
  variables:
    message: "{%- set open_doors = states|selectattr('entity_id', 'in', state_attr('group.all_doors',
      'entity_id'))|selectattr('state', '==', 'on')|list -%} {%- for entity in open_doors
      -%}\n  {%- if loop.first %} The {% elif loop.last %}, and the {% else %}, the
      {% endif -%}\n  {{ entity.name }} was left open when you left!\n{%- endfor %}"
- id: '1665687990814'
  alias: "\U0001F4AC Door Opened and Away"
  description: Sends notification if a door is open when people are away
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_is_open
    - binary_sensor.sliding_door_is_open
    - binary_sensor.garage_entry_door_is_open
    - binary_sensor.garage_side_door_is_open
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: group.people
    state: not_home
  - condition: state
    entity_id: input_boolean.ignore_alert_doors
    state: 'off'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: Door Opened
      message: The {{ trigger.to_state.attributes.friendly_name }} opened and no one
        is home.
      icon: local/icons/door-open.png
      group: Security
      tag: door-{{ trigger.to_state.object_id }}
      url: lovelace/security
      actions:
      - action: ignore_door_alerts
        title: Ignore
  mode: single
- id: '1665688061009'
  alias: "\U0001F514 Doorbell Motion"
  description: Actions when the ring doorbell detects motion
  trigger:
  - platform: state
    entity_id: binary_sensor.doorbell_motion
    to: 'on'
  condition: []
  action:
  - service: script.notify_join
    data:
      who: shield_all
      title: Door Bell
      message: There is motion at the Front Door
      icon: local/icons/run-fast.png
  - if:
    - condition: state
      entity_id: light.office_desk_led
      state: 'on'
    then:
    - service: number.set_value
      data:
        value: '80'
      target:
        entity_id: number.office_desk_led_speed
    - service: light.turn_on
      target:
        entity_id: light.office_desk_led
      data:
        effect: Phased
    - delay:
        seconds: 5
    - service: light.turn_on
      target:
        entity_id: light.office_desk_led
      data:
        effect: Solid
  mode: single
- id: '1665688080710'
  alias: "\U0001F514 Doorbell Ring"
  description: Actions when the ring doorbell is pressed
  trigger:
  - platform: state
    entity_id: binary_sensor.doorbell_ding
    to: 'on'
  condition: []
  action:
  - parallel:
    - if:
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.audio_notifications
          state: 'on'
        - condition: template
          value_template: '{% set current_time = (now().second + (now().minute * 60)
            + (now().hour * 3600)) %} {% set start = state_attr("input_datetime.audio_notifications_start",
            "timestamp") | int %} {% set end = state_attr("input_datetime.audio_notifications_end",
            "timestamp") | int %} {% set nap_start = state_attr("input_datetime.nap_time_start",
            "timestamp") | int %} {% set nap_end = state_attr("input_datetime.nap_time_end",
            "timestamp") | int %} {{ (start <= current_time <= end) and (nap_start
            > current_time or current_time > nap_end) }}'
      then:
      - service: media_player.volume_set
        data:
          volume_level: 0
        target:
          entity_id: media_player.google_speakers
      - service: media_player.turn_on
        data: {}
        target:
          entity_id: media_player.google_speakers
        enabled: true
      - service: media_player.volume_set
        data:
          volume_level: 1
        target:
          entity_id: media_player.google_speakers
      - service: media_player.play_media
        data:
          media_content_type: audio/mp3
          media_content_id: media-source://media_source/sounds/ds9_doorchime.mp3
        target:
          entity_id: media_player.google_speakers
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
      - service: media_player.volume_set
        data:
          volume_level: 0.5
        target:
          entity_id: media_player.google_speakers
      - service: media_player.turn_off
        data: {}
        target:
          entity_id: media_player.google_speakers
      enabled: true
    - service: script.notify_join
      data:
        who: shield_all
        title: Door Bell
        message: Someone is at the Front Door
        icon: local/icons/doorbell-video.png
    - if:
      - condition: state
        entity_id: light.office_desk_led
        state: 'on'
      then:
      - service: number.set_value
        data:
          value: '180'
        target:
          entity_id: number.office_desk_led_speed
      - service: light.turn_on
        target:
          entity_id: light.office_desk_led
        data:
          effect: Sunrise
      - delay:
          seconds: 5
      - service: light.turn_on
        target:
          entity_id: light.office_desk_led
        data:
          effect: Solid
  mode: single
- id: '1665688313389'
  alias: "\U0001F6A6 Garage Light Switch Status"
  description: Set Garage light switch LED when Garage Door and light status
  trigger:
  - platform: state
    entity_id:
    - cover.garage_door
    - light.garage
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: cover.garage_door
        state: closed
      - condition: state
        entity_id: light.garage
        state: 'off'
      sequence:
      - service: script.inovelli_blue_led
        data:
          target:
            entity_id: light.garage
    - conditions:
      - condition: state
        entity_id: cover.garage_door
        state: closed
      - condition: state
        entity_id: light.garage
        state: 'on'
      sequence:
      - service: script.inovelli_blue_led
        data:
          target:
            entity_id: light.garage
    - conditions:
      - condition: state
        entity_id: cover.garage_door
        state: open
      - condition: state
        entity_id: light.garage
        state: 'off'
      sequence:
      - service: script.inovelli_blue_led
        data:
          color: Red
          effect: Pulse
          level: 40
          target:
            entity_id: light.garage
    - conditions:
      - condition: state
        entity_id: cover.garage_door
        state: open
      - condition: state
        entity_id: light.garage
        state: 'on'
      sequence:
      - service: script.inovelli_blue_led
        data:
          color: Purple
          effect: Pulse
          level: 40
          target:
            entity_id: light.garage
  mode: restart
- id: '1665688406559'
  alias: "\U0001F6A6 Office Light Switch Status"
  description: Set Office light switch LED light status
  trigger:
  - platform: state
    entity_id:
    - light.office_light
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''off'' }}'
      sequence:
      - service: script.inovelli_blue_led
        data:
          color: Red
          effect: Solid
          level: 1
          target:
            entity_id: light.office_switch
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''on'' }}'
      sequence:
      - service: script.inovelli_blue_led
        data:
          color: Green
          effect: Solid
          target:
            entity_id: light.office_switch
  mode: restart
- id: '1665688920005'
  alias: "\U0001F514 Doorbell Motion or Ring"
  description: Activity when motion is detected or rung at night
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.doorbell_ding
    - binary_sensor.doorbell_motion
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: time
      after: input_datetime.lights_front_night_dim
      before: 00:00:00
    - condition: sun
      before: sunrise
      before_offset: -01:00:00
  action:
  - service: light.turn_on
    entity_id: light.outside_front
    data:
      brightness: 255
  - delay:
      minutes: 5
  - service: light.turn_on
    entity_id: light.outside_front
    data:
      brightness: 13
      transition: 360
  mode: restart
- id: '1665689270166'
  alias: "\U0001F4AC Garage Door Closed"
  description: Clears notifications when the garage door closes
  trigger:
  - platform: state
    entity_id: cover.garage_door
    to: closed
  condition: []
  action:
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.ignore_alert_garage_door
    data: {}
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: garage-door
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: garage-door-alerts-ignored
  mode: single
- id: '1665689284289'
  alias: "\U0001F4AC Garage Door Left Open"
  description: Sends notification if the garage door is left open
  trigger:
  - platform: state
    entity_id:
    - cover.garage_door
    to: open
    for:
      minutes: 30
  condition:
  - condition: state
    entity_id: binary_sensor.garage_occupancy
    state: 'off'
  - condition: state
    entity_id: input_boolean.ignore_alert_garage_door
    state: 'off'
  action:
  - repeat:
      until:
      - or:
        - condition: state
          entity_id: input_boolean.ignore_alert_garage_door
          state: 'on'
        - condition: template
          value_template: '{{ is_state(trigger.to_state.entity_id, "closed") }}'
      sequence:
      - variables:
          name: '{{ trigger.to_state.name }}'
          message: The {{ name }} has been open for {{ trigger.to_state.last_changed|relative_time
            }}.
      - parallel:
        - service: script.notify_mobile
          data:
            who: parents
            title: '{{ name }}'
            message: '{{ message }}'
            icon: local/icons/garage-open.png
            group: Security
            tag: garage-door
            url: lovelace/security
            actions:
            - action: ignore_garage_door_alerts
              title: Ignore Alerts
            - action: close_garage_door
              title: Close
        - service: script.notify_hass_agent
          data:
            computer: erebus
            title: '{{ name }}'
            message: '{{ message }}'
            actions:
            - action: ignore_garage_door_alerts
              title: Ignore Alerts
            - action: close_garage_door
              title: Close
        - service: script.notify_join
          data:
            who: shield_all
            title: '{{ name }}'
            message: '{{ message }}'
            icon: local/icons/garage-open.png
            group: Security
            tag: garage-door
        - service: script.notify_speech
          data:
            media_player: media_player.google_speakers
            message: '{{ message }}'
      - wait_template: '{{ is_state(trigger.to_state.entity_id, "closed") }}'
        timeout: 00:30:00
  mode: single
- id: '1665689297011'
  alias: "\U0001F4AC Garage Door Left Open and Leaving"
  description: Sends notification if a door is open and everybody leaves
  trigger:
  - platform: state
    entity_id: group.people
    from: home
    to: not_home
    for:
      minutes: 1
  condition:
  - condition: state
    entity_id: cover.garage_door
    state: open
  - condition: state
    entity_id: input_boolean.ignore_alert_garage_door
    state: 'off'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: Garage Door Open
      message: The Garage Door was left open when you left! Close it!
      icon: local/icons/garage-open.png
      group: Security
      tag: garage-door
      url: lovelace/security
      actions:
      - action: ignore_garage_door_alerts
        title: Ignore Alerts
      - action: close_garage
        title: Close
  mode: single
- id: '1665689312993'
  alias: "\U0001F4AC Garage Door Opened and Away"
  description: Sends notification if the garage door is open people are away
  trigger:
  - platform: state
    entity_id: cover.garage_door
    to: open
  condition:
  - condition: state
    entity_id: group.people
    state: not_home
  - condition: state
    entity_id: input_boolean.ignore_alert_garage_door
    state: 'off'
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: Garage Door Open
      message: The Garage Door opened and no one is home.
      icon: local/icons/garage-open.png
      group: Security
      tag: garage-door
      url: lovelace/security
      actions:
      - action: ignore_garage_door_alerts
        title: Ignore Alerts
      - action: close_garage
        title: Close
  mode: single
- id: '1665689401522'
  alias: "\U0001F4AC Garbage Collection"
  description: Sends a notification when the garbage or recycling need to be taken
    to the curb.
  trigger:
  - platform: state
    entity_id:
    - sensor.garbage
    - sensor.recycling
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state|int != trigger.from_state.state|int
      }}'
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.to_state.state|int == 2 }}'
    then:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.{{ object_id }}_collection
  - if:
    - condition: template
      value_template: '{{ trigger.to_state.state|int < 2 }}'
    - condition: template
      value_template: '{{ is_state("input_boolean." ~ object_id ~ "_collection", "off")
        }}'
    then:
    - service: script.notify_mobile
      data:
        who: parents
        title: '{{ name }}'
        message: '{{ name }} will be picked up {{ time }}'
        icon: local/icons/{{ icon }}.png
        group: Garbage
        tag: '{{ name|lower }}-collection'
        url: lovelace/main
        actions:
        - action: '{{ name|lower }}_collection'
          title: Can on curb
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: '{{ name }}'
        message: '{{ name }} will be picked up {{ time }}'
  mode: single
  variables:
    name: '{{ trigger.to_state.name }}'
    object_id: '{{ trigger.to_state.object_id }}'
    icon: '{{ trigger.to_state.attributes.icon|replace("mdi:", "") }}'
    time: '{{ iif(trigger.to_state.state|int == 0, "today", "tomorrow", "") }}'
- id: '1665689446961'
  alias: "\U0001F4AC Potty Time"
  description: Reminder to go potty
  trigger:
  - platform: time_pattern
    hours: '*'
  condition:
  - condition: state
    entity_id: input_boolean.audio_notifications
    state: 'on'
  - condition: template
    value_template: '{% set current_time = (now().second + (now().minute * 60) + (now().hour
      * 3600)) %} {% set start = state_attr("input_datetime.audio_notifications_start",
      "timestamp") | int %} {% set end = state_attr("input_datetime.audio_notifications_end",
      "timestamp") | int %} {% set nap_start = state_attr("input_datetime.nap_time_start",
      "timestamp") | int %} {% set nap_end = state_attr("input_datetime.nap_time_end",
      "timestamp") | int %} {{ (start <= current_time <= end) and (nap_start > current_time
      or current_time > nap_end) }}'
  action:
  - service: media_player.volume_set
    data:
      volume_level: 0.4
    target:
      entity_id: media_player.living_room_speaker
  - service: media_player.play_media
    data:
      media_content_type: audio/opus
      media_content_id: media-source://media_source/sounds/clementine.opus
    target:
      entity_id: media_player.living_room_speaker
  - delay:
      seconds: 20
  - service: media_player.media_stop
    target:
      entity_id: media_player.living_room_speaker
    data: {}
  - service: media_player.volume_set
    data:
      volume_level: 0.5
    target:
      entity_id: media_player.living_room_speaker
  mode: single
- id: '1665689633891'
  alias: "\U0001F4AC Subaru Failed Notification"
  description: Sends a notification when the Subaru fails to start
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: persistent_notification
      service: create
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.service_data.title == "Subaru" and "failed"
      in trigger.event.data.service_data.message }}'
  action:
  - parallel:
    - service: script.notify_mobile
      data:
        who: parents
        title: Subaru Remote Start
        message: '{{ message }}'
        icon: local/icons/car-estate.png
        group: Subaru
        tag: subaru
        url: lovelace/subaru
        actions:
        - action: remote_start_again
          title: Retry
    - service: script.notify_join
      data:
        who: shield_all
        title: Subaru Remote Start
        message: '{{ message }}'
        icon: local/icons/car-estate.png
        group: Subaru
        tag: subaru
    - service: script.notify_speech
      data:
        media_player: media_player.living_room_speaker
        message: '{{ message }}'
  mode: single
  variables:
    message: The Subaru did not start, please try again
- id: '1665689705099'
  alias: "\U0001F3E2 Office Day Mode"
  description: Turns on the office computer and all the lights on a workday
  trigger:
  - platform: time
    at: input_datetime.office_day_mode
  condition:
  - condition: state
    entity_id: person.joshua
    state: home
  - condition: state
    entity_id: binary_sensor.workday
    state: 'on'
  action:
  - service: script.office_lights_day_mode
    data: {}
  - service: switch.turn_on
    data:
      entity_id: switch.erebus
  mode: single
- id: '1665689732088'
  alias: "\U0001F3E2 Office Night Mode"
  description: Dims and sets the office lights to warm in the evening
  trigger:
  - platform: time
    at: input_datetime.office_night_mode
  condition:
  - condition: state
    entity_id: light.office_light
    state: 'on'
  action:
  - service: script.office_lights_night_mode
    data:
      transition: 1800
  mode: single
- id: '1665695603571'
  alias: "\U0001F5FA️ Leaving Costco"
  description: Sends a notification when someone is leaving Costco
  trigger:
  - platform: state
    entity_id:
    - person.joshua
    - person.amy
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state == zone_state and trigger.to_state.state
      != zone_state }}'
  - condition: time
    after: 08:00:00
    before: '21:00:00'
  action:
  - parallel:
    - service: script.notify_mobile
      data:
        who: parents
        title: '{{ name }} Leaving Costco'
        message: '{{ message }}'
        group: Presence
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: '{{ name }} Leaving Costco'
        message: '{{ message }}'
    - service: script.notify_speech
      data:
        media_player: media_player.living_room_speaker
        message: '{{ message }}'
  - delay:
      minutes: 5
  mode: single
  variables:
    zone_state: '{{ states["zone.costco"].name }}'
    name: '{{ trigger.to_state.name }}'
    message: "{% set names = {'Amy': 'mom', 'Joshua': 'dad'} %}\n{% set name = trigger.to_state.name
      %}\n{% set message = [\n  'Just a heads up, [name] is done at Costco.',\n  'Your
      [name] is on the way home from Costco.'\n]|random %}\n{{ message|replace('[name]',
      names[name]) }}"
- id: '1665695645337'
  alias: "\U0001F5FA️ Leaving Fred Meyer"
  description: Sends a notification when someone is leaving Fred Meyer
  trigger:
  - platform: state
    entity_id:
    - person.joshua
    - person.amy
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state == zone_state and trigger.to_state.state
      != zone_state }}'
  - condition: time
    after: 08:00:00
    before: '21:00:00'
  action:
  - parallel:
    - service: script.notify_mobile
      data:
        who: parents
        title: '{{ name }} Leaving Fred Meyer'
        message: '{{ message }}'
        group: Presence
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: '{{ name }} Leaving Fred Meyer'
        message: '{{ message }}'
    - service: script.notify_speech
      data:
        media_player: media_player.living_room_speaker
        message: '{{ message }}'
  - delay:
      minutes: 5
  mode: single
  variables:
    zone_state: '{{ states["zone.fred_meyer"].name }}'
    name: '{{ trigger.to_state.name }}'
    message: "{% set names = {'Amy': 'mom', 'Joshua': 'dad'} %}\n{% set name = trigger.to_state.name
      %}\n{% set message = [\n  'Just a heads up, [name] is done at Fred Meyer.',\n
      \ 'Your [name] is on the way home from Fred Meyer.'\n]|random %}\n{{ message|replace('[name]',
      names[name]) }}"
- id: '1665695671502'
  alias: "\U0001F5FA️ Leaving Wal-Mart"
  description: Sends a notification when someone is leaving Wal-Mart
  trigger:
  - platform: state
    entity_id:
    - person.joshua
    - person.amy
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state == zone_state and trigger.to_state.state
      != zone_state }}'
  - condition: time
    after: 08:00:00
    before: '21:00:00'
  action:
  - parallel:
    - service: script.notify_mobile
      data:
        who: parents
        title: '{{ name }} Leaving Wal-Mart'
        message: '{{ message }}'
        group: Presence
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: '{{ name }} Leaving Wal-Mart'
        message: '{{ message }}'
    - service: script.notify_speech
      data:
        media_player: media_player.living_room_speaker
        message: '{{ message }}'
  - delay:
      minutes: 5
  mode: single
  variables:
    zone_state: '{{ states["zone.wal_mart"].name }}'
    name: '{{ trigger.to_state.name }}'
    message: "{% set names = {'Amy': 'mom', 'Joshua': 'dad'} %}\n{% set name = trigger.to_state.name
      %}\n{% set message = [\n  'Just a heads up, [name] is done at Wal-Mart.',\n
      \ 'Your [name] is on the way home from Wal-Mart.'\n]|random %}\n{{ message|replace('[name]',
      names[name]) }}"
- id: '1665695701399'
  alias: "\U0001F5FA️ Leaving WinCo"
  description: Sends a notification when someone is leaving WinCo
  trigger:
  - platform: state
    entity_id:
    - person.joshua
    - person.amy
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state == zone_state and trigger.to_state.state
      != zone_state }}'
  - condition: time
    after: 08:00:00
    before: '21:00:00'
  action:
  - parallel:
    - service: script.notify_mobile
      data:
        who: parents
        title: '{{ name }} Leaving Win-Co'
        message: '{{ message }}'
        group: Presence
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: '{{ name }} Leaving Win-Co'
        message: '{{ message }}'
    - service: script.notify_speech
      data:
        media_player: media_player.living_room_speaker
        message: '{{ message }}'
  - delay:
      minutes: 5
  mode: single
  variables:
    zone_state: '{{ states["zone.winco"].name }}'
    name: '{{ trigger.to_state.name }}'
    message: "{% set names = {'Amy': 'mom', 'Joshua': 'dad'} %}\n{% set name = trigger.to_state.name
      %}\n{% set message = [\n  'Just a heads up, [name] is done at Win-Co.',\n  'Your
      [name] is on the way home from Win-Co.'\n]|random %}\n{{ message|replace('[name]',
      names[name]) }}"
- id: '1665695892233'
  alias: "\U0001F5A8️ Low Toner"
  description: Sends a notification when the printer toner is low
  trigger:
  - platform: numeric_state
    entity_id: sensor.canon_mf743c_black_toner
    below: 7
  - platform: numeric_state
    entity_id: sensor.canon_mf743c_cyan_toner
    below: 7
  - platform: numeric_state
    entity_id: sensor.canon_mf743c_magenta_toner
    below: 7
  - platform: numeric_state
    entity_id: sensor.canon_mf743c_yellow_toner
    below: 7
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != "unknown" and trigger.to_state.state
      != "unavailable" }}'
  action:
  - parallel:
    - service: persistent_notification.create
      data:
        title: Printer Alert
        message: '{{ message }}'
        notification_id: printer-toner-low
    - service: script.notify_mobile
      data:
        who: josh
        title: Printer Alert
        message: '{{ message }}'
        icon: local/icons/printer-alert.png
        group: System
        tag: printer-toner-low
        url: dashboard-system/overview
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Printer Alert
        message: '{{ message }}'
  mode: single
  variables:
    message: The {{ trigger.to_state.attributes.friendly_name }} is low
- id: '1665695909455'
  alias: "\U0001F5A8️ Out of Paper"
  description: Sends a notification when the printer runs out of paper
  trigger:
  - platform: state
    entity_id: sensor.canon_mf743c_paper_tray
    to: empty
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != "unknown" and trigger.to_state.state
      != "unavailable" }}'
  action:
  - parallel:
    - service: persistent_notification.create
      data:
        title: Printer Alert
        message: '{{ message }}'
        notification_id: printer-paper-low
    - service: script.notify_mobile
      data:
        who: josh
        title: Printer Alert
        message: '{{ message }}'
        icon: local/icons/printer-alert.png
        group: System
        tag: printer-paper-low
        url: dashboard-system/overview
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Printer Alert
        message: '{{ message }}'
  mode: single
  variables:
    message: The {{ trigger.to_state.attributes.friendly_name }} is out of paper
- id: '1665695943529'
  alias: ⏯ PS4 Harmony Activity
  description: Turns on the PS4 when the activity is active
  trigger:
  - platform: state
    entity_id: remote.family_room
    to: 'on'
  condition:
  - condition: state
    entity_id: remote.family_room
    attribute: current_activity
    state: PS4
  action:
  - service: media_player.turn_on
    entity_id: media_player.playstation_4
  mode: single
- id: '1665695979311'
  alias: "\U0001F5A5️ [Quest] Charge Complete"
  description: Sends notification when Quest is done charging
  trigger:
  - platform: numeric_state
    entity_id: sensor.quest_battery_level
    above: '95'
  condition:
  - condition: state
    entity_id: sensor.quest_battery_state
    state: charging
  - condition: state
    entity_id: sensor.quest_charger_type
    state: ac
  - condition: state
    entity_id: binary_sensor.quest_interactive
    state: 'off'
  action:
  - service: script.notify_mobile
    data:
      who: josh
      title: Quest is Charged
      message: The Quest is charged, you should unplug it
      icon: local/icons/battery-charging-high.png
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Quest is Charged
      message: The Quest is charged, you should unplug it
  mode: single
- id: '1665696022820'
  alias: "\U0001F5A5️ [Quest] Charge Soon"
  description: Sends notification when Quest needs charging
  trigger:
  - platform: numeric_state
    entity_id: sensor.quest_battery_level
    below: '15'
  condition:
  - condition: state
    entity_id: sensor.quest_battery_state
    state: discharging
  - condition: state
    entity_id: binary_sensor.quest_interactive
    state: 'off'
  action:
  - service: script.notify_mobile
    data:
      who: josh
      title: Quest Low Charge
      message: The Quest needs to be charged
      icon: local/icons/battery-alert.png
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: Quest Low Charge
      message: The Quest needs to be charged
  mode: single
- id: '1665696049425'
  alias: "\U0001F5A5️ [Quest] Interactive"
  description: Actions to take when the Quest is being used
  trigger:
  - platform: state
    entity_id: binary_sensor.quest_interactive
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.quest_interactive
        state: 'on'
      sequence:
      - parallel:
        - service: light.turn_on
          data:
            transition: 1
            brightness_pct: 100
          target:
            entity_id: light.family_room
        - service: light.turn_on
          data:
            transition: 1
            brightness_pct: 100
          target:
            entity_id: light.play_space
    - conditions:
      - condition: state
        entity_id: binary_sensor.quest_interactive
        state: 'off'
      - or:
        - condition: sun
          after: sunset
          after_offset: -01:00:00
        - condition: sun
          before: sunrise
      sequence:
      - parallel:
        - service: light.turn_on
          data:
            transition: 1
            brightness_pct: 25
          target:
            entity_id: light.family_room
        - service: light.turn_on
          data:
            transition: 1
            brightness_pct: 25
          target:
            entity_id: light.play_space
    default: []
  mode: single
- id: '1665696328059'
  alias: ⏯ Family Room Sound Mode
  description: Changes the reciever sound mode based on Source
  trigger:
  - platform: state
    entity_id: media_player.family_room_shield
    attribute: source
  condition: []
  action:
  - service: media_player.select_sound_mode
    target:
      entity_id: media_player.denon_avr_s760h
    data:
      sound_mode: "{%- if trigger.to_state.attributes.source == 'Spotify' -%}\n  MCH
        STEREO\n{%- elif trigger.to_state.attributes.source in ['Youtube', 'YouTubeKids',
        'DisneyNow', 'PBS Kids', 'Hulu'] -%}\n  DOLBY DIGITAL\n{%- else -%}\n  DIRECT\n{%-
        endif -%}"
  mode: single
- id: '1665696345535'
  alias: ⏯ Living Room Sound Mode
  description: Changes the reciever sound mode based on Source
  trigger:
  - platform: state
    entity_id: media_player.living_room_shield
    attribute: source
  condition: []
  action:
  - service: media_player.select_sound_mode
    target:
      entity_id: media_player.yamaha_receiver
    data:
      sound_mode: "{%- if trigger.to_state.attributes.source == 'Spotify' -%}\n  7ch
        Stereo\n{%- elif trigger.to_state.attributes.source in ['Youtube', 'YouTubeKids',
        'DisneyNow', 'PBS Kids', 'Hulu'] -%}\n  Surround Decoder\n{%- else -%}\n  Straight\n{%-
        endif -%}"
  mode: single
- id: '1665696446379'
  alias: ⚙️ Event Sniffer [Actionable Event]
  description: Listen for Actionable events
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
  - platform: event
    event_type: hass_agent_notifications
  condition: []
  action:
  - service: persistent_notification.create
    data:
      title: Actionable Event Sniffer
      message: '{{ event_data }}'
  mode: parallel
  initial_state: false
  variables:
    event_data: '{{ trigger.event.data|default("") }}'
- id: '1665696464819'
  alias: ⚙️ Battery Level Low
  description: Sends a notification when a device battery level is low
  trigger:
  - platform: state
    entity_id: sensor.low_battery_devices
  condition:
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) > 0 }}'
  - condition: template
    value_template: '{{ (trigger.to_state.state|int(default=0)) != (trigger.from_state.state|int(default=0))
      }}'
  - condition: template
    value_template: '{{ sensors != "" }}'
  action:
  - parallel:
    - service: persistent_notification.create
      data:
        title: Low Battery Levels
        message: '{{ sensors }}'
        notification_id: low-battery-alert
    - service: script.notify_mobile
      data:
        who: josh
        title: Low Battery Levels
        message: '{{ sensors }}'
        icon: local/icons/battery-alert.png
        group: System
        tag: low-battery-alert
        url: dashboard-system/overview
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Low Battery Levels
        message: '{{ sensors }}'
  mode: single
  variables:
    sensors: "{% set threshold = 30 %} {% set ignore_entities = [\n  'sensor.galaxy_s21_battery_level',\n
      \ 'sensor.pixel_7_battery_level',\n  'sensor.ipad_josh_battery_level',\n  'sensor.quest_battery_level'\n]
      %} {% set result = namespace(sensors=[]) %} {% set devices = states.sensor\n
      \ | reject('in', ['unknown', 'unavailable', 'undefined'])\n  | rejectattr('entity_id',
      'in', ignore_entities)\n  | rejectattr('attributes.device_class', 'undefined')\n
      \ | selectattr('attributes.device_class', '==', 'battery')\n  | list\n%} {%
      for device in devices %}\n  {% if device.state | int(-1) <= threshold | int
      %}\n    {% set name = device.name | replace(': Battery level', '') | replace('
      Battery level', '') | replace(' Battery Level', '') %}\n    {% set result.sensors
      = result.sensors + [name ~ ' (' ~ device.state ~ '%)'] %}\n  {% endif %}\n{%
      endfor %} {{ result.sensors|join(', ') }}"
- id: '1665696488378'
  alias: ⚙️ Clear TTS Cache
  description: Clears the TTS cache once a week
  trigger:
  - platform: time
    at: 00:00:00
  condition:
  - condition: time
    weekday:
    - mon
    before: 00:00:00
    after: 00:00:00
  action:
  - service: tts.clear_cache
    data: {}
  mode: single
- id: '1665696511584'
  alias: ⚙️ Disk Space Low
  description: Sends a notification when the Disk space is low
  trigger:
  - platform: numeric_state
    entity_id: sensor.disk_use_percent_config
    above: 89
  condition: []
  action:
  - parallel:
    - service: persistent_notification.create
      data:
        title: Low Disk Space
        message: Disk usage is at {{ trigger.to_state.state }}%
        notification_id: low-disk-space
    - service: script.notify_mobile
      data:
        who: josh
        title: Low Disk Space
        message: Disk usage is at {{ trigger.to_state.state }}%
        icon: local/icons/micro-sd.png
        group: System
        tag: system-disk
        url: dashboard-system/overview
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Low Disk Space
        message: Disk usage is at {{ trigger.to_state.state }}%
  mode: single
- id: '1665696525167'
  alias: ⚙️ Failed Login
  description: Sends a notification when there is a failed login
  trigger:
  - platform: template
    value_template: '{{ states("persistent_notification.httplogin") != "unknown" }}'
  condition: []
  action:
  - service: script.notify_mobile
    data:
      who: josh
      title: '{{ title }}'
      message: '{{ message }}'
      icon: local/icons/home-assistant.png
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: '{{ title }}'
      message: '{{ message }}'
  mode: single
  variables:
    title: '{{ state_attr("persistent_notification.httplogin", "title") }}'
    message: '{{ state_attr("persistent_notification.httplogin", "message") }}'
- id: '1665696538493'
  alias: ⚙️ HACS Updates
  description: Create a notification when there is updates pending in HACS
  trigger:
  - platform: state
    entity_id: sensor.hacs
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != "unknown" and trigger.from_state.state
      != "unknown" }}'
  action:
  - if:
    - condition: template
      value_template: '{{ (trigger.to_state.state|int(default=0)) == 0 and (trigger.from_state.state|int(default=0))
        > 0 }}'
    then:
    - service: persistent_notification.dismiss
      data:
        notification_id: hacs-update
    - service: script.notify_mobile
      data:
        who: josh
        title: ''
        message: clear_notification
        tag: hacs-update
    else:
    - parallel:
      - service: persistent_notification.create
        data:
          title: '{{ title }}'
          message: "{%- set list = namespace(updates=[]) -%} {%- for repo in trigger.to_state.attributes.repositories
            -%}\n  {%- if repo['installed_version'] != repo['available_version'] -%}\n
            \   {% set update = '**' ~ repo.display_name ~ '** _' ~ repo['installed_version']
            ~ '_ -> _' ~ repo['available_version'] ~ '_' %}\n    {%- set list.updates
            = list.updates + [update] -%}\n  {%- endif -%}\n{%- endfor -%} {{ list.updates
            | join('\\n') }}"
          notification_id: hacs-update
      - service: script.notify_mobile
        data:
          who: josh
          title: '{{ title }}'
          message: "{%- set list = namespace(updates=[]) -%} {%- for repo in trigger.to_state.attributes.repositories
            -%}\n  {%- if repo['installed_version'] != repo['available_version'] -%}\n
            \   {% set update = '<b>' ~ repo.display_name ~ '</b> <em>' ~ repo['installed_version']
            ~ '</em> -> <em>' ~ repo['available_version'] ~ '</em>' %}\n    {%- set
            list.updates = list.updates + [update] -%}\n  {%- endif -%}\n{%- endfor
            -%} {{ list.updates | join('<br>') }}"
          icon: local/icons/update.png
          group: Upgrade
          tag: hacs-update
          url: hacs
      - service: script.notify_hass_agent
        data:
          computer: erebus
          title: '{{ title }}'
          message: "{%- set list = namespace(updates=[]) -%} {%- for repo in trigger.to_state.attributes.repositories
            -%}\n  {%- if repo['installed_version'] != repo['available_version'] -%}\n
            \   {% set update = repo.display_name ~ ': ' ~ repo['installed_version']
            ~ ' -> ' ~ repo['available_version'] %}\n    {%- set list.updates = list.updates
            + [update] -%}\n  {%- endif -%}\n{%- endfor -%} {{ list.updates | join('\\n')
            }}"
  mode: single
  variables:
    updates: '{{ iif(trigger.to_state.state|int(default=0) == 1, "Update", "Updates",
      "") }}'
    title: 'HACS: {{ trigger.to_state.state|int }} {{ updates }} Pending'
- id: '1665696553212'
  alias: ⚙️ RAM Usage High
  description: Sends a notification when the RAM usage is high
  trigger:
  - platform: numeric_state
    entity_id: sensor.memory_use_percent
    above: 59
  condition: []
  action:
  - parallel:
    - service: persistent_notification.create
      data:
        title: RAM Usage High
        message: RAM usage is at {{ trigger.to_state.state }}%
        notification_id: low-ram
    - service: script.notify_mobile
      data:
        who: josh
        title: RAM Usage High
        message: RAM usage is at {{ trigger.to_state.state }}%
        icon: local/icons/micro-sd.png
        group: System
        tag: system-ram
        url: dashboard-system/overview
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: RAM Usage High
        message: RAM usage is at {{ trigger.to_state.state }}%
  mode: single
- id: '1665696596579'
  alias: ⚙️ Startup
  description: Actions to run at startup
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: browser_mod.notification
    data:
      message: Startup automation starting...
  - delay:
      seconds: 60
  - service: button.press
    data:
      entity_id: button.ardena_publish_sensors
  - service: button.press
    data:
      entity_id: button.athos_publish_sensors
  - service: button.press
    data:
      entity_id: button.erebus_publish_sensors
  - service: browser_mod.notification
    data:
      duration: 3000
      message: Startup automation complete...
  - service: automation.turn_off
    entity_id: automation.system_startup
  mode: single
- id: '1665696665289'
  alias: ⚙️ Upgrade Available
  description: Sends a notification when a new release of Home Assistant is released
  trigger:
  - platform: state
    entity_id: binary_sensor.docker_hub_update_available
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.to_state.state == "on" and trigger.from_state.state
        != "on" }}'
    then:
    - parallel:
      - service: persistent_notification.create
        data:
          title: Upgrade Available
          message: '**Home Assistant** _{{ current_version }}_ -> _{{ available_version
            }}_

            {{ release_title }}

            [{{ action_1_title }}]({{ action_1_uri }}) | [{{ action_2_title }}]({{
            action_2_uri }})'
          notification_id: upgrade-available
      - service: script.notify_mobile
        data:
          who: josh
          title: Upgrade Available
          message: '<b>Home Assistant</b> <em>{{ current_version }}</em> -> <em>{{
            available_version }}</em><br>

            {{ release_title }}'
          icon: local/icons/update.png
          url: '{{ release_notes }}'
          group: Upgrade
          tag: upgrade-available
          actions: '{{ actons }}'
      - service: script.notify_hass_agent
        data:
          computer: erebus
          title: Upgrade Available
          message: 'Home Assistant: {{ current_version }} -> {{ available_version
            }}

            {{ release_title }}'
          actions: '{{ actons }}'
    else:
    - service: persistent_notification.dismiss
      data:
        notification_id: upgrade-available
    - service: script.notify_mobile
      data:
        who: josh
        title: ''
        message: clear_notification
        tag: upgrade-available
  mode: single
  max_exceeded: silent
  variables:
    info: sensor.home_assistant_website
    release_notes: '{{ state_attr(info, "release_notes") }}'
    release_title: '{{ state_attr(info, "release_title") }}'
    current_version: '{{ states("sensor.current_version") }}'
    available_version: '{{ states("sensor.available_version") }}'
    action_1_title: Release Notes
    action_1_uri: '{{ release_notes }}'
    action_2_title: HassPodcast
    action_2_uri: https://hasspodcast.io/episodes
    actions: "{%- set titles = [action_1_title, action_2_title] -%} {%- set uris =
      [action_1_uri, action_2_uri] -%} {%- set actions = namespace(data = []) -%}
      {%- for title in titles -%}\n  {% if title|length %}\n    {% set uri = uris[loop.index
      - 1] %}\n    {% set action_name = 'action' ~ loop.index|string %}\n    {% set
      action = {\n      'action': 'URI' if uri|length else action_name,\n      'title':
      title,\n      'uri': uri\n      }\n    %}\n    {% set actions.data = actions.data
      + [action] %}\n  {% endif %}\n{% endfor %} {{ actions.data }}"
- id: '1665696688106'
  alias: ⚙️ Event Sniffer [Z-Wave JS]
  description: Listen for Z-Wave JS events
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    alias: When Central Scene event is fired
  - platform: event
    event_type: zwave_js_notification
    alias: When Notification Command Class, Entry Control Command Class is fired
  condition:
  - condition: template
    value_template: '{{ event_label.endswith("lock operation") == False }}'
    alias: 'Ignore events already identified: Manual deadbolt operation'
  action:
  - service: persistent_notification.create
    data:
      title: ZWaveJS Event Sniffer
      message: 'event_type: {{ event_type }}

        node_id: {{ node_id }}

        label: {{ label }}

        event_label: {{ event_label }}

        event_data: {{ event_data }}'
  mode: parallel
  initial_state: false
  variables:
    event_data: '{{ trigger.event.data|default("") }}'
    event_type: '{{ trigger.event.event_type|default("") }}'
    event_label: '{{ event_data.event_label|default("") }}'
    notification_label: '{{ event_data.label|default("") }}'
    node_id: '{{ event_data.node_id|default("") }}'
- id: '1665696751056'
  alias: ⚙️ Action Sniffer [Zigbee]
  description: Listen for Zigbee actions
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/+/action
  condition: []
  action:
  - service: persistent_notification.create
    data:
      title: Zigbee Event Sniffer
      message: 'device: {{ device }}

        action: {{ action }}

        '
  - service: browser_mod.notification
    data:
      duration: 10000
      message: 'device: {{ device }}

        action: {{ action }}

        '
  variables:
    device: '{{ trigger.topic.split("/")[1] }}'
    action: '{{ trigger.payload }}'
  mode: parallel
  initial_state: false
- id: '1665697122708'
  alias: "\U0001F4A7 Leak Detected"
  description: Shuts off the water main and sends a notification when a water leak
    is detected
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.basement_bathroom_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.bathroom_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.fridge_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.master_bathroom_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.water_heater_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.laundry_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.water_main_water_leak_detected
    to: 'on'
  condition: []
  action:
  - parallel:
    - service: switch.turn_off
      entity_id: switch.water_main
    - service: persistent_notification.create
      data:
        title: '{{ title }}'
        message: '{{ message }}'
        notification_id: water-leak
    - service: script.notify_join
      data:
        who: shield_all
        title: '{{ title }}'
        message: '{{ message }}'
        icon: local/icons/water-alert.png
        group: Water Leak
        tag: water-leak
    - service: script.notify_speech
      data:
        media_player: media_player.google_speakers
        message: '{{ message }}'
  - wait_for_trigger:
    - platform: state
      entity_id: switch.water_main
      to: 'off'
    timeout: 00:00:30
  - service: script.notify_mobile
    data:
      who: parents
      title: '{{ title }}'
      message: '{{ message }}'
      icon: local/icons/water-alert.png
      group: Water Leak
      tag: water-leak
      url: lovelace/utility
      actions:
      - action: turn_on_water
        title: Turn Water Main On
  - service: script.notify_hass_agent
    data:
      computer: erebus
      title: '{{ title }}'
      message: '{{ message }}'
      actions:
      - action: turn_on_water
        title: Turn Water Main On
  - delay:
      minutes: 5
  mode: single
  variables:
    title: Water Leak Detected
    location: '{{ trigger.to_state.name|replace(" Leak Sensor", "")|replace(" Leak",
      "")|trim }}'
    message: A water leak was detected in the {{ location }} and the water main has
      been shut off.
- id: '1665697158654'
  alias: "\U0001F4A7 Leak Stopped"
  description: Clears notifications when the water leak is stopped
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.basement_bathroom_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.bathroom_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.fridge_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.master_bathroom_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.water_heater_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.laundry_leak_sensor_water_alarm_water_leak_detected
    - binary_sensor.water_main_water_leak_detected
    to: 'off'
    for:
      minutes: 10
  condition: []
  action:
  - service: script.notify_mobile
    data:
      who: parents
      title: ''
      message: clear_notification
      tag: water-leak
  mode: single
- id: '1665697614552'
  alias: "\U0001F4A7 Softener Salt Level Low"
  description: Sends a notification when the water softener salt level is low
  trigger:
  - platform: numeric_state
    entity_id: sensor.salt_level
    below: 25
    for:
      hours: 24
  condition: []
  action:
  - parallel:
    - service: persistent_notification.create
      data:
        title: Water Softener
        message: The salt level in the water softener is low.
        notification_id: water-softener
    - service: script.notify_mobile
      data:
        who: josh
        title: Water Softener
        message: The salt level in the water softener is low.
        icon: local/icons/arrow-expand-vertical.png
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: Water Softener
        message: The salt level in the water softener is low.
  mode: single
- id: '1665697635082'
  alias: "\U0001F4A7 Shut-Off Valve Overheated"
  description: Sends a notification if the water shut-off valve overheats
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.water_main_overheat_detected
    to: 'on'
  condition: []
  action:
  - parallel:
    - service: persistent_notification.create
      data:
        title: '{{ title }}'
        message: '{{ message }}'
        notification_id: water-leak
    - service: script.notify_mobile
      data:
        who: parents
        title: '{{ title }}'
        message: '{{ message }}'
        icon: local/icons/water-alert.png
        group: Water Leak
        url: lovelace/utility
    - service: script.notify_hass_agent
      data:
        computer: erebus
        title: '{{ title }}'
        message: '{{ message }}'
    - service: script.notify_join
      data:
        who: shield_all
        title: '{{ title }}'
        message: '{{ message }}'
        icon: local/icons/water-alert.png
        group: Water Leak
    - service: script.notify_speech
      data:
        media_player: media_player.google_speakers
        message: '{{ message }}'
  mode: single
  variables:
    title: Water Valve Overheated
    message: The water main shut-off valve has overheated.
- id: '1665697674006'
  alias: "\U0001F384 XMas Lights Off"
  description: ''
  trigger:
  - platform: time
    at: input_datetime.xmas_lights_off
  condition:
  - condition: template
    value_template: '{{ now().month == 12 and now().day >= 1 }}'
  action:
  - service: switch.turn_off
    entity_id: switch.xmas_light
  mode: single
- id: '1665697728164'
  alias: "\U0001F384 XMas Lights On"
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:20:00
  condition:
  - condition: time
    before: input_datetime.xmas_lights_off
    after: 00:00:00
  - condition: template
    value_template: '{{ now().month == 12 and now().day >= 1 }}'
  action:
  - service: switch.turn_on
    entity_id: switch.xmas_light
  mode: single
- id: '1665697764560'
  alias: "\U0001F384 XMas Tree Off"
  description: ''
  trigger:
  - platform: time
    at: input_datetime.xmas_tree_off
  condition:
  - condition: template
    value_template: '{{ now().month == 12 and now().day >= 1 }}'
  action:
  - service: light.turn_off
    entity_id: light.xmas_tree
  mode: single
- id: '1665697781484'
  alias: "\U0001F384 XMas Tree On"
  description: ''
  trigger:
  - platform: time
    at: input_datetime.xmas_tree_on
  condition:
  - condition: template
    value_template: '{{ now().month == 12 and now().day >= 1 }}'
  action:
  - service: light.turn_on
    entity_id: light.xmas_tree
  mode: single
- id: front_door_lock_state_change
  alias: "\U0001F6A6 Front Door Light Switch Status"
  description: Set front door light switch LED when Front Door lock state has changed
  trigger:
  - platform: state
    entity_id:
    - lock.lock_front
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''locked'' }}'
      sequence:
      - service: script.inovelli_blue_led
        data:
          target:
            entity_id: light.outside_front
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''unlocked'' }}'
      sequence:
      - service: script.inovelli_blue_led
        data:
          color: Red
          effect: Open/Close
          level: 40
          target:
            entity_id: light.outside_front
  mode: restart
- id: '1665699683348'
  alias: ⏯ Living Room Media State at Night
  description: Brighten/Dim the lights when Media is paused
  trigger:
  - platform: state
    entity_id:
    - media_player.living_room_shield
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: light.living_room
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.living_room_shield
        state: paused
      sequence:
      - service: light.turn_on
        data:
          transition: 5
          brightness_pct: 60
        target:
          entity_id: light.living_room
    - conditions:
      - condition: state
        entity_id: media_player.living_room_shield
        state: playing
      sequence:
      - service: light.turn_on
        data:
          transition: 5
          brightness_pct: 20
- id: '1665700097529'
  alias: ⏯ Family Room Media State at Night
  description: Brighten/Dim the lights when Media is paused
  trigger:
  - platform: state
    entity_id:
    - media_player.family_room_shield
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: light.family_room
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.family_room_shield
        state: paused
      sequence:
      - service: light.turn_on
        data:
          transition: 5
          brightness_pct: 60
        target:
          entity_id: light.family_room
    - conditions:
      - condition: state
        entity_id: media_player.family_room_shield
        state: playing
      sequence:
      - service: light.turn_on
        data:
          transition: 5
          brightness_pct: 20
  mode: single
- id: '1665700388935'
  alias: "\U0001F4AC Window Left Open"
  description: Sends notification if a window is left open
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door_is_open
    from: 'off'
    to: 'on'
    for:
      minutes: 30
  condition:
  - condition: state
    entity_id: input_boolean.ignore_alert_windows
    state: 'off'
  action:
  - repeat:
      until:
      - or:
        - condition: state
          entity_id: input_boolean.ignore_alert_windows
          state: 'on'
        - condition: template
          value_template: '{{ is_state(trigger.to_state.entity_id, "off") }}'
      sequence:
      - variables:
          name: '{{ trigger.to_state.name }}'
          message: The {{ name }} has been open for {{ trigger.to_state.last_changed|relative_time
            }}.
      - parallel:
        - service: script.notify_mobile
          data:
            who: parents
            title: '{{ name }}'
            message: '{{ message }}'
            icon: local/icons/window-open.png
            group: Security
            tag: window-{{ trigger.to_state.object_id }}
            url: lovelace/security
            actions:
            - action: ignore_window_alerts
              title: Ignore Alerts
        - service: script.notify_hass_agent
          data:
            computer: erebus
            title: '{{ name }}'
            message: '{{ message }}'
            actions:
            - action: ignore_window_alerts
              title: Ignore Alerts
        - service: script.notify_join
          data:
            who: shield_all
            title: '{{ name }}'
            message: '{{ message }}'
            icon: local/icons/window-open.png
            group: Security
            tag: window-{{ trigger.to_state.object_id }}
        - service: script.notify_speech
          data:
            media_player: media_player.google_speakers
            message: '{{ message }}'
      - wait_template: '{{ is_state(trigger.to_state.entity_id, "off") }}'
        timeout: 00:05:00
  mode: parallel
- id: garbage_collection_holiday_adjustment
  alias: "\U0001F4CB [Holiday in Week] Garbage Collection Adjustment"
  description: Adjusts garbage collection days based on holidays
  use_blueprint:
    path: bruxy70/holiday_in_week.yaml
    input:
      garbage_collection_entity: sensor.garbage
      holiday_entity: calendar.holidays
- id: '1665700591941'
  alias: "\U0001F4CB [Holiday in Week] Recycle Collection Adjustment"
  description: Adjusts recycling collection days based on holidays
  use_blueprint:
    path: bruxy70/holiday_in_week.yaml
    input:
      garbage_collection_entity: sensor.recycling
      holiday_entity: calendar.recycle_holiday
- id: '1665723292840'
  alias: "\U0001F4CB [Controller] Hue Dimmer Switch"
  description: ''
  use_blueprint:
    path: EPMatt/philips_324131092621.yaml
    input:
      integration: Zigbee2MQTT
      controller_entity: sensor.hue_dimmer_switch_action
      helper_last_controller_event: input_text.hue_dimmer_switch_event
      helper_double_press_delay: 400
- id: '1665723372482'
  alias: "\U0001F4CB [Controller] Ikea 5-Button Remote"
  description: ''
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      integration: Zigbee2MQTT
      controller_entity: sensor.ikea_5_button_remote_action
      helper_last_controller_event: input_text.ikea_5_button_remote_event
      helper_double_press_delay: 400
      controller_device: 003cea560c919173b8ae8e4d9e616aba
      button_center_double_press: true
      action_button_left_short:
      - service: fan.decrease_speed
        data:
          percentage_step: 25
        target:
          entity_id: fan.master_bedroom
      action_button_right_short:
      - service: fan.increase_speed
        data:
          percentage_step: 25
        target:
          entity_id: fan.master_bedroom
      action_button_up_short:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
          transition: 0
        target:
          entity_id: light.master_bedroom
      action_button_down_short:
      - service: light.turn_on
        data:
          transition: 0
          brightness_step_pct: -10
        target:
          entity_id: light.master_bedroom
      action_button_center_short:
      - service: light.toggle
        data:
          transition: 1
        target:
          entity_id: light.master_bedroom
      action_button_center_double:
      - service: fan.toggle
        data: {}
        target:
          entity_id: fan.master_bedroom
      button_up_long_loop: false
      button_down_long_loop: false
- id: '1667779119970'
  alias: "\U0001F4CB [Inovelli] Ethan Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.ethan_action
      down_double:
      - service: light.turn_on
        data:
          brightness_pct: 5
        target:
          entity_id: light.ethan
- id: '1667779287274'
  alias: "\U0001F4CB [Inovelli] Family Room Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.family_room_action
      down_double:
      - service: light.turn_on
        data:
          brightness_pct: 20
        target:
          entity_id: light.family_room
      config_single:
      - service: script.family_room_game_light_mode
        data: {}
- id: '1667779442976'
  alias: "\U0001F4CB [Inovelli] Garage Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.garage_action
      config_single:
      - parallel:
        - service: script.inovelli_blue_led
          data:
            color: Yellow
            effect: Chase
            level: 40
            duration: 3 Seconds
            target:
              entity_id: light.garage
        - service: cover.toggle
          data: {}
          target:
            entity_id: cover.garage_door
      - delay:
          seconds: 3
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id:
          - automation.garage_light_switch_status
      up_double:
      - parallel:
        - service: script.inovelli_blue_led
          data:
            color: Yellow
            effect: Chase
            level: 40
            duration: 3 Seconds
            target:
              entity_id: light.garage
        - service: light.turn_on
          target:
            entity_id:
            - light.living_room
            - light.kitchen
          data:
            brightness: 255
      - delay:
          seconds: 3
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id: automation.garage_light_switch_status
      up_triple:
      - parallel:
        - service: script.inovelli_blue_led
          data:
            color: Blue
            effect: Chase
            level: 60
            duration: 3 Seconds
            target:
              entity_id: light.garage
        - service: script.subaru_remote_start
          data: {}
      - delay:
          seconds: 3
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id: automation.garage_light_switch_status
      down_triple:
      - parallel:
        - service: script.inovelli_blue_led
          data:
            color: Yellow
            effect: Chase
            level: 60
            duration: 3 Seconds
            target:
              entity_id: light.garage
        - service: homeassistant.turn_off
          target:
            entity_id: group.lights_inside
          data: {}
      - delay:
          seconds: 3
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id: automation.garage_light_switch_status
- id: '1667779560311'
  alias: "\U0001F4CB [Inovelli] Kitchen Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.kitchen_action
      config_single:
      - parallel:
        - service: script.inovelli_blue_led_status_start
          data:
            entity_id:
            - light.kitchen
            color_start: Yellow
            effect_start: Chase
            duration: 3 Seconds
            level_start: 60
            color_end: Green
            effect_end: Clear
            level_end: 40
        - service: switch.toggle
          data: {}
          target:
            entity_id:
            - switch.dining_room_light
      config_double:
      - parallel:
        - service: script.inovelli_blue_led_status_start
          data:
            entity_id:
            - light.kitchen
            color_start: Yellow
            effect_start: Chase
            duration: 3 Seconds
            level_start: 60
            color_end: Green
            effect_end: Clear
            level_end: 40
        - service: homeassistant.turn_off
          data: {}
          target:
            entity_id: group.lights_kitchen
      down_double:
      - service: light.turn_on
        data:
          brightness_pct: 5
        target:
          entity_id: light.kitchen
- id: '1667779650555'
  alias: "\U0001F4CB [Inovelli] Living Room Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.living_room_action
      config_single:
      - parallel:
        - service: script.inovelli_blue_led_status_start
          data:
            entity_id:
            - light.living_room
            color_start: Yellow
            effect_start: Chase
            duration: 3 Seconds
            level_start: 60
            color_end: Green
            effect_end: Clear
            level_end: 40
        - service: light.toggle
          data: {}
          target:
            entity_id:
            - light.living_room_lamp
            - light.living_room_floor_lamp
      config_double:
      - parallel:
        - service: script.inovelli_blue_led_status_start
          data:
            entity_id:
            - light.living_room
            color_start: Yellow
            effect_start: Chase
            duration: 3 Seconds
            level_start: 60
            color_end: Green
            effect_end: Clear
            level_end: 40
        - service: homeassistant.turn_off
          data: {}
          target:
            entity_id: group.lights_living_room
      down_double:
      - service: light.turn_on
        data:
          brightness_pct: 5
        target:
          entity_id: light.living_room
- id: '1667779709981'
  alias: "\U0001F4CB [Inovelli] Master Bedroom Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.master_bedroom_action
      down_double:
      - service: light.turn_on
        data:
          brightness_pct: 5
        target:
          entity_id: light.master_bedroom
- id: '1667779857021'
  alias: "\U0001F4CB [Inovelli] Office Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      up_single:
      - service: script.office_lights_on
        data: {}
      up_double:
      - parallel:
        - service: script.inovelli_blue_led_status_start
          data:
            entity_id:
            - light.office_switch
            color_start: Yellow
            effect_start: Chase
            duration: 3 Seconds
            level_start: 60
            color_end: Green
            effect_end: Clear
            level_end: 40
        - service: script.office_lights_day_mode
          data: {}
      down_single:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: group.lights_office
      down_double:
      - parallel:
        - service: script.inovelli_blue_led_status_start
          data:
            entity_id:
            - light.office_switch
            color_start: Yellow
            effect_start: Chase
            duration: 3 Seconds
            level_start: 60
            color_end: Green
            effect_end: Clear
            level_end: 40
        - service: script.office_lights_night_mode
          data: {}
      switch: sensor.office_switch_action
- id: '1667779947579'
  alias: "\U0001F4CB [Inovelli] Play Space Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.play_space_action
      down_double:
      - service: light.turn_on
        data:
          brightness_pct: 6
        target:
          entity_id: light.play_space
- id: '1667780182339'
  alias: "\U0001F4CB [Inovelli] Guest Room Switch"
  description: Custom button actions for the Inovelli switch
  use_blueprint:
    path: starbuck93/z2m-inovelli-blue-series-2-in-1-switch-dimmer.yaml
    input:
      switch: sensor.guest_room_action
      down_double:
      - service: light.turn_on
        data:
          brightness_pct: 5
        target:
          entity_id: light.guest_room
