title: Mechanix
kiosk_mode:
  mobile_settings:
    hide_header: true
    ignore_entity_settings: true
button_card_templates:
  computer_tile:
    styles:
      grid:
        - grid-template-columns: 1fr min-content
        - grid-template-rows: min-content min-content min-content min-content min-content
            min-content min-content;
        - grid-template-areas: '"n i" "s chips" "info chips" "stat1 chips" "stat2
            chips" "stat3 chips" "stat4 chips"'
      card:
        - padding: 22px 8px 22px 22px
      img_cell:
        - justify-content: start
        - align-self: start
        - position: absolute
        - width: 100px
        - height: 100px
        - right: -20px
        - top: -20px
        - border-radius: 50%
        - background: '[[[ if (states[variables.connected].state == "off") return
            "var(--red-color)"; else return "var(--green-color)" ]]]'
      icon:
        - width: 60px
        - color: rgba(0, 0, 0, 0.6)
      name:
        - justify-self: start
        - align-self: start
        - font-size: 20px
        - font-weight: 500
        - color: var(--white-color)
      state:
        - min-height: 30px
        - justify-self: start
        - align-self: start
        - font-size: 14px
        - opacity: '0.7'
      custom_fields:
        stat1:
          - padding-bottom: 2px
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.media].state != "playing")
              return "var(--yellow-color)"; ]]]'
        stat2:
          - padding-bottom: 2px
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.cpu].state > 80) return
              "var(--red-color)"; ]]]'
        stat3:
          - padding-bottom: 2px
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.ram].state > 80) return
              "var(--red-color)"; ]]]'
        stat4:
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.gpu].state > 80) return
              "var(--red-color)"; ]]]'
        info:
          - align-self: end
          - justify-self: start
          - text-align: left
        chips:
          - justify-content: end
          - align-self: end
decluttering_templates:
  androidtv_remote:
    card:
      type: vertical-stack
      cards:
        - type: custom:tabbed-card
          styles:
            --mdc-theme-primary: var(--primary-color)
          attributes:
            minWidth: true
          tabs:
            - attributes:
                icon: mdi:gamepad
              card:
                type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: auto auto auto
                  grid-gap: 4px
                  grid-row-gap: 2px
                  margin: 8px 0 0
                  padding: 0
                cards:
                  - type: custom:mushroom-template-card
                    entity: '[[remote]]'
                    icon: mdi:{{ iif(is_state(entity, "on"), "power", "power-off")
                      }}
                    icon_color: '{{ iif(is_state(entity, "on"), "black", "white")
                      }}'
                    fill_container: true
                    layout: vertical
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        command: POWER
                    card_mod:
                      style:
                        .: "ha-card {\n  {%- if is_state(config.entity, \"on\") -%}\n\
                          \    background: var(--red-color) !important;\n  {%- endif\
                          \ -%})\n  max-height: 125px !important;\n  max-width: 130px\
                          \ !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  background-color:\
                          \ transparent !important;\n}\n"
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:chevron-up
                      - remote: '[[remote]]'
                      - command: DPAD_UP
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:home
                      - icon_color: black
                      - icon_size: 60
                      - style: 'background: var(--blue-color) !important;'
                      - remote: '[[remote]]'
                      - command: HOME
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:chevron-left
                      - remote: '[[remote]]'
                      - command: DPAD_LEFT
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:checkbox-blank-circle-outline
                      - icon_size: 60
                      - remote: '[[remote]]'
                      - command: DPAD_CENTER
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:chevron-right
                      - remote: '[[remote]]'
                      - command: DPAD_RIGHT
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:undo-variant
                      - remote: '[[remote]]'
                      - command: BACK
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:chevron-down
                      - remote: '[[remote]]'
                      - command: DPAD_DOWN
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:menu
                      - icon_size: 60
                      - remote: '[[remote]]'
                      - command: MENU
                  - type: custom:mushroom-template-card
                    icon: mdi:volume-mute
                    icon_color: white
                    fill_container: true
                    layout: vertical
                    tap_action:
                      action: call-service
                      service: media_player.volume_mute
                      target:
                        entity_id: '[[media]]'
                    card_mod:
                      style:
                        .: "ha-card {\n  max-height: 125px !important;\n  max-width:\
                          \ 130px !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  background-color:\
                          \ transparent !important;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:volume-minus
                    icon_color: white
                    fill_container: true
                    layout: vertical
                    tap_action:
                      action: call-service
                      service: media_player.volume_down
                      target:
                        entity_id: '[[media]]'
                    card_mod:
                      style:
                        .: "ha-card {\n  max-height: 125px !important;\n  max-width:\
                          \ 130px !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  background-color:\
                          \ transparent !important;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:volume-plus
                    icon_color: white
                    fill_container: true
                    layout: vertical
                    tap_action:
                      action: call-service
                      service: media_player.volume_up
                      target:
                        entity_id: '[[media]]'
                    card_mod:
                      style:
                        .: "ha-card {\n  max-height: 125px !important;\n  max-width:\
                          \ 130px !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  background-color:\
                          \ transparent !important;\n}\n"
            - attributes:
                icon: mdi:play-circle-outline
              card:
                type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: auto auto
                  grid-gap: 20px
                  grid-row-gap: 2px
                  margin: 8px 0 0
                  padding: 0
                cards:
                  - type: custom:mushroom-template-card
                    icon: mdi:volume-minus
                    icon_color: white
                    fill_container: true
                    layout: vertical
                    primary: Volume Down
                    tap_action:
                      action: call-service
                      service: media_player.volume_down
                      target:
                        entity_id: '[[media]]'
                    card_mod:
                      style:
                        .: "ha-card {\n  max-height: 90px !important;\n  max-width:\
                          \ 140px !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  margin-top: -10px;\n\
                          \  left: -50%;\n  justify-content: flex-start !important;\n\
                          \  background-color: transparent !important;\n}\n"
                        mushroom-state-info$: ".primary {\n  font-size: 1.04em !important;\n\
                          \  text-align: start;\n  margin-top: -20px;\n  font-weight:\
                          \ 500 !important;\n  white-space: initial !important;\n\
                          \  z-index: 1;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:volume-plus
                    icon_color: white
                    fill_container: true
                    layout: vertical
                    primary: Volume Up
                    tap_action:
                      action: call-service
                      service: media_player.volume_up
                      target:
                        entity_id: '[[media]]'
                    card_mod:
                      style:
                        .: "ha-card {\n  max-height: 90px !important;\n  max-width:\
                          \ 160px !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  margin-top: -10px;\n\
                          \  left: -65%;\n  justify-content: flex-start !important;\n\
                          \  background-color: transparent !important;\n}\n"
                        mushroom-state-info$: ".primary {\n  font-size: 1.04em !important;\n\
                          \  text-align: start;\n  margin-top: -20px;\n  font-weight:\
                          \ 500 !important;\n  white-space: initial !important;\n\
                          \  z-index: 1;\n}\n"
                  - type: custom:mushroom-template-card
                    entity: '[[media]]'
                    icon: "{%- if is_state(entity, \"playing\") -%}\n  mdi:pause\n\
                      {%- elif is_state(entity, \"paused\") -%}\n  mdi:play\n{%- else\
                      \ -%}\n  mdi:play-pause\n{%- endif -%}"
                    icon_color: "{%- if is_state(entity, \"playing\") -%}\n  black\n\
                      {%- elif is_state(entity, \"paused\") -%}\n  black\n{%- else\
                      \ -%}\n  white\n{%- endif -%}"
                    fill_container: true
                    layout: vertical
                    primary: "{%- if is_state(entity, \"playing\") -%}\n  Pause\n\
                      {%- elif is_state(entity, \"paused\") -%}\n  Play\n{%- else\
                      \ -%}\n  Play/Pause\n{%- endif -%}"
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        command: MEDIA_PLAY_PAUSE
                    card_mod:
                      style:
                        .: "ha-card {\n  {%- if is_state(config.entity, \"playing\"\
                          ) -%}\n    background: var(--green-color) !important;\n\
                          \  {%- elif is_state(config.entity, \"paused\") -%}\n  \
                          \  background: var(--yellow-color) !important;\n  {%- endif\
                          \ -%})\n  max-height: 180px !important;\n  max-width: 140px\
                          \ !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  margin-top: -10px;\n\
                          \  left: -50%;\n  justify-content: flex-start !important;\n\
                          \  background-color: transparent !important;\n}\n"
                        mushroom-state-info$: ".primary {\n  font-size: 1.04em !important;\n\
                          \  text-align: start;\n  margin-top: -15px;\n  white-space:\
                          \ initial !important;\n  z-index: 1;\n}\n"
                  - type: vertical-stack
                    cards:
                      - type: custom:mushroom-template-card
                        icon: mdi:arrow-up-drop-circle-outline
                        icon_color: white
                        fill_container: true
                        layout: vertical
                        primary: Channel Up
                        tap_action:
                          action: call-service
                          service: remote.send_command
                          target:
                            entity_id: '[[remote]]'
                          data:
                            command: CHANNEL_UP
                        card_mod:
                          style:
                            .: "ha-card {\n  max-height: 90px !important;\n  max-width:\
                              \ 160px !important;\n}\n"
                            mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                              \  --shape-color: none !important;\n  margin-top: -10px;\n\
                              \  left: -65%;\n  justify-content: flex-start !important;\n\
                              \  background-color: transparent !important;\n}\n"
                            mushroom-state-info$: ".primary {\n  font-size: 1.04em\
                              \ !important;\n  text-align: start;\n  margin-top: -15px;\n\
                              \  font-weight: 500 !important;\n  white-space: initial\
                              \ !important;\n  z-index: 1;\n}\n"
                      - type: custom:mushroom-template-card
                        icon: mdi:arrow-down-drop-circle-outline
                        icon_color: white
                        fill_container: true
                        layout: vertical
                        primary: Channel Down
                        tap_action:
                          action: call-service
                          service: remote.send_command
                          target:
                            entity_id: '[[remote]]'
                          data:
                            command: CHANNEL_DOWN
                        card_mod:
                          style:
                            .: "ha-card {\n  max-height: 90px !important;\n  max-width:\
                              \ 160px !important;\n}\n"
                            mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                              \  --shape-color: none !important;\n  margin-top: -10px;\n\
                              \  left: -65%;\n  justify-content: flex-start !important;\n\
                              \  background-color:transparent !important;\n}\n"
                            mushroom-state-info$: ".primary {\n  font-size: 1.04em\
                              \ !important;\n  text-align:start;\n  margin-top: -15px;\n\
                              \  font-weight: 500 !important;\n  white-space: initial\
                              \ !important;\n  z-index:1;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:skip-previous
                    icon_color: white
                    fill_container: true
                    layout: vertical
                    primary: Previous
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        command: MEDIA_PREVIOUS
                    hold_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        num_repeats: 1
                        command: MEDIA_REWIND
                    card_mod:
                      style:
                        .: "ha-card {\n  max-height: 90px !important;\n  max-width:\
                          \ 140px !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n  margin-top:-10px;\n\
                          \  left: -50%;\n  justify-content: flex-start !important;\n\
                          \  background-color:transparent !important;\n}\n"
                        mushroom-state-info$: ".primary {\n  font-size: 1.04em !important;\n\
                          \  text-align: start;\n  margin-top: -15px;\n  font-weight:\
                          \ 500 !important;\n  white-space: initial !important;\n\
                          \  z-index:1;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:skip-next
                    icon_color: white
                    fill_container: true
                    layout: vertical
                    primary: Next
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        command: MEDIA_NEXT
                    hold_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        num_repeats: 1
                        command: MEDIA_FAST_FORWARD
                    card_mod:
                      style:
                        .: "ha-card {\n  max-height: 90px !important;\n  max-width:\
                          \ 160px !important;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  --icon-size: 60px !important;\n\
                          \  --shape-color: none !important;\n    margin-top: -10px;\n\
                          \  left: -70%;\n  justify-content: flex-start !important;\n\
                          \  background-color: transparent !important;\n}\n"
                        mushroom-state-info$: ".primary {\n  font-size: 1.04em !important;\n\
                          \  text-align: start;\n  margin-top: -15px;\n  font-weight:\
                          \ 500 !important;\n  white-space: initial !important;\n\
                          \  z-index:1;\n}\n"
            - attributes:
                icon: mdi:dialpad
              card:
                type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: auto auto auto
                  grid-gap: 4px
                  grid-row-gap: 2px
                  margin: 8px 0 0
                  padding: 0
                cards:
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-1
                      - remote: '[[remote]]'
                      - command: '1'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-2
                      - remote: '[[remote]]'
                      - command: '2'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-3
                      - remote: '[[remote]]'
                      - command: '3'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-4
                      - remote: '[[remote]]'
                      - command: '4'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-5
                      - remote: '[[remote]]'
                      - command: '5'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-6
                      - remote: '[[remote]]'
                      - command: '6'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-7
                      - remote: '[[remote]]'
                      - command: '7'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-8
                      - remote: '[[remote]]'
                      - command: '8'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-9
                      - remote: '[[remote]]'
                      - command: '9'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:information-slab-symbol
                      - remote: '[[remote]]'
                      - command: INFO
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:numeric-0
                      - remote: '[[remote]]'
                      - command: '0'
                  - type: custom:decluttering-card
                    template: androidtv_remote_button
                    variables:
                      - icon: mdi:keyboard-return
                      - icon_size: 60
                      - remote: '[[remote]]'
                      - command: ENTER
            - attributes:
                icon: mdi:star
              card:
                type: vertical-stack
                cards:
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 118px 118px 118px
                      grid-gap: 4px
                      grid-row-gap: 2px
                      margin: 8px 0 2px 0
                      padding: 0
                    cards:
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: mdi:plex
                          - icon_color: black
                          - media: '[[media]]'
                          - name: Plex
                          - source: Plex
                          - style: 'background: #d5a004 !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: fapro:prime-video
                          - media: '[[media]]'
                          - name: Prime Video
                          - source: Prime Video
                          - style: 'background: #202d3c !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: fapro:smarttube
                          - media: '[[media]]'
                          - name: SmartTube
                          - source: SmartTube
                          - style: 'background: #bd2424 !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: mdi:spotify
                          - media: '[[media]]'
                          - name: Spotify
                          - source: Spotify
                          - style: 'background: #1db954 !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: mdi:twitch
                          - media: '[[media]]'
                          - name: Twitch
                          - source: Twitch
                          - style: 'background: #9146ff !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: fapro:crunchyroll
                          - media: '[[media]]'
                          - name: Crunchyroll
                          - source: Crunchyroll
                          - style: 'background: #f47521 !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: fapro:youtube-kids
                          - media: '[[media]]'
                          - name: YouTube Kids
                          - source: YouTube Kids
                          - style: 'background: #bd2424 !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: fapro:pbs-kids
                          - media: '[[media]]'
                          - name: PBS Kids
                          - source: PBS Kids
                          - style: 'background: #2838c2 !important;'
                      - type: custom:decluttering-card
                        template: androidtv_remote_source
                        variables:
                          - icon: fapro:disney-now
                          - media: '[[media]]'
                          - name: DisneyNow
                          - source: DisneyNow
                          - style: 'background: #d81b60 !important;'
                  - type: custom:decluttering-card
                    template: androidtv_remote_source
                    variables:
                      - icon: mdi:apps
                      - media: '[[media]]'
                      - name: Home
                      - source: Home
        - type: custom:bubble-card
          card_type: media-player
          card_layout: large
          entity: '[[media]]'
          name: ' '
          show_icon: false
          hide:
            power_button: true
            volume_button: true
            next_button: true
            previous_button: true
          styles: ".bubble-media-player-container {\n  border-radius: var(--ha-card-border-radius,\
            \ 12px) !important;\n}"
  androidtv_remote_button:
    default:
      - icon: mdi:remote
      - icon_color: white
      - icon_size: 70
      - style: ''
    card:
      type: custom:mushroom-template-card
      icon: '[[icon]]'
      icon_color: '[[icon_color]]'
      fill_container: true
      layout: vertical
      tap_action:
        action: call-service
        service: remote.send_command
        target:
          entity_id: '[[remote]]'
        data:
          command: '[[command]]'
      card_mod:
        style:
          .: "ha-card {\n  [[style]]\n  min-height: 102px !important;\n  max-height:\
            \ 125px !important;\n  max-width: 130px !important;\n}\n"
          mushroom-shape-icon$: ".shape {\n  --icon-size: [[icon_size]]px !important;\n\
            \  --shape-color: none !important;\n  background-color: transparent !important;\n\
            }\n"
  androidtv_remote_source:
    default:
      - icon: mdi:remote
      - icon_color: white
      - icon_size: 100
      - style: ''
    card:
      type: custom:vertical-stack-in-card
      cards:
        - type: custom:mushroom-template-card
          icon: '[[icon]]'
          icon_color: '[[icon_color]]'
          fill_container: true
          layout: vertical
          primary: '[[name]]'
          tap_action:
            service: media_player.select_source
            target:
              entity_id: '[[media]]'
            data:
              source: '[[source]]'
          card_mod:
            style:
              .: "ha-card {\n  transition: all 0s;\n  min-height: 145px !important;\n\
                \  max-height: 145px !important;\n  [[style]]\n}\n"
              mushroom-shape-icon$: ".shape {\n  --icon-size: 100px !important;\n\
                \  --shape-color: none !important;\n  background-color: transparent\
                \ !important;\n}\n"
              mushroom-state-info$: ".primary {\n  color: [[icon_color]] !important;\n\
                \  font-size: 1.04em !important;\n  text-align: start;\n  margin-top:\
                \ -20px;\n  font-weight: 400 !important;\n  white-space: initial !important;\n\
                }\n"
        - type: custom:mushroom-chips-card
          alignment: end
          chips:
            - type: template
              entity: '[[media]]'
              icon: "{% if is_state_attr(entity, \"source\", \"[[source]]\") %}\n\
                \  mdi:checkbox-blank-circle\n{% endif %}"
              icon_color: '[[icon_color]]'
          card_mod:
            style: "ha-card {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n\
              \  --chip-box-shadow: none;\n  --chip-background: none;\n  --chip-border-width:\
              \ 0;\n}\n"
  camera_card:
    card:
      type: picture-entity
      entity: '[[camera]]'
      aspect_ratio: '16:9'
      show_state: false
      show_name: false
      tap_action:
        action: fire-dom-event
        browser_mod:
          service: browser_mod.popup
          data:
            title: '[[name]]'
            size: fullscreen
            content:
              type: custom:decluttering-card
              template: camera_popup
              variables:
                - camera: '[[camera]]'
                - stream: '[[stream]]'
  camera_popup:
    card:
      type: custom:frigate-card
      cameras:
        - camera_entity: '[[camera]]'
          live_provider: go2rtc
          go2rtc:
            modes:
              - webrtc
              - mse
            stream: '[[stream]]'
      menu:
        style: outside
        buttons:
          frigate:
            enabled: false
          cameras:
            enabled: false
          media_player:
            enabled: false
          download:
            enabled: false
          microphone:
            enabled: true
            type: toggle
            alignment: opposing
          mute:
            enabled: true
            alignment: opposing
          play:
            enabled: true
            alignment: opposing
            priority: 45
          fullscreen:
            alignment: opposing
            priority: 40
      live:
        draggable: false
        auto_unmute: all
        lazy_unload: all
        preload: true
        controls:
          builtin: false
      media_viewer:
        transition_effect: slide
      timeline:
        controls:
          thumbnails:
            mode: below
      dimensions:
        aspect_ratio_mode: dynamic
      performance:
        profile: high
  chip_header:
    default:
      - primary: Title
      - secondary: null
      - icon: mdi:select-place
      - back_path: main
      - chips: []
    card:
      type: custom:mod-card
      card_mod:
        style: "ha-card {\n  background: var(--ha-card-background, var(--card-background-color,\
          \ #fff));\n  box-shadow: var(--ha-card-box-shadow, none);\n  box-sizing:\
          \ border-box;\n  border-radius: var(--ha-card-border-radius, 12px);\n  border-width:\
          \ var(--ha-card-border-width, 1px);\n  border-style: solid;\n  border-color:\
          \ var(--ha-card-border-color, var(--divider-color, #e0e0e0));\n  color:\
          \ var(--primary-text-color);\n  display: block;\n  transition: all 0.3s\
          \ ease-out 0s;\n  position: relative;\n}\n"
      card:
        type: custom:layout-card
        layout_type: custom:grid-layout
        layout:
          grid-template-columns: 55px auto
          grid-template-rows: auto
          grid-template-areas: '"nav chips" "header header"'
          reflow: true
          margin: 0
          padding: 5px
        cards:
          - type: custom:mushroom-chips-card
            view_layout:
              grid-area: nav
            card_mod:
              style: "ha-card  {\n  --chip-box-shadow: none;\n  --chip-background:\
                \ none;\n  --chip-border-width: 0;\n  --chip-icon-size: 1em;\n}\n"
            chips:
              - type: template
                icon: mdi:chevron-left
                tap_action:
                  action: navigate
                  navigation_path: '[[back_path]]'
          - type: custom:mushroom-chips-card
            view_layout:
              grid-area: chips
            card_mod:
              style: "ha-card {\n  transition: all 0s;\n  background-color: var(--primary-background-color)\
                \ !important;\n  border-radius: var(--ha-card-border-radius, 12px)\
                \ !important;\n  --chip-box-shadow: none;\n  --chip-background: none;\n\
                \  --chip-border-width: 0;\n  --chip-spacing: 0;\n  --chip-icon-size:\
                \ 0.65em;\n}\n"
            chips: '[[chips]]'
          - type: custom:mushroom-template-card
            view_layout:
              grid-area: header
            primary: '[[primary]]'
            secondary: '[[secondary]]'
            icon: '[[icon]]'
            icon_color: '[[icon_color]]'
            fill_container: true
            tap_action:
              action: none
            hold_action:
              action: none
            card_mod:
              style: ":host {\n  --mush-card-primary-line-height: 1.4em;\n  --mush-icon-size:\
                \ 60px;\n  --mush-card-primary-font-size: 3rem;\n  margin-left: -10px\
                \ !important;\n}\nha-card {\n  transition: all 0s;\n  background:\
                \ none;\n  box-shadow: none;\n  border: none;\n  padding: 0px 16px\
                \ 8px !important;\n\n  /* Make card non-responsive to select and pointer\
                \ */\n  user-select: none;\n  pointer-events: none;\n}\n"
  computer_apps:
    card:
      type: custom:vertical-stack-in-card
      horizontal: true
      cards:
        - type: custom:mushroom-template-card
          entity: sensor.[[computer]]_app_bigbox
          layout: vertical
          icon: fapro:bigbox
          icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
          tap_action:
            action: none
          hold_action:
            action: call-service
            service: script.hass_agent_launch
            data:
              entity:
                - media_player.[[computer]]
              command: '"C:\Users\PC\AppData\Local\Programs\LaunchBox\Core\BigBox.exe"'
        - type: custom:mushroom-template-card
          entity: sensor.[[computer]]_app_steam
          layout: vertical
          icon: mdi:steam
          icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
          tap_action:
            action: none
          hold_action:
            action: call-service
            service: script.hass_agent_launch
            data:
              entity:
                - media_player.[[computer]]
              command: '"C:\Program Files (x86)\Steam\Steam.exe"'
        - type: custom:mushroom-template-card
          entity: sensor.[[computer]]_app_eadesktop
          layout: vertical
          icon: mdi:origin
          icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
          tap_action:
            action: none
          hold_action:
            action: call-service
            service: script.hass_agent_launch
            data:
              entity:
                - media_player.[[computer]]
              command: '"C:\Program Files\Electronic Arts\EA Desktop\EA Desktop\EALauncher.exe"'
        - type: custom:mushroom-template-card
          entity: sensor.[[computer]]_app_epicgames
          layout: vertical
          icon: fapro:epic-games
          icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
          tap_action:
            action: none
          hold_action:
            action: call-service
            service: script.hass_agent_launch
            data:
              entity:
                - media_player.[[computer]]
              command: '"C:\Program Files (x86)\Epic Games\Launcher\Portal\Binaries\Win32\EpicGamesLauncher.exe"'
        - type: custom:mushroom-template-card
          entity: sensor.[[computer]]_app_chrome
          layout: vertical
          icon: mdi:google-chrome
          icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
          tap_action:
            action: none
          hold_action:
            action: call-service
            service: script.hass_agent_launch
            data:
              entity:
                - media_player.[[computer]]
              command: '"C:\Program Files\Google\Chrome\Application\chrome.exe"'
  computer_power:
    card:
      type: custom:vertical-stack-in-card
      horizontal: true
      cards:
        - type: custom:mushroom-template-card
          entity: switch.[[computer]]
          primary: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"off\"\
            ) %}\n  Power\n{% endif %}"
          icon: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"on\")\
            \ %}\n  mdi:power\n{% else %}\n  mdi:power-off\n{% endif %}"
          icon_color: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"\
            on\") %}\n  green\n{% else %}\n  red\n{% endif %}"
          tap_action:
            action: none
          hold_action:
            action: call-service
            service: switch.toggle
            target:
              entity_id: switch.[[computer]]
          card_mod:
            style: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"on\"\
              ) %}\nha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n{%\
              \ endif %}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_lock
            layout: vertical
            icon: "{% if is_state(\"sensor.[[computer]]_session_state\", \"Locked\"\
              ) %}\n  mdi:lock\n{% else %}\n  mdi:lock-open\n{% endif %}"
            icon_color: "{% if is_state(\"sensor.[[computer]]_session_state\", \"\
              Locked\") %}\n  red\n{% elif is_state(\"sensor.[[computer]]_session_state\"\
              , \"Unlocked\") %}\n  green\n{% else %}\n  grey\n{% endif %}"
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_lock
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_logoff
            layout: vertical
            icon: mdi:logout
            icon_color: grey
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_logoff
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_sleep
            layout: vertical
            icon: mdi:sleep
            icon_color: '{{ is_state(entity, "on") | iif("green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_sleep
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_restart
            layout: vertical
            icon: mdi:reload
            icon_color: '{{ is_state(entity, "on") | iif("green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_restart
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
  door_card:
    card:
      type: custom:mushroom-template-card
      entity: '[[entity]]'
      primary: '[[name]]'
      secondary: '{% from "util.jinja" import nominal_change_history %} {{ state_translated(entity)
        }} ⸱ {{ nominal_change_history(entity) }}'
      icon: '[[icon]]{{ iif(is_state(entity, "on"), "-open", "") }}'
      icon_color: '{{ iif(is_state(entity, "on"), "red", "green") }}'
      tap_action:
        action: more-info
      hold_action:
        action: fire-dom-event
        browser_mod:
          service: browser_mod.more_info
          data:
            entity: '[[battery_entity]]'
      card_mod:
        style:
          mushroom-shape-icon$: "{% if int(states(\"[[battery_entity]]\"), 0) <= 60\
            \ %}\n{% from \"util.jinja\" import battery_color %}\n.shape {\n  /* Radial\
            \ progress bar */\n  background:\n    radial-gradient(var(--card-background-color)\
            \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{ battery_color(\"\
            [[battery_entity]]\") }}-color) {{ states(\"[[battery_entity]]\") }}%\
            \ 0%, var(--card-background-color) 0% 100%\n  );\n}\n.shape:after {\n\
            \  /* Add back icon shape */\n  content: \"\";\n  height: 100%;\n  width:\
            \ 100%;\n  position: absolute;\n  border-radius: var(--icon-border-radius);\n\
            \  background: var(--shape-color);\n}\n{% endif %}\n"
  four_graphs:
    default:
      - graph_1_name: None
      - graph_1_icon: None
      - graph_1_entities: []
      - graph_2_name: None
      - graph_2_icon: None
      - graph_2_entities: []
      - graph_3_name: None
      - graph_3_icon: None
      - graph_3_entities: []
      - graph_4_name: None
      - graph_4_icon: None
      - graph_4_entities: []
    card:
      type: grid
      square: false
      columns: 2
      cards:
        - type: custom:mini-graph-card
          name: '[[graph_1_name]]'
          icon: '[[graph_1_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_1_entities]]'
          line_width: 8
          font_size: 75
          duration:
            quantity: 1
            unit: hour
          points_per_hour: 30
          animate: true
        - type: custom:mini-graph-card
          name: '[[graph_2_name]]'
          icon: '[[graph_2_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_2_entities]]'
          line_width: 8
          font_size: 75
          duration:
            quantity: 1
            unit: hour
          points_per_hour: 30
          animate: true
        - type: custom:mini-graph-card
          name: '[[graph_3_name]]'
          icon: '[[graph_3_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_3_entities]]'
          line_width: 8
          font_size: 75
          duration:
            quantity: 1
            unit: hour
          points_per_hour: 30
          animate: true
        - type: custom:mini-graph-card
          name: '[[graph_4_name]]'
          icon: '[[graph_4_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_4_entities]]'
          line_width: 8
          font_size: 75
          duration:
            quantity: 1
            unit: hour
          points_per_hour: 30
          animate: true
  light_group_popup:
    card:
      type: custom:vertical-stack-in-card
      card_mod:
        style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
          \ 0;\n}\n"
      cards:
        - type: custom:mushroom-light-card
          entity: '[[entity]]'
          secondary_info: none
          tap_action:
            action: toggle
          card_mod:
            style: "ha-card {\n  {% if is_state(config.entity, \"on\") %}\n  background:\
              \ rgba(var(--rgb-state-light), 0.2);\n  {% endif %}\n}\n"
        - type: custom:auto-entities
          card:
            type: custom:layout-card
            cards: []
            layout_type: masonry
          sort:
            attribute: friendly_name
          filter:
            include:
              - group: '[[entity]]'
                options:
                  type: custom:mushroom-light-card
                  show_brightness_control: true
                  show_color_temp_control: true
                  show_color_control: true
                  layout: horizontal
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  padding: 4px 12px\
                      \ !important;\n  border-width: 0;\n}\n"
  media_card:
    default:
      - expanded: false
      - buttons:
          - id: Plex
            type: source
            name: Plex
            icon: mdi:plex
          - id: Prime Video
            type: source
            name: Prime Video
            icon: fapro:prime-video
          - id: SmartTube
            type: source
            name: SmartTube
            icon: fapro:smarttube
          - id: Spotify
            type: source
            name: Spotify
            icon: mdi:spotify
          - id: Twitch
            type: source
            name: Twitch
            icon: mdi:twitch
          - id: Crunchyroll
            type: source
            name: Crunchyroll
            icon: fapro:crunchyroll
          - id: YouTube Kids
            type: source
            name: YT Kids
            icon: fapro:youtube-kids
          - id: PBS Kids
            type: source
            name: PBS Kids
            icon: fapro:pbs-kids
          - id: DisneyNow
            type: source
            name: DisneyNow
            icon: fapro:disney-now
          - id: Home
            type: source
            name: Home
            icon: mdi:apps
      - sound_buttons: []
    card:
      type: custom:vertical-stack-in-card
      cards:
        - type: custom:yet-another-expander-card
          expanded: '[[expanded]]'
          gap: 0em
          padding: 0em
          child-padding: 0.5em
          title-card-padding: 0em
          title-card-button-overlay: true
          overlay-margin: 0
          title-card:
            type: grid
            columns: 2
            square: false
            cards:
              - type: conditional
                conditions:
                  - entity: '[[entity]]'
                    state_not: unavailable
                  - entity: '[[entity]]'
                    state_not: unknown
                card:
                  type: custom:mushroom-media-player-card
                  entity: '[[entity]]'
                  primary_info: none
                  secondary_info: none
                  icon_type: none
                  use_media_info: false
                  use_media_artwork: false
                  show_volume_level: false
                  fill_container: false
                  card_mod:
                    style: "ha-card:before {\n  transform: translate3d(0,0,0);\n \
                      \ -webkit-transform: translate3d(0,0,0);\n  content: \"\";\n\
                      \n  {%- set app_name = state_attr(\"[[entity]]\", \"source\"\
                      ) | lower -%}\n  {%- set app_list = [\n    \"crunchyroll\",\n\
                      \    \"disneynow\",\n    \"netflix\",\n    \"pbs kids\",\n \
                      \   \"prime video\",\n    \"smarttube\",\n    \"spotify\",\n\
                      \    \"youtube\",\n    \"youtube kids\"\n  ] %}\n\n  background:\n\
                      \  {%- if app_name in app_list -%}\n    url('/local/logos/{{\
                      \ app_name | lower | replace(\" \", \"-\") }}.png') center no-repeat\n\
                      \  {%- elif not states(config.entity) in [\"off\", \"unknown\"\
                      , \"unavailable\", \"idle\"] and state_attr(config.entity, \"\
                      entity_picture\") -%}\n    url('{{ state_attr(config.entity,\
                      \ \"entity_picture\") }}') center no-repeat\n  {%- elif \"spotify\"\
                      \ in config.entity -%}\n    url('/local/logos/spotify.png')\
                      \ center no-repeat\n  {%- else -%}\n    url('/local/logos/idle-media-player.png')\
                      \ center no-repeat\n  {%- endif -%};\n  background-size: contain;\n\
                      \n  border-radius: var(--control-border-radius);\n  {% set media_type\
                      \ = state_attr(config.entity, 'media_content_type') %}\n  {%\
                      \ if media_type in ['tvshow'] %}\n    aspect-ratio: 16 / 9;\n\
                      \    margin: 0px 0px 0px -45px;\n    margin-top: 1px;\n  {%\
                      \ elif media_type == 'movie' %}\n    aspect-ratio: 2 / 3;\n\
                      \  {% else %}\n    aspect-ratio: 1 / 1;\n    width: 99%;\n \
                      \ {% endif %}\n}\nha-card {\n  transform: translate3d(0,0,0);\n\
                      \  -webkit-transform: translate3d(0,0,0);\n  border-radius:\
                      \ 30px;\n  overflow: visible !important;\n  box-shadow: none\
                      \ !important;\n  background-color: transparent;\n  border: none\
                      \ !important;\n}\n"
              - type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    alignment: center
                    title: "{% set entity = \"[[entity]]\" %} {% if states(entity)\
                      \ in [\"playing\", \"paused\", \"standby\"] %}\n  {{ state_translated(entity)\
                      \ }}\n{% endif %}"
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-box-shadow: none;\n}\nh1 {\n  text-shadow:\
                          \ 0 0 5px rgba(17,35,52,1);\n}\nh2 {\n  color: var(--primary-text-color)\
                          \ !important;\n  text-shadow: 0 0 5px rgba(17,35,52,1);\n\
                          }\n"
                  - type: conditional
                    conditions:
                      - entity: '[[entity]]'
                        state_not: unavailable
                      - entity: '[[entity]]'
                        state_not: 'off'
                      - entity: '[[entity]]'
                        state_not: standby
                    card:
                      type: custom:mushroom-chips-card
                      alignment: center
                      chips:
                        - type: template
                          icon: mdi:skip-backward
                          entity: '[[entity]]'
                          tap_action:
                            action: call-service
                            service: media_player.media_previous_track
                            target:
                              entity_id: '[[entity]]'
                        - type: template
                          entity: '[[entity]]'
                          icon: '{{ is_state(entity, "playing") | iif("mdi:pause",
                            "mdi:play") }}'
                          tap_action:
                            action: call-service
                            service: media_player.media_play_pause
                            target:
                              entity_id: '[[entity]]'
                        - type: template
                          entity: '[[entity]]'
                          icon: mdi:skip-forward
                          tap_action:
                            action: call-service
                            service: media_player.media_next_track
                            target:
                              entity_id: '[[entity]]'
                      card_mod:
                        style:
                          .: "ha-card {\n  --chip-background: rgba(var(--rgb-disabled-color),\
                            \ 0.25);\n  --ha-card-box-shadow: none;\n  --chip-box-shadow:\
                            \ 0 0 13px -4px rgba(17,35,52,1);\n  --chip-border-radius:\
                            \ 12px;\n  --chip-height: 35px;\n  --chip-padding: 10px;\n\
                            \  --chip-spacing: 18px;\n}\n.chip-container * {\n  margin-bottom:\
                            \ var(--chip-spacing) !important;\n}\n"
                  - type: conditional
                    conditions:
                      - entity: '[[entity]]'
                        state_not: unavailable
                      - entity: '[[entity]]'
                        state_not: idle
                    card:
                      type: custom:mushroom-title-card
                      alignment: center
                      subtitle: "{%- set episode = \"\" -%}\n{%- if state_attr(\"\
                        [[entity]]\", \"media_season\")\n  and state_attr(\"[[entity]]\"\
                        , \"media_episode\") -%}\n  {%- set episode =  \"S\" ~ state_attr(\"\
                        [[entity]]\", \"media_season\") | default(\"\", true)\n  \
                        \  ~ \"E\" ~ state_attr(\"[[entity]]\", \"media_episode\"\
                        ) | default(\"\", true) -%}\n{%- endif -%}\n{{ [\n  state_attr(\"\
                        [[entity]]\", \"media_title\") | default(\"\", true) | trim,\n\
                        \  state_attr(\"[[entity]]\", \"media_artist\") | default(\"\
                        \", true) | trim,\n  episode,\n  state_attr(\"[[entity]]\"\
                        , \"media_series_title\") | default(\"\", true) | trim\n \
                        \ ] | reject(\"==\", \"\") | list | join(\" - \")\n}}"
                      card_mod:
                        style:
                          .: "ha-card {\n  --ha-card-box-shadow: none;\n}\nh1 {\n\
                            \  text-shadow: 0 0 5px rgba(17,35,52,1);\n}\nh2 {\n \
                            \ color: var(--primary-text-color) !important;\n  text-shadow:\
                            \ 0 0 5px rgba(17,35,52,1);\n}\n"
          cards:
            - type: conditional
              conditions:
                - entity: '[[entity]]'
                  state_not: unavailable
                - entity: '[[entity]]'
                  state_not: unknown
                - entity: '[[entity]]'
                  state_not: 'off'
              card:
                type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 85px auto 105px
                  grid-template-rows: auto
                  margin: 0
                  padding: 5px
                cards:
                  - type: custom:mushroom-chips-card
                    alignment: end
                    chips:
                      - type: template
                        entity: '[[entity]]'
                        icon: "{% if state_attr(entity, \"is_volume_muted\") %}\n\
                          \  mdi:volume-mute\n{% else %}\n  mdi:volume-source\n{%\
                          \ endif %}"
                        content: "{% if state_attr(entity, \"volume_level\") %}\n\
                          \  {{ (state_attr(entity, \"volume_level\") * 100) | round(0)\
                          \ }}%\n{% endif %}"
                        tap_action:
                          action: call-service
                          service: script.media_player_mute
                          data:
                            media_player: '[[entity]]'
                    card_mod:
                      style:
                        .: "ha-card {\n  --chip-background: rgba(var(--rgb-disabled-color),\
                          \ 0.25);\n  --ha-card-box-shadow: none;\n  --chip-box-shadow:\
                          \ 0 0 13px -4px rgba(17,35,52,1);\n  --chip-border-radius:\
                          \ 12px;\n  --chip-height: 35px;\n  --chip-padding: 10px;\n\
                          \  --chip-spacing: 18px;\n}\n.chip-container * {\n  margin-bottom:\
                          \ var(--chip-spacing) !important;\n}\n"
                  - type: custom:mushroom-media-player-card
                    entity: '[[entity]]'
                    primary_info: none
                    secondary_info: none
                    icon_type: none
                    volume_controls:
                      - volume_set
                    card_mod:
                      style: ":host {\n  --mush-rgb-state-media-player: var(--rgb-accent-color);\n\
                        }\nha-card {\n  --control-height: 10px;\n  transform: translate3d(0,0,0);\n\
                        \  -webkit-transform: translate3d(0,0,0);\n  background: transparent;\n\
                        \  border: none !important;\n  box-shadow: none;\n}\n"
                  - type: conditional
                    conditions:
                      - entity: '[[entity]]'
                        state_not: unavailable
                      - entity: '[[entity]]'
                        state_not: idle
                      - entity: '[[entity]]'
                        state_not: standby
                    card:
                      type: custom:mushroom-chips-card
                      alignment: center
                      chips:
                        - type: template
                          icon: mdi:volume-minus
                          entity: '[[entity]]'
                          tap_action:
                            action: call-service
                            service: media_player.volume_down
                            target:
                              entity_id: '[[entity]]'
                        - type: template
                          entity: '[[entity]]'
                          icon: mdi:volume-plus
                          tap_action:
                            action: call-service
                            service: media_player.volume_up
                            target:
                              entity_id: '[[entity]]'
                      card_mod:
                        style:
                          .: "ha-card {\n  --chip-background: rgba(var(--rgb-disabled-color),\
                            \ 0.25);\n  --ha-card-box-shadow: none;\n  --chip-box-shadow:\
                            \ 0 0 13px -4px rgba(17,35,52,1);\n  --chip-border-radius:\
                            \ 12px;\n  --chip-height: 35px;\n  --chip-padding: 10px;\n\
                            \  --chip-spacing: 18px;\n}\n.chip-container * {\n  margin-bottom:\
                            \ var(--chip-spacing) !important;\n}\n"
            - type: conditional
              conditions:
                - entity: '[[entity]]'
                  state_not: unavailable
                - entity: '[[entity]]'
                  state_not: unknown
              card:
                type: custom:mini-media-player
                entity: '[[entity]]'
                card_mod:
                  style:
                    mmp-shortcuts$: ".mmp-shortcuts__button {\n  --mmp-button-color:\
                      \ rgba(var(--rgb-disabled-color), 0.25);\n  box-shadow: 0 0\
                      \ 13px -4px rgba(17,35,52,1);\n  border-radius: 12px;\n}\n"
                artwork: none
                group: true
                hide:
                  controls: true
                  icon: true
                  info: true
                  name: true
                  power: true
                  progress: true
                  source: true
                  volume: true
                shortcuts:
                  columns: 3
                  attribute: sound_mode
                  buttons: '[[sound_buttons]]'
            - type: conditional
              conditions:
                - entity: '[[entity]]'
                  state_not: unavailable
                - entity: '[[entity]]'
                  state_not: unknown
              card:
                type: custom:mini-media-player
                entity: '[[entity]]'
                card_mod:
                  style:
                    mmp-shortcuts$: ".mmp-shortcuts__button {\n  --mmp-button-color:\
                      \ rgba(var(--rgb-disabled-color), 0.25);\n  box-shadow: 0 0\
                      \ 13px -4px rgba(17,35,52,1);\n  border-radius: 12px;\n}\n"
                artwork: none
                group: true
                hide:
                  controls: true
                  icon: true
                  info: true
                  name: true
                  power: true
                  progress: true
                  source: true
                  volume: true
                shortcuts:
                  columns: 3
                  attribute: source
                  buttons: '[[buttons]]'
          card_mod:
            style: "ha_card {\n  --ha-card-border-width: 0;\n}\n"
        - type: custom:mini-media-player
          entity: '[[entity]]'
          group: true
          hide:
            controls: true
            icon: true
            info: true
            name: true
            power: true
            source: true
            state_label: true
            volume: true
          card_mod:
            style:
              .: "ha-card {\n  --mmp-progress-height: 10px !important;\n  --paper-progress-container-color:\
                \ transparent;\n  --paper-progress-active-color: var(--mmp-accent-color);\n\
                \  --ha-card-border-width: 0;\n  height: var(--mmp-progress-height);\n\
                }\n"
      card_mod:
        style:
          .: "ha-card {\n  background: none;\n  --ha-card-border-width: 0;\n  transform:\
            \ translate3d(0,0,0);\n  -webkit-transform: translate3d(0,0,0);\n}\nha-card:before\
            \ {\n  transform: translate3d(0,0,0);\n  -webkit-transform: translate3d(0,0,0);\n\
            \  content: \"\";\n  position: absolute;\n  height: 100%;\n  width: 100%;\n\
            \n  animation: gradient 40s ease infinite;\n\n  background:\n  {%- if\
            \ not states(\"[[entity]]\") in [\"off\", \"unknown\", \"unavailable\"\
            , \"idle\"] and state_attr(\"[[entity]]\", \"entity_picture\") -%}\n \
            \   url( '{{ state_attr('[[entity]]', \"entity_picture\") }}') center\
            \ no-repeat\n  {%- elif not states('[[entity]]') in [\"off\", \"unknown\"\
            , \"unavailable\"] -%}\n    url('/local/backgrounds/waveform2.jpg') center\
            \ no-repeat\n  {%- else -%}\n    var(--ha-card-background, var(--card-background-color,\
            \ #fff))\n  {%- endif -%};\n  background-size: 500% 500%;\n  filter: blur(100px)\
            \ saturate(200%);\n}\n@keyframes gradient {\n  0% { background-position:\
            \ 0% 50%; }\n  25% { background-position: 50% 0%; }\n  50% { background-position:\
            \ 100% 50%; }\n  75% { background-position: 50% 100%; }\n  100% { background-position:\
            \ 0% 50%; }\n"
          expander-card$: "/*.header-overlay {\n  right: initial;\n  left: 0;\n}*/\n\
            .ripple {\n  border-radius: var(--ha-dialog-border-radius);\n}\n"
  motion_card:
    card:
      type: custom:mushroom-template-card
      entity: '[[entity]]'
      primary: '[[name]]'
      secondary: "{%- if is_state(entity, \"on\") -%}\n  Motion\n{%- elif is_state(entity,\
        \ \"on\") -%}\n  Detected\n{%- else -%}\n  Clear\n{%- endif -%}"
      icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
        \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%- endif\
        \ -%}"
      icon_color: "{%- if is_state(entity, \"on\") -%}\n  orange\n{%- elif is_state(entity,\
        \ \"on\") -%}\n  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
      tap_action:
        action: more-info
  package_delivery:
    card:
      type: conditional
      conditions:
        - condition: numeric_state
          entity: '[[entity]]'
          above: 0
        - entity: '[[entity]]'
          state_not: unavailable
        - entity: '[[entity]]'
          state_not: unknown
      card:
        type: custom:mushroom-template-card
        layout: vertical
        entity: '[[entity]]'
        icon: '[[icon]]'
        icon_color: '[[icon_color]]'
        badge_icon: "{% if int(states(entity), 0) > 9 %}\n  mdi:numeric-9-plus\n{%\
          \ elif int(states(entity), 0) > 0 %}\n  mdi:numeric-{{ states(entity) }}\n\
          {% else %}\n  mdi:numeric-0\n{% endif %}"
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: '[[name]] Tracking'
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:mushroom-template-card
                    entity: '[[entity]]'
                    primary: '[[name]]'
                    secondary: '{{ states(entity) }} {{ iif(int(states(entity), 0)
                      == 1, "package", "packages") }}'
                    icon: '[[icon]]'
                    icon_color: '[[icon_color]]'
                    tap_action:
                      action: more-info
                  - type: custom:mushroom-title-card
                    subtitle: Tracking Numbers
                  - type: markdown
                    content: "{%- set orders = state_attr(\"[[entity]]\", \"tracking_#\"\
                      ) -%} {%- if state_attr(\"[[entity]]\", \"order\") -%}\n  {%-\
                      \ set orders = state_attr(\"[[entity]]\", \"order\") -%}\n{%-\
                      \ endif -%} {% for number in orders -%}\n  <ha-icon icon=\"\
                      mdi:package-variant-closed\"></ha-icon> [{{ number }}]({{ \"\
                      [[url]]\" | replace(\"##TRACK_ID##\", number) }})\n{% endfor\
                      \ %}"
        card_mod:
          style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
            \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width: 0;\n\
            \  --icon-size: 48px;\n}\nmushroom-badge-icon {\n  --icon-color: rgb(var(--rgb-[[icon_color]]));\n\
            \  --main-color: none;\n  --badge-icon-size: 2em;\n}\n"
  person_card:
    default:
      - phone_base: pixel_8
      - watch_base: pixel_watch
    card:
      type: custom:vertical-stack-in-card
      card_mod:
        style: "{% set state = states(\"person.[[person]]\") %}\n{% if state != \"\
          home\" %}\nha-card {\n  {% if state == \"not_home\" %}\n    background:\
          \ rgba(244, 67, 54, 0.2)\n  {% elif state in [\"unknown\", \"unavailable\"\
          ] %}\n    background: rgba(189, 189, 189, 0.2)\n  {% else %}\n    background:\
          \ rgba(33, 150, 243, 0.2)\n  {% endif %};\n}\n{% endif %}\n"
      cards:
        - type: custom:mushroom-entity-card
          entity: person.[[person]]
          name: '[[name]]'
          icon_type: entity-picture
          tap_action:
            action: navigate
            navigation_path: '#person-[[person]]'
          card_mod:
            style:
              .: "{% set state = states(config.entity) %}\n:host {\n  transition:\
                \ all 0s;\n  --mush-card-primary-font-size: 16px;\n  --mush-card-secondary-font-size:\
                \ 13px;\n  --mush-icon-size: 4.84em;\n  {% if not is_state(config.entity,\
                \ \"home\") %}\n  --ha-card-background:\n    {% if state == \"not_home\"\
                \ %}\n      rgba(244, 67, 54, 0.05)\n    {% elif state in [\"unknown\"\
                , \"unavailable\"] %}\n      rgba(189, 189, 189, 0.05)\n    {% else\
                \ %}\n      rgba(33, 150, 243, 0.05)\n    {% endif %};\n  {% endif\
                \ %}\n}\nha-card {\n  transition: all 0s;\n  padding-bottom: 0 !important;\n\
                }\nmushroom-state-info {\n  z-index: 1;\n}\nmushroom-shape-avatar\
                \ {\n  position: absolute;\n  top: -30px;\n  left: -10px;\n}\nmushroom-state-info\
                \ {\n  padding-left: 50px;\n  z-index: 1;\n}\n"
        - type: custom:mushroom-chips-card
          alignment: end
          card_mod:
            style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background: rgba(var(--rgb-disabled),\
              \ 0.1);\n  --chip-border-width: 0;\n  --chip-spacing: 1px;\n  margin-right:\
              \ calc(var(--ha-card-border-radius, 12px) / 2);\n}\n"
          chips:
            - type: conditional
              conditions:
                - entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
                  state_not: unavailable
                - entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
                  state_not: unknown
                - entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
                  state_not: 'off'
              chip:
                type: template
                entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
                icon: mdi:minus-circle
                icon_color: amber
                tap_action:
                  action: none
            - type: conditional
              conditions:
                - entity: person.[[person]]
                  state_not: home
                - entity: person.[[person]]
                  state_not: unavailable
                - entity: person.[[person]]
                  state_not: unknown
              chip:
                type: template
                entity: sensor.home_[[person]]_direction_of_travel
                icon: "{% if int(states(\"sensor.home_[[person]]_distance\"), 0) >=\
                  \ 400 %}\n  {% if is_state(entity, \"towards\") %}\n    mdi:map-marker-left\n\
                  \  {% elif is_state(entity, \"away_from\") %}\n    mdi:map-marker-right\n\
                  \  {% else %}\n    mdi:map-marker-distance\n  {% endif %}\n{% endif\
                  \ %}"
                icon_color: "{% if is_state(entity, \"towards\") %}\n  green\n{% elif\
                  \ is_state(entity, \"away_from\") %}\n  orange\n{% else %}\n  grey\n\
                  {% endif %}"
                layout: vertical
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
            - type: conditional
              conditions:
                - entity: media_player.spotify_[[person]]
                  state_not: unavailable
                - entity: media_player.spotify_[[person]]
                  state_not: unknown
              chip:
                type: template
                entity: media_player.spotify_[[person]]
                icon_color: "{% set state = states(entity) %}\n{% if state == \"playing\"\
                  \ %}\n  green\n{% elif state == \"paused\" %}\n  amber\n{% elif\
                  \ state == \"idle\" %}\n  light-blue\n{% elif state in [\"standby\"\
                  , \"on\"] %}\n  blue-grey\n{% else %}\n  disabled\n{% endif %}"
                icon: mdi:spotify
                tap_action:
                  action: navigate
                  navigation_path: '#person-spotify-[[person]]'
            - type: template
              entity: sensor.[[phone_base]]_[[person]]_wifi_signal_strength
              icon_color: blue
              icon: '{% from "util.jinja" import wifi_icon %}

                {{ wifi_icon(entity, "sensor.[[phone_base]]_[[person]]_wifi_connection")
                }}'
              tap_action:
                action: more-info
            - type: template
              entity: sensor.[[phone_base]]_[[person]]_battery_level
              icon: '{% from "util.jinja" import cell_battery_icon %}

                {{ cell_battery_icon(entity, "sensor.[[phone_base]]_[[person]]_battery_state",
                "sensor.[[phone_base]]_[[person]]_charger_type") }}'
              icon_color: "{% from \"util.jinja\" import battery_color %} {% if is_state(\"\
                sensor.[[phone_base]]_[[person]]_battery_state\", \"charging\") %}\n\
                \  light-blue\n{% else %}\n  {{ battery_color(entity) }}\n{% endif\
                \ %}"
              tap_action:
                action: more-info
  person_popup:
    default:
      - phone_base: pixel_8
      - watch_base: pixel_watch
    card:
      type: vertical-stack
      cards:
        - type: custom:mushroom-entity-card
          entity: person.[[person]]
          layout: horizontal
          icon_type: entity-picture
          primary_info: state
          secondary_info: last-changed
          tap_action:
            action: none
          hold_action:
            action: none
          card_mod:
            style:
              .: ":host {\n  /* Define Person State colors. Can be added to theme\
                \ */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n \
                \ --state-person-unknown: var(--grey-color);\n\n  /* Set Person State\
                \ color */\n  --state-person:\n  {% if is_state(config.entity, ['home',\
                \ 'not_home', 'unknown']) %}\n    var(--state-person-{{ states(config.entity)\
                \ | replace('_', '-') }})\n  {% else %}\n    var(--state-person-zone)\n\
                \  {% endif %};\n\n  /* Match styling to Mushroom Title */\n  --mush-card-primary-font-size:\
                \ var(--mush-title-font-size, 24px);\n  --mush-card-primary-font-weight:\
                \ var(--mush-title-font-weight, normal);\n  --mush-card-primary-line-height:\
                \ var(--ush-title-line-height, 1.2);\n  --mush-card-secondary-font-size:\
                \ var(--mush-title-font-size, 16px);\n  --mush-card-secondary-font-weight:\
                \ var(--mush-title-font-weight, normal);\n  --mush-card-secondary-line-height:\
                \ var(--mush-title-line-height, 1.2);\n}\nha-card {\n  /* Remove default\
                \ card styling */\n  --ha-card-background: none;\n  box-shadow: none;\n\
                \  --ha-card-border-width: 0;\n\n  /* Increase icon size */\n  --icon-size:\
                \ 72px;\n\n  /* Center card */\n  margin: auto;\n  width: fit-content;\n\
                \n  /* Add padding to bottom of card */\n  padding: 0px 0px var(--mush-title-spacing,\
                \ 12px) 0px !important;\n\n  /* Make card non-responsive to select\
                \ and pointer */\n  user-select: none;\n  pointer-events: none;\n\n\
                \  transition: all 0s;\n}\n"
              mushroom-shape-avatar$: ".picture {\n  /* Style shadow around avatar\
                \ */\n  background-color: var(--state-person);\n  box-shadow: 0 0\
                \ 4px 2px var(--state-person);\n  margin-right: var(--mush-title-spacing,\
                \ 12px);\n}\n"
        - type: custom:history-explorer-card
          cardName: historycard-person.[[person]]
          header: hide
          uiLayout:
            selector: hide
          labelsVisible: false
          labelAreaWidth: 0
          tooltipShowDuration: true
          tooltipSize: slim
          stateTextMode: auto
          graphs:
            - type: timeline
              title: Timeline
              entities:
                - entity: person.[[person]]
                  process: "( state == \"home\" ) ? \"Home\"\n  : ( state == \"not_home\"\
                    \ ) ? \"Away\"\n  : state"
          stateColors:
            Home: rgb(0,138,23)
            Away: rgb(57,64,70)
          card_mod:
            style:
              .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                \ none;\n  box-shadow: none;\n}\n"
        - type: horizontal-stack
          cards:
            - type: custom:mushroom-template-card
              entity: sensor.home_[[person]]_direction_of_travel
              primary: "{% if is_state(\"person.[[person]]\", \"home\") %}\n  Home\n\
                {% elif is_state(\"person.[[person]]\", \"not_home\") %}\n  Away\n\
                {% else %}\n  {{ states(\"person.[[person]]\") }}\n{% endif %}"
              secondary: '{{ ((states("sensor.home_[[person]]_distance") | float)
                / 5280) | round(1) }} mi'
              icon: "{% if is_state(entity, \"towards\") %}\n  mdi:map-marker-left\n\
                {% elif is_state(entity, \"away_from\") %}\n  mdi:map-marker-right\n\
                {% else %}\n  mdi:map-marker-path\n{% endif %}"
              icon_color: "{% if is_state(entity, \"towards\") %}\n  green\n{% elif\
                \ is_state(entity, \"away_from\") %}\n  orange\n{% else %}\n  grey\n\
                {% endif %}"
              layout: vertical
              tap_action:
                action: none
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                    \ auto;\n\n  /* Make card non-responsive to select and pointer\
                    \ */\n  user-select: none;\n  pointer-events: none;\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[phone_base]]_[[person]]_battery_level
              layout: vertical
              primary: '{{ states(entity) }}%'
              secondary: '{{ states("sensor.[[phone_base]]_[[person]]_battery_state")
                | replace(''_'', '' '') | title }}

                '
              icon: '{% from "util.jinja" import battery_icon %} {{ battery_icon(entity)
                }}'
              icon_color: "{% from \"util.jinja\" import battery_color %} {% if is_state(\"\
                sensor.[[phone_base]]_[[person]]_battery_state\", \"charging\") %}\n\
                \  light-blue\n{% else %}\n  {{ battery_color(entity) }}\n{% endif\
                \ %}"
              badge_icon: "{% set charge = \"sensor.[[phone_base]]_[[person]]_battery_state\"\
                \ %} {% set type = \"sensor.[[phone_base]]_[[person]]_charger_type\"\
                \ %} {% if is_state(charge, \"charging\") and is_state(type, \"wireless\"\
                ) %}\n  mdi:access-point\n{% elif is_state(charge, \"charging\") %}\n\
                \  mdi:lightning-bolt\n{% elif int(states(entity), 0) < 10 %}\n  mdi:exclamation-thick\n\
                {% endif %}"
              badge_color: '{{ ''red'' if int(states(entity), 0) < 10 else ''light-blue''
                }}'
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                    \ auto;\n}\nha-state-icon {\n  /* Icon charging animation */\n\
                    \  {{ 'animation: charge 3s linear infinite;' if is_state(\"sensor.[[phone_base]]_[[person]]_battery_state\"\
                    , \"charging\") }}\n}\n@keyframes charge {\n  0%, 80% { clip-path:\
                    \ inset(0 0 0 0); }\n  10% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 84%, 34% 84%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  20% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 74%, 34% 74%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  30% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 64%, 34% 64%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  40% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 54%, 34% 54%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  50% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 44%, 34% 44%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  60% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 34%, 34% 34%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  70% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 24%, 34% 24%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n}\n"
                  mushroom-shape-icon$: ".shape {\n  /* Radial progress bar */\n \
                    \ background:\n    radial-gradient(var(--card-background-color)\
                    \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--icon-color)\
                    \ {{ states(config.entity) }}% 0%, var(--card-background-color)\
                    \ 0% 100%\n  );\n}\n.shape:after {\n  /* Add back icon shape */\n\
                    \  content: \"\";\n  height: 100%;\n  width: 100%;\n  position:\
                    \ absolute;\n  border-radius: var(--icon-border-radius);\n  background:\
                    \ var(--shape-color);\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_battery_level
              layout: vertical
              primary: '{{ states(entity) }}%'
              secondary: '{{ states("sensor.[[watch_base]]_[[person]]_battery_state")
                | replace(''_'', '' '') | title }}

                '
              icon: mdi:watch
              icon_color: "{% from \"util.jinja\" import battery_color %} {% if is_state(\"\
                sensor.[[watch_base]]_[[person]]_battery_state\", \"charging\") %}\n\
                \  light-blue\n{% else %}\n  {{ battery_color(entity) }}\n{% endif\
                \ %}"
              badge_icon: "{% set charge = \"sensor.[[watch_base]]_[[person]]_battery_state\"\
                \ %} {% set type = \"sensor.[[watch_base]]_[[person]]_charger_type\"\
                \ %} {% if is_state(charge, \"charging\") and is_state(type, \"wireless\"\
                ) %}\n  mdi:access-point\n{% elif int(states(entity), 0) < 10 %}\n\
                \  mdi:exclamation-thick\n{% endif %}"
              badge_color: '{{ ''red'' if int(states(entity), 0) < 10 else ''light-blue''
                }}'
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                    \ auto;\n}\n"
                  mushroom-shape-icon$: ".shape {\n  /* Radial progress bar */\n \
                    \ background:\n    radial-gradient(var(--card-background-color)\
                    \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--icon-color)\
                    \ {{ states(config.entity) }}% 0%, var(--card-background-color)\
                    \ 0% 100%\n  );\n}\n.shape:after {\n  /* Add back icon shape */\n\
                    \  content: \"\";\n  height: 100%;\n  width: 100%;\n  position:\
                    \ absolute;\n  border-radius: var(--icon-border-radius);\n  background:\
                    \ var(--shape-color);\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[phone_base]]_[[person]]_wifi_signal_strength
              layout: vertical
              primary: '{{ states("sensor.[[phone_base]]_[[person]]_wifi_connection")
                }}'
              secondary: "{% set signal_level = int(states(entity), 0) %} {% if signal_level\
                \ != -1 %}\n  {{ signal_level }} dBm\n{% endif %}"
              icon: '{% from "util.jinja" import wifi_icon %} {{ wifi_icon(entity,
                "sensor.[[phone_base]]_[[person]]_wifi_connection") }}'
              icon_color: cyan
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
        - type: horizontal-stack
          cards:
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_activity_state
              layout: vertical
              primary: Activity
              secondary: '{{ states(entity) | title }}'
              icon: mdi:account-reactivate
              icon_color: pink
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_daily_steps
              layout: vertical
              primary: Steps
              secondary: '{{ states(entity, with_unit=True) }}'
              icon: mdi:walk
              icon_color: lime
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_daily_calories
              layout: vertical
              primary: Calories
              secondary: '{{ states(entity, with_unit=True) }}'
              icon: mdi:food
              icon_color: brown
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
        - type: custom:mushroom-chips-card
          alignment: center
          chips:
            - type: template
              content: Find Phone
              icon: mdi:target
              icon_color: red
              tap_action:
                action: call-service
                service: script.notify_mobile
                confirmation:
                  text: Are you sure you want to ring this device?
                data:
                  who: '{{ "[[person]]" }}'
                  title: Find Phone
                  message: Ringing phone...
                  channel: alarm_stream
                  tag: find-phone
                  importance: high
                target: {}
              hold_action:
                action: call-service
                service: script.notify_mobile
                confirmation:
                  text: Cancel find phone?
                data:
                  who: '{{ "[[person]]" }}'
                  message: clear_notification
                  tag: find-phone
          card_mod:
            style: "ha-card {\n  /* Style Chip like Mushroom button */\n  --chip-background:\
              \ rgba(var(--rgb-red), 0.2);\n  --chip-border-radius: var(--mush-control-border-radius,\
              \ 12px);\n  --chip-height: var(--mush-control-height, 42px);\n  --chip-box-shadow:\
              \ none;\n  user-select: none;\n}\nha-card:active {\n  /* Add effect\
              \ to give feedback on button press */\n  --chip-background: rgba(var(--rgb-red),\
              \ 0.4);\n}\n"
        - type: custom:mushroom-entity-card
          entity: sensor.[[phone_base]]_[[person]]_geocoded_location
          name: Location
          hold_action:
            action: none
          double_tap_action:
            action: none
          tap_action:
            action: none
          card_mod:
            style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
              \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width: 0;\n\
              \n  /* Make card non-responsive to select and pointer */\n  user-select:\
              \ none;\n  pointer-events: none;\n}\n"
        - type: map
          entities:
            - entity: person.[[person]]
          aspect_ratio: '4:3'
          hours_to_show: 1
          auto_fit: true
          card_mod:
            style:
              .: ":host {\n  /* Define Person State colors. Can be added to theme\
                \ */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n \
                \ --state-person-unknown: var(--grey-color);\n\n  /* Set person state\
                \ color */\n  --state-person:\n  {% if is_state(config.entities[0].entity,\
                \ ['home', 'not_home', 'unknown']) %}\n    var(--state-person-{{ states(config.entities[0].entity)\
                \ | replace('_', '-') }})\n  {% else %}\n    var(--state-person-zone)\n\
                \  {% endif %};\n}\nha-card {\n  /* Remove default card styling without\
                \ affecting child elements */\n  box-shadow: none;\n  border-width:\
                \ 0;\n  /*border-radius: 0px 0px var(--ha-card-border-radius, 12px)\
                \ var(--ha-card-border-radius, 12px);*/\n  transition: all 0s;\n}\n\
                ha-icon-button {\n  /* Position center button */\n  bottom: 12px;\n\
                \  left: 12px !important;\n  top: auto !important;\n\n  /* Style center\
                \ button to match Chip */\n  color: var(--deep-orange-color) !important;\n\
                \  background: color-mix(in srgb, var(--deep-orange-color) 20%, transparent);\n\
                \  border-radius: var(--mush-chip-border-radius, 19px);\n  border:\
                \ var(--ha-card-border-width, 1px) solid var(--ha-card-border-color,\
                \ var(--divider-color, #e0e0e0)) !important;\n}\n"
              ha-map $ ha-entity-marker $: ".marker {\n  /* Style person marker &\
                \ adjust position to avoid blocking waypoints */\n  border: 3px solid\
                \ var(--state-person) !important;\n  border-radius: 50% 50% 50% 0px\
                \ !important;\n  transform: rotate(-45deg) translate(50%, -50%);\n\
                \  overflow: visible !important;\n  background: var(--state-person)\
                \ !important;\n}\n.entity-picture {\n  /* Correct orientation of person\
                \ avatar */\n  transform: rotate(45deg);\n  border-radius: 50%;\n\
                }\n"
              ha-map $: "path:first-child {\n  /* Style accuracy radius */\n  fill:\
                \ color-mix(in srgb, var(--state-person) 50%, transparent);\n  stroke-width:\
                \ 0px;\n}\npath:nth-child(even) {\n  /* Styling for waypoints */\n\
                \  stroke: var(--primary-color);\n  fill: var(--primary-color);\n\
                \  stroke-width: 4px;\n}\npath:nth-child(odd):not(:first-child) {\n\
                \  /* Styling for lines */\n  stroke: var(--primary-color);\n  stroke-width:\
                \ 4px;\n}\n.leaflet-control-attribution {\n  /* Style attribution\
                \ text */\n  background: rgba(var(--rgb-card-background-color), 0.2)\
                \ !important;\n  font-size: 8px;\n}\n.leaflet-container a {\n  /*\
                \ Set color of zoom icons & attribution text */\n  color: var(--secondary-text-color);\n\
                }\n.leaflet-control-zoom-in,\n.leaflet-control-zoom-out {\n  /* Style\
                \ zoom buttons like Chips */\n  border-radius: var(--mush-chip-border-radius,\
                \ 19px) !important;\n  padding: 3px;\n  background: rgb(var(--rgb-secondary-text-color),\
                \ 0.2) !important;\n  margin: 8px 12px 0px;\n  border: var(--ha-card-border-width,\
                \ 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0))\
                \ !important;\n}\n.leaflet-top {\n  /* Move zoom buttons to bottom\
                \ of map */\n  bottom: 0px !important;\n}\n.leaflet-control-zoom {\n\
                \  /* Allow buttons to be moved */\n  position: absolute !important;\n\
                \n  /* Adjust spacing for border */\n  bottom: calc(2 * var(--ha-card-border-width,\
                \ 1px) + 56px);\n\n  /* Remove extra margin */\n  margin: 0px !important;\n\
                \n  /* Remove zoom control border */\n  border: none !important;\n\
                }\n"
              ha-icon-button $ mwc-icon-button $: "button {\n  /* Size center button\
                \ to match Chip */\n  height: var(--mush-chip-height, 36px) !important;\n\
                \  width: var(--mush-chip-height, 36px) !important;\n  --mdc-icon-size:\
                \ 22px;\n}\n"
  room_card:
    default:
      - primary: Room
      - entity: light.all_lights
      - icon: mdi:home-assistant
      - icon_color: disabled
      - path: main
      - chips: []
      - chips_top: []
    card:
      type: custom:vertical-stack-in-card
      card_mod:
        style: "ha-card {\n  transition: all 0s;\n  {% if is_state(\"[[entity]]\"\
          , \"on\") %}\n    background: rgba([[icon_color]], 0.2);\n  {% endif %}\n\
          }\n"
      cards:
        - type: custom:mushroom-template-card
          entity: '[[entity]]'
          primary: '[[primary]]'
          secondary: "{%- if has_value(\"[[temperature]]\") -%}\n  {{ states(\"[[temperature]]\"\
            , rounded=True, with_unit=True) }}\n{%- else -%}\n  {{ \"-\" }}\n{%- endif\
            \ -%}\n"
          icon: '[[icon]]'
          icon_color: '[[icon_color]]'
          fill_container: true
          tap_action:
            action: navigate
            navigation_path: '[[path]]'
          hold_action:
            action: toggle
          card_mod:
            style: ":host {\n  --mush-card-primary-font-size: 16px;\n  --mush-card-secondary-font-size:\
              \ 13px;\n  --mush-icon-size: 2.84em;\n  --mush-icon-symbol-size: 1.3em;\n\
              \  {% if is_state(config.entity, \"on\") %}\n  --ha-card-background:\
              \ rgba([[icon_color]], 0.05);\n  {% endif %}\n}\nha-card {\n  transition:\
              \ all 0s;\n  padding-bottom: 0 !important;\n}\nmushroom-shape-icon {\n\
              \  position: absolute;\n  top: -57px;\n  left: -40px;\n}\nmushroom-state-info\
              \ {\n  padding-left: 34px;\n  z-index: 1;\n}\n"
        - type: custom:mushroom-chips-card
          alignment: end
          chips: '[[chips_top]]'
          card_mod:
            style: ":host {\n  position: absolute;\n  top: 0px;\n  right: calc(var(--ha-card-border-radius,\
              \ 12px) / 2);\n  z-index: 1;\n}\nha-card {\n  --chip-box-shadow: none;\n\
              \  --chip-background: rgba(var(--rgb-disabled), 0.1);\n  --chip-border-width:\
              \ 0;\n  --chip-spacing: 1px;\n}\n"
        - type: custom:mushroom-chips-card
          alignment: end
          chips: '[[chips]]'
          card_mod:
            style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background: rgba(var(--rgb-disabled),\
              \ 0.1);\n  --chip-border-width: 0;\n  --chip-spacing: 1px;\n  margin-right:\
              \ calc(var(--ha-card-border-radius, 12px) / 2);\n}\n"
  title_chips:
    default:
      - title: Title
      - subtitle: ''
      - chips: []
    card:
      type: custom:layout-card
      layout_type: custom:grid-layout
      layout:
        grid-template-columns: auto max-content
        grid-template-areas: '"title chips"

          "subtitle subtitle"

          '
        margin: -4px 0 -4px 0
      cards:
        - type: custom:mushroom-title-card
          title: '[[title]]'
          view_layout:
            grid-area: title
        - type: custom:mushroom-title-card
          subtitle: '[[subtitle]]'
          view_layout:
            grid-area: subtitle
          card_mod:
            style:
              .: "h2 {\n  transition: all 0s;\n  padding: 0 16px 12px;\n}\n.header\
                \ {\n  transition: all 0s;\n  --title-padding: 0;\n}\n"
        - type: custom:mushroom-chips-card
          view_layout:
            grid-area: chips
          alignment: end
          card_mod:
            style: ":host {\n  align-self: center;\n}\n"
          chips: '[[chips]]'
  uptime_card:
    default:
      - name: Uptime
      - icon: mdi:cloud-arrow-up-outline
      - ko_icon: mdi:exclamation-thick
      - ok: 'on'
      - ko: 'off'
      - hours: 72
      - amount: 72
      - alias_ok: Online
      - alias_ko: Offline
    card:
      type: custom:uptime-card
      entity: '[[entity]]'
      title_template: '[[name]]'
      icon: '[[icon]]'
      ko_icon: '[[ko_icon]]'
      ok: '[[ok]]'
      ko: '[[ko]]'
      hours_to_show: '[[hours]]'
      update_interval: 30
      init:
        animation: raise
      alias:
        ok: '[[alias_ok]]'
        ko: '[[alias_ko]]'
      icon_adaptive_color: true
      title_adaptive_color: true
      color:
        ok: var(--green-color)
        ko: var(--disabled-color)
        half: var(--blue-grey-color)
        none: var(--black-color)
      bar:
        spacing: 1
        height: 20
        round: 0
        amount: '[[amount]]'
      show:
        average: true
        status: true
        title: true
        header: true
        icon: true
        timeline: true
        footer: true
      alignment:
        status: spaced
        header: left
        icon_first: true
      tap_action:
        action: more-info
      tooltip:
        animation: true
        hour24: false
  windows_updates_list:
    card:
      type: markdown
      card_mod:
        style: "ha-card {\n  --ha-card-background: none\n}\n"
      content: '### {{ state_attr("[[entity]]", "friendly_name") }}: {{ states("[[entity]]")
        }}

        {% for item in state_attr("[[entity]]", "WindowsUpdates") %} __{{ item.Title
        }}__ <blockquote> {{ item.Description }}<br> <a href="{{ item.SupportUrl }}">Support
        Link</a>{% if item.KbArticleIDs %} | <a href="https://catalog.update.microsoft.com/Search.aspx?q={{
        item.KbArticleIDs[0] }}">KB Article</a>{% endif %} </blockquote> {% endfor
        %}'
views:
  - title: Main
    theme: Backend-selected
    path: main
    layout:
      max_cols: 1
    icon: mdi:home
    type: custom:vertical-layout
    badges: []
    cards:
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-template-columns: 55px auto
              grid-template-rows: auto
              margin: 0
              padding: 5px
            cards:
              - type: custom:mushroom-chips-card
                card_mod:
                  style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background:\
                    \ none;\n  --chip-border-width: 0;\n  --chip-icon-size: 1em;\n\
                    }\n"
                chips:
                  - type: menu
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:mushroom-chips-card
                    alignment: justify
                    card_mod:
                      style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background:\
                        \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0;\n\
                        \  --chip-icon-size: 0.65em;\n  transition: margin 0s;\n \
                        \ margin: auto calc(var(--ha-card-border-radius, 12px) / 4);\n\
                        }\n"
                    chips:
                      - type: template
                        entity: lock.front_door
                        content: '{% from "util.jinja" import security_count %} {{
                          iif(security_count() | int == 0, "Secure", "Not Secure")
                          }}'
                        icon: '{% from "util.jinja" import security_count %} {{ iif(security_count()
                          | int == 0, "mdi:shield-check", "mdi:shield-alert") }}'
                        icon_color: '{% from "util.jinja" import security_count %}
                          {{ iif(security_count() | int == 0, "green", "red") }}'
                        tap_action:
                          action: navigate
                          navigation_path: security
                      - type: template
                        entity: binary_sensor.all_doors
                        card_mod:
                          style:
                            .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                              \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                              \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                              \  color: var(--cyan-color);\n  font-weight: bolder;\n\
                              \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n\
                              {% endif %}\n"
                        icon_color: '{{ iif(is_state(entity, "on"), "cyan", "disabled")
                          }}'
                        icon: '{{ iif(is_state(entity, "on"), "mdi:door-open", "mdi:door")
                          }}'
                        tap_action:
                          action: navigate
                          navigation_path: '#all-doors'
                      - type: template
                        card_mod:
                          style:
                            .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                              \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                              \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                              \  color: var(--amber-color);\n  font-weight: bolder;\n\
                              \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n\
                              {% endif %}\n"
                        entity: light.all_lights
                        icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-group",
                          "mdi:lightbulb-group-off") }}'
                        icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                          }}'
                        tap_action:
                          action: navigate
                          navigation_path: lights
                        hold_action:
                          action: call-service
                          service: light.turn_off
                          target:
                            entity_id: light.all_lights
                      - type: template
                        entity: sensor.emporiavue_main_total_power
                        content: "{% if has_value(entity) %}\n  {% set power = int(states(entity),\
                          \ 0) | abs %}\n  {% if power > 1000 %}\n    {{ (power |\
                          \ float * 0.001) | round(2) }} kWh\n  {% else %}\n    {{\
                          \ power }} W\n  {% endif %}\n{% endif %}"
                        icon: "{% if has_value(entity) %}\n  {% if int(states(entity),\
                          \ 0) < 0 %}\n    mdi:transmission-tower-export\n  {% else\
                          \ %}\n    mdi:transmission-tower-import\n  {% endif %}\n\
                          {% else %}\n  mdi:transmission-tower-off\n{% endif %}"
                        icon_color: "{% if has_value(entity) %}\n  {% if int(states(entity),\
                          \ 0) < 0 %}\n    lime\n  {% else %}\n    deep-orange\n \
                          \ {% endif %}\n{% else %}\n  disabled\n{% endif %}"
                        tap_action:
                          action: navigate
                          navigation_path: power
                  - type: custom:mushroom-chips-card
                    alignment: justify
                    card_mod:
                      style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background:\
                        \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0;\n\
                        \  --chip-icon-size: 0.65em;\n  transition: margin 0s;\n \
                        \ margin: auto calc(var(--ha-card-border-radius, 12px) / 4);\n\
                        }\n"
                    chips:
                      - type: template
                        entity: binary_sensor.computers
                        icon: mdi:desktop-tower
                        icon_color: '{{ "teal" if is_state(entity, "on") else "disabled"
                          }}'
                        tap_action:
                          action: navigate
                          navigation_path: computer
                        card_mod:
                          style:
                            .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                              \ {\n  content: \"{{ expand(config.entity) | selectattr(\"\
                              state\", \"==\", \"on\") | list | count }}\";\n  position:\
                              \ absolute;\n  color: var(--teal-color);\n  font-weight:\
                              \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size:\
                              \ 12px;\n}\n{% endif %}\n"
                      - type: template
                        entity: sensor.bambu_p1s_print_status
                        icon: mdi:printer-3d
                        icon_color: "{% if is_state(\"sensor.bambu_p1s_current_stage\"\
                          , \"idle\") %}\n  disabled\n{% elif is_state(entity, \"\
                          running\") %}\n  green\n{% elif is_state(entity, \"finish\"\
                          ) %}\n  orange\n{% elif states(entity) in [\"idle\", \"\
                          pause\"] %}\n  yellow\n{% elif states(entity) in [\"init\"\
                          , \"prepare\", \"slicing\"] %}\n  light-blue\n{% elif is_state(entity,\
                          \ \"failed\") %}\n  red\n{% else %}\n  disabled\n{% endif\
                          \ %}"
                        content: "{% if is_state(entity, \"running\") and has_value(\"\
                          sensor.bambu_p1s_current_layer\") %}\n  {{ states('sensor.bambu_p1s_current_layer')\
                          \ }} / {{\n  states('sensor.bambu_p1s_total_layer_count')\
                          \ }}\n{% endif %}"
                        hold_action:
                          action: none
                        tap_action:
                          action: navigate
                          navigation_path: bambu
                      - type: template
                        entity: sensor.meater_probe_cook_state
                        icon: mdi:food-drumstick
                        icon_color: '{{ has_value(entity) | iif("brown", "disabled")
                          }}'
                        content: "{% if has_value(entity) %}\n  {{ states(\"sensor.meater_probe_internal\"\
                          ) }} °F\n  {% if has_value(\"sensor.meater_probe_cook_time_remaining\"\
                          )  %}\n    {% set t = (states(\"sensor.meater_probe_cook_time_remaining\"\
                          ) | as_datetime - now()).total_seconds() %}\n    | {{ t\
                          \ | timestamp_custom('%-H hr %-M min' if t > 3600 else '%-M\
                          \ min', false) }}\n  {% endif %}\n{% endif %}"
                        tap_action:
                          action: navigate
                          navigation_path: '#meater'
                      - type: conditional
                        conditions:
                          - condition: state
                            entity: binary_sensor.cat_feeder_error
                            state: 'on'
                        chip:
                          type: template
                          entity: binary_sensor.cat_feeder_error
                          icon_color: red
                          icon: mdi:cat
                          tap_action:
                            action: navigate
                            navigation_path: kitchen
                      - type: conditional
                        conditions:
                          - condition: numeric_state
                            entity: sensor.offline_devices
                            above: 0
                        chip:
                          type: template
                          entity: sensor.offline_devices
                          icon_color: blue-grey
                          icon: mdi:network-off
                          card_mod:
                            style:
                              .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                                \ {\n  content: \"{{ states(config.entity) }}\";\n\
                                \  position: absolute;\n  color: var(--blue-grey-color);\n\
                                \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                                \  font-size: 12px;\n}\n{% endif %}\n"
                          tap_action:
                            action: navigate
                            navigation_path: '#offline-devices'
                      - type: conditional
                        conditions:
                          - condition: numeric_state
                            entity: sensor.low_battery_devices
                            above: 0
                        chip:
                          type: template
                          entity: sensor.low_battery_devices
                          icon_color: red
                          icon: mdi:battery-alert
                          card_mod:
                            style:
                              .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                                \ {\n  content: \"{{ states(config.entity) }}\";\n\
                                \  position: absolute;\n  color: var(--red-color);\n\
                                \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                                \  font-size: 12px;\n}\n{% endif %}\n"
                          tap_action:
                            action: navigate
                            navigation_path: '#low-battery'
                      - type: conditional
                        conditions:
                          - condition: numeric_state
                            entity: sensor.water_softener_salt_monitor_salt_level
                            below: 10
                        chip:
                          type: template
                          entity: sensor.water_softener_salt_monitor_salt_level
                          icon_color: cyan
                          icon: mdi:arrow-expand-vertical
                          card_mod:
                            style:
                              .: "ha-card:after {\n  content: \"{{ states(config.entity)\
                                \ | round(0) }}\";\n  position: absolute;\n  color:\
                                \ var(--red-color);\n  font-weight: bolder;\n  top:\
                                \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n"
                          tap_action:
                            action: navigate
                            navigation_path: utility
                      - type: conditional
                        conditions:
                          - condition: numeric_state
                            entity: sensor.updates
                            above: 0
                          - condition: user
                            users:
                              - f615672fc2554783beab56221097564e
                        chip:
                          type: template
                          entity: sensor.updates
                          icon_color: red
                          icon: mdi:package-up
                          card_mod:
                            style:
                              .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                                \ {\n  content: \"{{ states(config.entity) }}\";\n\
                                \  position: absolute;\n  color: var(--red-color);\n\
                                \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                                \  font-size: 12px;\n}\n{% endif %}\n"
                          tap_action:
                            action: navigate
                            navigation_path: /config/updates
                card_mod:
                  style: "ha-card {\n  background-color: var(--primary-background-color);\n\
                    \  border-radius: var(--ha-card-border-radius, 12px);\n  /*box-shadow:\
                    \ var(--ha-card-box-shadow, none);*/\n  border-width: 0;\n}\n"
          - type: custom:mushroom-chips-card
            alignment: justify
            chips:
              - type: weather
                entity: weather.owm_daily
                show_conditions: true
                show_temperature: true
                tap_action:
                  action: navigate
                  navigation_path: '#weather'
              - type: template
                entity: sensor.ecobee_mode
                content: '{{ states("sensor.ecobee_current_temperature", with_unit=True)
                  }}'
                icon: mdi:thermostat
                icon_color: "{% if is_state(entity, \"Heating\") %}\n  red\n{% elif\
                  \ is_state(entity, \"Cooling\") %}\n  light-blue\n{% elif is_state(entity,\
                  \ \"Fan\") %}\n  amber\n{% elif is_state(entity, \"Off\") %}\n \
                  \ grey\n{% else %}\n  blue-grey\n{% endif %}"
                tap_action:
                  action: navigate
                  navigation_path: climate
              - type: template
                entity: sensor.airgradient_kitchen_pm_2_5_aqi
                content: '{{ states(entity) | int(default="?") }} / {{ states("sensor.airnow_air_quality_index")
                  | int(default="?") }}'
                icon: '{{ iif(has_value(entity), "mdi:blur", "mdi:blur-off") }}'
                icon_color: "{% if has_value(entity) %}\n  {% set level = states(entity)\
                  \ | float(default=0) %}\n  {% if level >= 300 %}\n    red\n  {%\
                  \ elif level >= 200 %}\n    purple\n  {% elif level >= 150 %}\n\
                  \    pink\n  {% elif level >= 100 %}\n    orange\n  {% elif level\
                  \ >= 50 %}\n    yellow\n  {% elif level >= 0 %}\n    green\n  {%\
                  \ endif %}\n{% else %}\n  disabled\n{% endif %}"
                tap_action:
                  action: navigate
                  navigation_path: '#air-quality'
              - type: template
                entity: sensor.allergy_index_today
                content: '{{ states(entity) | float(default=0) }}'
                icon: mdi:flower-pollen
                icon_color: "{% set level = states(entity) | float(default=0) %}\n\
                  {% if level >= 9.7 %}\n  red\n{% elif level >= 7.3 %}\n  orange\n\
                  {% elif level >= 4.9 %}\n  yellow\n{% elif level >= 2.5 %}\n  lime\n\
                  {% else %}\n  green\n{% endif %}"
                tap_action:
                  action: navigate
                  navigation_path: '#allergy'
            card_mod:
              style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background:\
                \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0;\n  --chip-icon-size:\
                \ 0.65em;\n  transition: margin 0s;\n  margin: auto calc(var(--ha-card-border-radius,\
                \ 12px) / 4);\n}\n"
      - type: horizontal-stack
        cards:
          - type: custom:decluttering-card
            template: person_card
            variables:
              - person: joshua
              - name: Joshua
          - type: custom:decluttering-card
            template: person_card
            variables:
              - person: amy
              - name: Amy
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            entity: sensor.garbage_collection
            layout: vertical
            icon: mdi:trash-can
            icon_color: "{% if is_state(\"input_boolean.garbage_collection\", \"on\"\
              ) %}\n  green\n{% elif is_state(entity, \"0\") %}\n  red\n{% elif is_state(entity,\
              \ \"1\") %}\n  yellow\n{% else %}\n  disabled\n{% endif %}"
            badge_icon: "{% if is_state(\"input_boolean.garbage_collection\", \"on\"\
              ) %}\n  mdi:alpha-c\n{% elif is_state(entity, \"0\") %}\n  mdi:alert\n\
              {% elif state_attr(entity, \"days\") | int > 9 %}\n  mdi:numeric-9-plus\n\
              {% else %}\n  mdi:numeric-{{ state_attr(entity, \"days\") }}\n{% endif\
              \ %}"
            tap_action:
              action: more-info
            hold_action:
              action: call-service
              service: script.collection_at_curb
              data:
                entity: sensor.garbage_collection
              target: {}
            card_mod:
              style:
                .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n  --icon-size: 48px;\n}\n{% set icon_size = \"2em\" %}\n{%-\
                  \ if is_state(\"input_boolean.garbage_collection\", \"on\") -%}\n\
                  \  {% set icon_color = \"rgb-green-color\" %}\n{%- elif is_state(config.entity,\
                  \ \"0\") -%}\n  {% set icon_color = \"rgb-red-color\" %}\n  {% set\
                  \ icon_size = \"1.2em\" %}\n{%- elif is_state(config.entity, \"\
                  1\") -%}\n  {% set icon_color = \"rgb-yellow-color\" %}\n{%- else\
                  \ -%}\n  {% set icon_color = \"primary-text-color\" %}\n{%- endif\
                  \ -%}\nmushroom-badge-icon {\n  --icon-color: rgb(var(--{{ icon_color\
                  \ }}));\n  --main-color: none;\n  --badge-icon-size: {{ icon_size\
                  \ }};\n}\n"
                mushroom-shape-icon$: ".shape {\n  {%- if is_state(\"input_boolean.garbage_collection\"\
                  , \"off\") and is_state(config.entity, \"0\") -%}\n  --shape-animation:\
                  \ ping 2s infinite;\n  {%- endif -%}\n}\n@keyframes ping {\n  0%\
                  \ { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.7); }\n  100%\
                  \ { box-shadow: 0 0 5px 15px transparent; }\n}\n"
          - type: custom:mushroom-template-card
            entity: sensor.recycle_collection
            layout: vertical
            icon: mdi:recycle
            icon_color: "{% if is_state(\"input_boolean.recycle_collection\", \"on\"\
              ) %}\n  green\n{% elif is_state(entity, \"0\") %}\n  red\n{% elif is_state(entity,\
              \ \"1\") %}\n  yellow\n{% else %}\n  disabled\n{% endif %}"
            badge_icon: "{% if is_state(\"input_boolean.recycle_collection\", \"on\"\
              ) %}\n  mdi:alpha-c\n{% elif is_state(entity, \"0\") %}\n  mdi:alert\n\
              {% elif state_attr(entity, \"days\") | int > 9 %}\n  mdi:numeric-9-plus\n\
              {% else %}\n  mdi:numeric-{{ state_attr(entity, \"days\") }}\n{% endif\
              \ %}"
            tap_action:
              action: more-info
            hold_action:
              action: call-service
              service: script.collection_at_curb
              data:
                entity: sensor.recycle_collection
              target: {}
            card_mod:
              style:
                .: "{% set icon_size = \"2em\" %}\n{%- if is_state(\"input_boolean.recycle_collection\"\
                  , \"on\") -%}\n  {% set icon_color = \"rgb-green-color\" %}\n{%-\
                  \ elif is_state(config.entity, \"0\") -%}\n  {% set icon_color =\
                  \ \"rgb-red-color\" %}\n  {% set icon_size = \"1.2em\" %}\n{%- elif\
                  \ is_state(config.entity, \"1\") -%}\n  {% set icon_color = \"rgb-yellow-color\"\
                  \ %}\n{%- else -%}\n  {% set icon_color = \"primary-text-color\"\
                  \ %}\n{%- endif -%}\nha-card {\n  /* Remove default card styling\
                  \ */\n  --ha-card-background: none;\n  --ha-card-box-shadow: none;\n\
                  \  --ha-card-border-width: 0;\n  --icon-size: 48px;\n}\nmushroom-badge-icon\
                  \ {\n  --icon-color: rgb(var(--{{ icon_color }}));\n  --main-color:\
                  \ none;\n  --badge-icon-size: {{ icon_size }};\n}\n"
                mushroom-shape-icon$: ".shape {\n  {%- if is_state(\"input_boolean.recycle_collection\"\
                  , \"off\") and is_state(config.entity, \"0\") -%}\n  --shape-animation:\
                  \ ping 2s infinite;\n  {%- endif -%}\n}\n@keyframes ping {\n  0%\
                  \ { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.7); }\n  100%\
                  \ { box-shadow: 0 0 5px 15px transparent; }\n}\n"
          - type: conditional
            conditions:
              - condition: numeric_state
                entity: sensor.mail_usps_mail
                above: 0
            card:
              type: custom:mushroom-template-card
              layout: vertical
              entity: sensor.mail_usps_mail
              icon: mdi:mail
              icon_color: blue
              badge_icon: "{% if int(states(entity), 0) > 0 %}\n  mdi:numeric-{{ states(entity)\
                \ }}\n{% elif int(states(entity), 0) > 9 %}\n  mdi:numeric-9-plus\n\
                {% endif %}"
              tap_action:
                action: fire-dom-event
                browser_mod:
                  service: browser_mod.popup
                  data:
                    title: Mail
                    size: fullscreen
                    content:
                      type: picture-entity
                      entity: camera.mail_usps_camera
                      camera_image: camera.mail_usps_camera
                      show_name: false
                      show_state: false
                      card_mod:
                        style: "ha-card {\n  --ha-card-background: none;\n}\n"
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n  --icon-size: 48px;\n}\nmushroom-badge-icon {\n  --icon-color:\
                  \ var(--{{ config.icon_color }});\n  --main-color: none;\n  --badge-icon-size:\
                  \ 2em;\n}\n"
          - type: conditional
            conditions:
              - condition: numeric_state
                entity: sensor.mail_packages_delivered
                above: 0
            card:
              type: custom:mushroom-template-card
              layout: vertical
              entity: sensor.mail_packages_delivered
              icon: mdi:package-variant
              icon_color: orange
              badge_icon: "{% if int(states(entity), 0) > 0 %}\n  mdi:numeric-{{ states(entity)\
                \ }}\n{% elif int(states(entity), 0) > 9 %}\n  mdi:numeric-9-plus\n\
                {% endif %}"
              tap_action:
                action: none
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n  --icon-size: 48px;\n}\nmushroom-badge-icon {\n  --icon-color:\
                    \ var(--{{ config.icon_color }}-color);\n  --main-color: none;\n\
                    \  --badge-icon-size: 2em;\n}\n"
                  mushroom-shape-icon$: ".shape {\n  {%- if int(states(config.entity),\
                    \ 0) > 0 -%}\n  --shape-animation: ping 2s infinite;\n  {%- endif\
                    \ -%}\n}\n@keyframes ping {\n  0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-{{\
                    \ config.icon_color }}), 0.7); }\n  100% { box-shadow: 0 0 5px\
                    \ 15px transparent; }\n}\n"
          - type: custom:decluttering-card
            template: package_delivery
            variables:
              - entity: sensor.mail_usps_delivering
              - name: USPS
              - icon: fab:usps
              - icon_color: blue
              - url: https://tools.usps.com/go/TrackConfirmAction?tLabels=##TRACK_ID##
          - type: custom:decluttering-card
            template: package_delivery
            variables:
              - entity: sensor.mail_ups_delivering
              - name: UPS
              - icon: fab:ups
              - icon_color: brown
              - url: https://www.ups.com/track?loc=en_US&tracknum=##TRACK_ID##
          - type: custom:decluttering-card
            template: package_delivery
            variables:
              - entity: sensor.mail_fedex_delivering
              - name: FedEx
              - icon: fab:fedex
              - icon_color: purple
              - url: https://www.fedex.com/fedextrack/?trknbr=##TRACK_ID##
          - type: custom:decluttering-card
            template: package_delivery
            variables:
              - entity: sensor.mail_amazon_packages
              - name: Amazon
              - icon: fab:amazon
              - icon_color: yellow
              - url: https://www.amazon.com/gp/your-account/order-details?orderID=##TRACK_ID##
          - type: conditional
            conditions:
              - entity: input_boolean.washer_status
                state: 'on'
            card:
              type: custom:mushroom-template-card
              entity: input_boolean.washer_status
              layout: vertical
              icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:washing-machine\n\
                {%- else -%}\n  mdi:washing-machine-off\n{%- endif -%}"
              icon_color: "{%- if is_state(entity, \"on\") -%}\n  blue\n{%- else -%}\n\
                \  disabled\n{%- endif -%}"
              tap_action:
                action: more-info
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n  --icon-size: 48px;\n}\nha-state-icon {\n  {%- if is_state(config.entity,\
                  \ \"on\") -%}\n  animation: shake 400ms ease-in-out infinite, drum\
                  \ 2s ease infinite;\n  transform-origin: 50% 110%;\n  {% endif %}\n\
                  }\n@keyframes shake {\n  0%, 100% { transform: translate(0, 0) rotate(0);\
                  \ }\n  20%  { transform: translate(0.4px, -0.4px) rotate(-4deg);\
                  \ }\n  40%  { transform: translate(-0.4px, 0.4px) rotate(4deg);\
                  \ }\n  60%  { transform: translate(0.4px, 0.4px) rotate(-4deg);\
                  \ }\n  80%  { transform: translate(-0.4px, -0.4px) rotate(4deg);\
                  \ }\n}\n@keyframes drum {\n  50%  { clip-path: polygon(0 0, 0 100%,\
                  \ 35% 100%, 34% 68%, 60% 41%, 71% 56%, 65% 74%, 47% 79%, 34% 68%,\
                  \ 35% 100%, 100% 100%, 100% 0); }\n}\n"
          - type: conditional
            conditions:
              - entity: input_boolean.dryer_status
                state: 'on'
            card:
              type: custom:mushroom-template-card
              entity: input_boolean.dryer_status
              layout: vertical
              icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:tumble-dryer\n{%-\
                \ else -%}\n  mdi:tumble-dryer-off\n{%- endif -%}"
              icon_color: "{%- if is_state(entity, \"on\") -%}\n  orange\n{%- else\
                \ -%}\n  disabled\n{%- endif -%}"
              tap_action:
                action: more-info
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n  --icon-size: 48px;\n}\nha-state-icon {\n  {%- if is_state(config.entity,\
                  \ \"on\") -%}\n  animation: shake 400ms ease-in-out infinite, drum\
                  \ 1s infinite;\n  transform-origin: 50% 65%;\n  {% endif %}\n}\n\
                  @keyframes shake {\n  0%, 100% { transform: rotate(4deg); }\n  50%\
                  \  { transform: rotate(-4deg); }\n}\n@keyframes drum {\n  50%  {\
                  \ clip-path: polygon(0 0, 0 100%, 35% 100%, 36% 74%, 31% 43%, 61%\
                  \ 40%, 71% 69%, 62% 78%, 36% 73%, 35% 100%, 100% 100%, 100% 0);\
                  \ }\n}\n"
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: sensor.ge_dishwasher_operating_mode
                    state: Cycle Active
                  - condition: state
                    entity: binary_sensor.ge_dishwasher_is_clean
                    state: 'on'
            card:
              type: custom:mushroom-template-card
              entity: sensor.ge_dishwasher_cycle_state
              layout: vertical
              icon: mdi:dishwasher
              icon_color: "{%- if is_state(entity, \"Pre Wash\") -%}\n  purple\n{%-\
                \ elif is_state(entity, \"Main Wash\") -%}\n  cyan\n{%- elif is_state(entity,\
                \ \"Rinsing\") -%}\n  blue\n{%- elif is_state(entity, \"Sanitizing\"\
                ) -%}\n  light-blue\n{%- elif is_state(entity, \"Drying\") -%}\n \
                \ orange\n{%- elif is_state(\"binary_sensor.ge_dishwasher_is_clean\"\
                , \"on\") -%}\n  green\n{%- else -%}\n  disabled\n{%- endif -%}"
              tap_action:
                action: more-info
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n  --icon-size: 48px;\n}\nha-state-icon {\n  {%- if not is_state(config.entity,\
                    \ \"N/A\") -%}\n  animation: bounce 1.5s ease-in-out infinite,\
                    \ wash 1s ease-in-out infinite;\n  transform-origin: 50% 75%;\n\
                    \  {% endif %}\n}\n@keyframes bounce {\n  0%, 20%, 50%, 80%, 100%\
                    \ {transform: translateY(0); }\n  40% { transform: translateY(-1.2px)\
                    \ rotate(5deg); }\n  60% { transform: translateY(-1.1px) rotate(-4deg);\
                    \ }\n}\n@keyframes wash {\n  50% { clip-path: polygon(0 0, 0 100%,\
                    \ 35% 100%, 36% 74%, 31% 43%, 61% 40%, 71% 69%, 62% 78%, 36% 73%,\
                    \ 35% 100%, 100% 100%, 100% 0); }\n}\n"
                  mushroom-shape-icon$: "{%- if not is_state(config.entity, \"Off\"\
                    )\n  and has_value(\"sensor.ge_dishwasher_time_remaining\")\n\
                    \  and has_value(\"sensor.ge_dishwasher_duration\")\n  and not\
                    \ is_state(\"sensor.ge_dishwasher_duration\", \"Off\")\n-%} {%-\
                    \ set entity_remain = states(\"sensor.ge_dishwasher_time_remaining\"\
                    ) -%} {%- set entity_duration = states(\"sensor.ge_dishwasher_duration\"\
                    ) -%} {%- set remaining =\n  (int(entity_remain.split(\":\")[0],\
                    \ 0) * 60)\n    + (int(entity_remain.split(\":\")[1], 0))\n-%}\
                    \ {%- set duration =\n  (int(entity_duration.split(\":\")[0],\
                    \ 0) * 60)\n    + (int(entity_duration.split(\":\")[1], 0))\n\
                    -%} .shape {\n  /* Radial progress bar */\n  background:\n   \
                    \ radial-gradient(var(--card-background-color) 60%, transparent\
                    \ calc(60% + 1px)),\n    conic-gradient(var(--icon-color) {{ ((duration\
                    \ - remaining) / duration * 100) | round() }}% 0%, var(--card-background-color)\
                    \ 0% 100%);\n} .shape:after {\n  /* Add back icon shape */\n \
                    \ content: \"\";\n  height: 100%;\n  width: 100%;\n  position:\
                    \ absolute;\n  border-radius: var(--icon-border-radius);\n  background:\
                    \ var(--shape-color);\n} {%- endif -%}\n"
          - type: conditional
            conditions:
              - condition: numeric_state
                entity: sensor.emporiavue_microwave_power
                above: 200
            card:
              type: custom:mushroom-template-card
              entity: sensor.emporiavue_microwave_power
              layout: vertical
              icon: mdi:microwave
              icon_color: amber
              tap_action:
                action: more-info
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n  --icon-size: 48px;\n}\nha-state-icon:before {\n  content:\
                  \ \"\";\n  position: absolute;\n  width: 25%;\n  height: 25%;\n\
                  \  margin: 18% 0 0 10%;\n  animation: cook 1s linear infinite;\n\
                  }\n@keyframes cook {\n  0%, 100% { background: linear-gradient(90deg,\
                  \ white 0%, transparent 50%, transparent 100%); }\n  33% { background:\
                  \ linear-gradient(90deg, transparent 0%, white 50%, transparent\
                  \ 100%); }\n  66% { background: linear-gradient(90deg, transparent\
                  \ 0%, transparent 50%, white 100%); }\n}\n"
      - type: grid
        square: false
        columns: 2
        cards:
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Living Room
              - entity: light.living_room_lights
              - temperature: sensor.ecobee_current_temperature
              - icon: mdi:sofa-single
              - icon_color: 255, 152, 0
              - path: living
              - chips:
                  - type: template
                    entity: media_player.universal_living_room
                    icon_color: "{% set state = states(entity) %}\n{% if state ==\
                      \ \"playing\" %}\n  green\n{% elif state == \"paused\" %}\n\
                      \  amber\n{% elif state == \"idle\" %}\n  light-blue\n{% elif\
                      \ state in [\"standby\", \"on\"] %}\n  blue-grey\n{% else %}\n\
                      \  disabled\n{% endif %}"
                    icon: '{% from "util.jinja" import media_icon %} {{ media_icon(entity)
                      }}'
                    tap_action:
                      action: navigate
                      navigation_path: '#media-living-room'
                  - type: template
                    entity: fan.living_room_ceiling
                    icon: mdi:fan
                    icon_color: "{% if is_state(entity, 'on') %}\n  {% set speed =\
                      \ state_attr(entity, 'percentage') %}\n  {{ {\n    33: \"green\"\
                      ,\n    66: \"yellow\",\n    100: \"orange\"\n  }[speed] }}\n\
                      {% else %}\n  disabled\n{% endif %}"
                    card_mod:
                      style: ".content {\n  {% if is_state(config.entity, 'on') %}\n\
                        \    {% set speed = state_attr(config.entity, 'percentage')\
                        \ %}\n    {% set duration = {\n      33: \"1s\",\n      66:\
                        \ \"0.75s\",\n      100: \"0.66s\"\n    }[speed] %}\n    animation:\
                        \ rotation linear infinite;\n    animation-duration: {{ duration\
                        \ }};\n  {% endif %}\n}\n@keyframes rotation {\n  100% {\n\
                        \    transform: rotate(360deg);\n  }\n}\n"
                    tap_action:
                      action: more-info
                  - type: template
                    entity: light.living_room_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Living Room Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.living_room_lights
                  - type: template
                    entity: binary_sensor.ecobee_occupancy
                    icon: "{%- if is_state(\"binary_sensor.ecobee_motion\", \"on\"\
                      ) -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                      ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                      \ endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.ecobee_motion\",\
                      \ \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Family Room
              - entity: light.family_room_lights
              - temperature: sensor.family_room_temperature
              - icon: mdi:gamepad-circle
              - icon_color: 255, 235, 59
              - path: family
              - chips_top:
                  - type: template
                    entity: camera.family_room
                    icon: mdi:cctv
                    icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Family Room
                          size: fullscreen
                          content:
                            type: custom:decluttering-card
                            template: camera_popup
                            variables:
                              - camera: camera.family_room
                              - stream: familyroom
              - chips:
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.athos_connected
                        state: 'on'
                    chip:
                      type: template
                      entity: binary_sensor.athos_connected
                      icon_color: lime
                      icon: mdi:desktop-tower
                      tap_action:
                        action: none
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.quest_interactive
                        state: 'on'
                    chip:
                      type: template
                      entity: binary_sensor.quest_interactive
                      icon_color: blue
                      icon: fapro:meta
                      tap_action:
                        action: none
                  - type: template
                    entity: select.harmony_family_room_activities
                    icon_color: "{% set state = states(entity) %}\n{% if state ==\
                      \ \"Computer\" %}\n  teal\n{% elif state == \"PS3\" %}\n  cyan\n\
                      {% elif state == \"PS4\" %}\n  blue\n{% elif state == \"XBox\"\
                      \ %}\n  green\n{% else %}\n  disabled\n{% endif %}"
                    icon: "{% set state = states(entity) %}\n{% if state == \"Computer\"\
                      \ %}\n  mdi:desktop-tower\n{% elif state == \"PS3\" %}\n  fapro:ps3\n\
                      {% elif state == \"PS4\" %}\n  fapro:ps4\n{% elif state == \"\
                      XBox\" %}\n  mdi:microsoft-xbox\n{% else %}\n  mdi:gamepad-variant-outline\n\
                      {% endif %}"
                    tap_action:
                      action: none
                  - type: template
                    entity: media_player.universal_family_room
                    icon_color: "{% set state = states(entity) %}\n{% if state ==\
                      \ \"playing\" %}\n  green\n{% elif state == \"paused\" %}\n\
                      \  amber\n{% elif state == \"idle\" %}\n  light-blue\n{% elif\
                      \ state in [\"standby\", \"on\"] %}\n  blue-grey\n{% else %}\n\
                      \  disabled\n{% endif %}"
                    icon: '{% from "util.jinja" import media_icon %} {{ media_icon(entity)
                      }}'
                    tap_action:
                      action: navigate
                      navigation_path: '#media-family-room'
                  - type: template
                    entity: light.family_room_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Family Room Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.family_room_lights
                  - type: template
                    entity: binary_sensor.family_room_occupancy
                    icon: "{%- if is_state(\"binary_sensor.family_room_motion\", \"\
                      on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"\
                      on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                      {%- endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.family_room_motion\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Josh's Office
              - entity: light.joshua_office_lights
              - temperature: sensor.joshua_office_temperature
              - icon: mdi:chair-rolling
              - icon_color: 33, 150, 243
              - path: office
              - chips:
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.erebus_connected
                        state: 'on'
                    chip:
                      type: template
                      entity: binary_sensor.erebus_connected
                      icon_color: blue
                      icon: mdi:desktop-tower
                      tap_action:
                        action: none
                  - type: template
                    entity: light.joshua_office_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Office Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.joshua_office_lights
                  - type: template
                    entity: binary_sensor.apollo_msr_1_office_radar_target
                    icon: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                      , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
                      \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                      {%- endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Kitchen
              - entity: light.kitchen_lights
              - temperature: sensor.kitchen_temperature
              - icon: mdi:fridge-variant
              - icon_color: 0, 188, 212
              - path: kitchen
              - chips:
                  - type: conditional
                    conditions:
                      - entity: light.magicmirror_monitor
                        state: 'on'
                    chip:
                      type: template
                      entity: light.magicmirror_monitor
                      icon_color: blue
                      icon: mdi:apps-box
                      tap_action:
                        action: more-info
                  - type: template
                    entity: light.kitchen_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Kitchen Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.kitchen_lights
                  - type: template
                    entity: binary_sensor.kitchen_occupancy
                    icon: "{%- if is_state(\"binary_sensor.kitchen_motion\", \"on\"\
                      ) -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                      ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                      \ endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.kitchen_motion\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Amy's Office
              - entity: light.amy_office
              - temperature: sensor.amy_office_temperature
              - icon: mdi:skull
              - icon_color: 244, 67, 54
              - path: amy-office
              - chips:
                  - type: template
                    entity: light.amy_office
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    tap_action:
                      action: none
                  - type: template
                    entity: binary_sensor.amy_office_occupancy
                    icon: "{%- if is_state(\"binary_sensor.amy_office_motion\", \"\
                      on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"\
                      on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                      {%- endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.amy_office_motion\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Main Bedroom
              - entity: light.main_bedroom_lights
              - temperature: sensor.main_bedroom_temperature
              - icon: mdi:bed-king
              - icon_color: 103, 58, 183
              - path: main-bed
              - chips:
                  - type: template
                    entity: media_player.universal_main_bedroom
                    icon_color: "{% set state = states(entity) %}\n{% if state ==\
                      \ \"playing\" %}\n  green\n{% elif state == \"paused\" %}\n\
                      \  amber\n{% elif state == \"idle\" %}\n  light-blue\n{% elif\
                      \ state in [\"standby\", \"on\"] %}\n  blue-grey\n{% else %}\n\
                      \  disabled\n{% endif %}"
                    icon: '{% from "util.jinja" import media_icon %} {{ media_icon(entity)
                      }}'
                    tap_action:
                      action: navigate
                      navigation_path: '#media-main-bedroom'
                  - type: template
                    entity: fan.main_bedroom_ceiling
                    icon: mdi:fan
                    icon_color: "{% if is_state(entity, 'on') %}\n  {% set speed =\
                      \ state_attr(entity, 'percentage') %}\n  {{ {\n    33: \"green\"\
                      ,\n    66: \"yellow\",\n    100: \"orange\"\n  }[speed] }}\n\
                      {% else %}\n  disabled\n{% endif %}"
                    card_mod:
                      style: ".content {\n  {% if is_state(config.entity, 'on') %}\n\
                        \    {% set speed = state_attr(config.entity, 'percentage')\
                        \ %}\n    {% set duration = {\n      33: \"1s\",\n      66:\
                        \ \"0.75s\",\n      100: \"0.66s\"\n    }[speed] %}\n    animation:\
                        \ rotation linear infinite;\n    animation-duration: {{ duration\
                        \ }};\n  {% endif %}\n}\n@keyframes rotation {\n  100% {\n\
                        \    transform: rotate(360deg);\n  }\n}\n"
                    tap_action:
                      action: more-info
                  - type: template
                    entity: light.main_bedroom_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Main Bedroom Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.main_bedroom_lights
                  - type: template
                    entity: binary_sensor.main_bedroom_occupancy
                    icon: "{%- if is_state(\"binary_sensor.main_bedroom_motion\",\
                      \ \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
                      \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                      {%- endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.main_bedroom_motion\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Ethan
              - entity: light.ethan_bedroom_lights
              - temperature: sensor.ethan_bedroom_temperature
              - icon: mdi:robot
              - icon_color: 76, 175, 80
              - path: ethan
              - chips_top:
                  - type: template
                    entity: camera.ethan
                    icon: mdi:cctv
                    icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Ethan
                          size: fullscreen
                          content:
                            type: custom:decluttering-card
                            template: camera_popup
                            variables:
                              - camera: camera.ethan
                              - stream: ethan
              - chips:
                  - type: conditional
                    conditions:
                      - entity: switch.nebula_projector_ethan_main_switch
                        state: 'on'
                    chip:
                      type: template
                      entity: switch.nebula_projector_ethan_main_switch
                      icon_color: pink
                      icon: mdi:crystal-ball
                      tap_action:
                        action: more-info
                  - type: template
                    entity: light.ethan_bedroom_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Ethan's Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.ethan_bedroom_lights
                  - type: template
                    entity: binary_sensor.ethan_bedroom_occupancy_occupancy
                    icon: "{%- if is_state(\"binary_sensor.ethan_bedroom_motion\"\
                      , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
                      \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                      {%- endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.ethan_bedroom_motion\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Emma
              - entity: light.emma_bedroom_lights
              - temperature: sensor.emma_bedroom_temperature
              - icon: mdi:unicorn-variant
              - icon_color: 156, 39, 176
              - path: emma
              - chips_top:
                  - type: template
                    entity: camera.emma
                    icon: mdi:cctv
                    icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Emma
                          size: fullscreen
                          content:
                            type: custom:decluttering-card
                            template: camera_popup
                            variables:
                              - camera: camera.emma
                              - stream: emma
              - chips:
                  - type: conditional
                    conditions:
                      - entity: switch.nebula_projector_emma_main_switch
                        state: 'on'
                    chip:
                      type: template
                      entity: switch.nebula_projector_emma_main_switch
                      icon_color: pink
                      icon: mdi:crystal-ball
                      tap_action:
                        action: more-info
                  - type: template
                    entity: light.emma_bedroom_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Emma's Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.emma_bedroom_lights
                  - type: template
                    entity: binary_sensor.emma_bedroom_occupancy
                    icon: "{%- if is_state(\"binary_sensor.emma_bedroom_motion\",\
                      \ \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
                      \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                      {%- endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.emma_bedroom_motion\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Utility
              - entity: ''
              - temperature: sensor.water_main_valve_air_temperature
              - icon: mdi:progress-wrench
              - icon_color: 121, 85, 72
              - path: utility
              - chips:
                  - type: template
                    entity: valve.water_main_valve
                    icon_color: "{% if not has_value(entity) %}\n  disabled\n{% elif(is_state(entity,\
                      \ \"open\")) %}\n  green\n{% else %}\n  red\n{% endif %}"
                    icon: "{% if not has_value(entity) %}\n  mdi:valve\n{% elif(is_state(entity,\
                      \ \"open\")) %}\n  mdi:valve-open\n{% else %}\n  mdi:valve-closed\n\
                      {% endif %}"
                    tap_action:
                      action: none
                    card_mod:
                      style: "@keyframes phase {\n  50% {opacity: 0;}\n}\n{% if is_state(config.entity,\
                        \ \"closed\") %}\n.content {\n  animation: phase 1.5s ease-out\
                        \ infinite;\n}\n{% endif %}\n"
                  - type: template
                    entity: binary_sensor.water_leak_detected
                    icon_color: '{{ iif(is_state(entity, "on"), "red", "light-blue")
                      }}'
                    icon: mdi:{{ iif(is_state(entity, "on"), "water-alert", "water-check")
                      }}
                    tap_action:
                      action: none
                    card_mod:
                      style: "@keyframes phase {\n  50% {opacity: 0;}\n}\n{% if is_state(config.entity,\
                        \ \"on\") %}\n.content {\n  animation: phase 1.5s ease-out\
                        \ infinite;\n}\n{% endif %}\n"
                  - type: template
                    entity: binary_sensor.sprinkler_zones
                    icon_color: "{% set zones = expand(entity)\n  | selectattr(\"\
                      state\", \"==\", \"on\")\n  | map(attribute=\"entity_id\")\n\
                      \  | list\n  | count\n%} {% if is_state(\"binary_sensor.opensprinkler_paused\"\
                      , \"on\") %}\n  yellow\n{% elif zones > 0 %}\n  light-blue\n\
                      {% else %}\n  disabled\n{% endif %}"
                    icon: mdi:sprinkler
                    tap_action:
                      action: none
                    card_mod:
                      style:
                        .: "{%- set zones = expand(config.entity)\n  | selectattr(\"\
                          state\", \"==\", \"on\")\n  | map(attribute=\"entity_id\"\
                          )\n  | list\n-%}\n{%- if zones[0] is defined -%}\nha-card:after\
                          \ {\n  content: \"{{ int(state_attr(zones[0], 'index'))\
                          \ + 1 }}\";\n  position: absolute;\n  color: var(--light-blue-color);\n\
                          \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n \
                          \ font-size: 12px;\n}\n{%- endif -%}\n"
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Outside
              - entity: light.outside_lights
              - temperature: sensor.owm_daily_temperature
              - icon: mdi:spa
              - icon_color: 139, 195, 74
              - path: outside
              - chips_top:
                  - type: template
                    entity: camera.doorbell
                    icon: mdi:doorbell-video
                    icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Doorbell
                          size: fullscreen
                          content:
                            type: custom:decluttering-card
                            template: camera_popup
                            variables:
                              - camera: camera.doorbell
                              - stream: doorbell
              - chips:
                  - type: template
                    entity: light.outside_lights
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    card_mod:
                      style:
                        .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                          \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                          \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                          \  color: var(--amber-color);\n  font-weight: bolder;\n\
                          \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{%\
                          \ endif %}\n"
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Outside Lights
                          content:
                            type: custom:decluttering-card
                            template: light_group_popup
                            variables:
                              - entity: light.outside_lights
                  - type: template
                    entity: binary_sensor.doorbell_all_occupancy
                    icon: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\"\
                      , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
                      \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                      {%- endif -%}"
                    icon_color: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\"\
                      , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                      \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                    tap_action:
                      action: none
                    hold_action:
                      action: none
          - type: custom:decluttering-card
            template: room_card
            variables:
              - primary: Garage
              - entity: light.garage
              - temperature: sensor.garage_multisensor_air_temperature
              - icon: '{% if is_state(''cover.garage_door'', ''open'') %}mdi:garage-open-variant{%
                  elif states(''cover.garage_door'') in [''opening'', ''closing'']
                  %}mdi:garage-alert-variant{% else %}mdi:garage-variant{% endif %}'
              - icon_color: 96, 125, 139
              - path: garage
              - chips_top:
                  - type: template
                    entity: camera.garage
                    icon: mdi:cctv
                    icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Garage
                          size: fullscreen
                          content:
                            type: custom:decluttering-card
                            template: camera_popup
                            variables:
                              - camera: camera.garage
                              - stream: garage
              - chips:
                  - type: conditional
                    conditions:
                      - entity: cover.garage_door
                        state_not: closed
                      - entity: cover.garage_door
                        state_not: unavailable
                      - entity: cover.garage_door
                        state_not: unknown
                    chip:
                      type: template
                      entity: cover.garage_door
                      icon: "{%- if is_state(entity, \"open\") -%}\n  mdi:garage-open-variant\n\
                        {%- elif states(entity) in [\"opening\", \"closing\"] -%}\n\
                        \  mdi:garage-alert-variant\n{%- endif -%}"
                      icon_color: "{% if is_state(entity, \"open\") %}\n  red\n{%\
                        \ elif states(entity) in [\"opening\", \"closing\"]  %}\n\
                        \  orange\n{% endif %}"
                      tap_action:
                        action: none
                      card_mod:
                        style: "@keyframes phase {\n  50% {opacity: 0;}\n}\n.content\
                          \ {\n  animation: phase 1.5s ease-out infinite;\n}"
                  - type: template
                    entity: light.garage
                    icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                      }}'
                    tap_action:
                      action: none
                  - type: template
                    entity: binary_sensor.garage_multisensor_motion_detection
                    icon: '{{ iif(is_state(entity, "on"), "mdi:motion-sensor", "mdi:motion-sensor-off")
                      }}'
                    icon_color: '{{ iif(is_state(entity, "on"), "orange", "disabled")
                      }}'
                    tap_action:
                      action: more-info
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "{% set state = states(\"device_tracker.ascent\") %}\n{% if state\
                \ != \"home\" %}\nha-card {\n  {% if state == \"not_home\" %}\n  \
                \  background: rgba(244, 67, 54, 0.2)\n  {% elif state in [\"unknown\"\
                , \"unavailable\"] %}\n    background: rgba(189, 189, 189, 0.2)\n\
                \  {% else %}\n    background: rgba(33, 150, 243, 0.2)\n  {% endif\
                \ %};\n}\n{% endif %}\n"
            cards:
              - type: custom:mushroom-template-card
                entity: device_tracker.ascent
                primary: Ascent
                secondary: '{{ states("sensor.ascent_odometer", with_unit=true) }}'
                picture: '{{ state_attr(entity, "entity_picture") }}'
                fill_container: true
                tap_action:
                  action: navigate
                  navigation_path: subaru
                badge_icon: "{% if is_state(\"binary_sensor.ascent_trouble\", \"on\"\
                  ) %}\n  mdi:alert\n{% endif %}"
                badge_color: "{% if is_state(\"binary_sensor.ascent_trouble\", \"\
                  on\") %}\n  red\n{% endif %}"
                card_mod:
                  style:
                    .: "{% set state = states(config.entity) %}\n:host {\n  transition:\
                      \ all 0s;\n  --mush-card-primary-font-size: 16px;\n  --mush-card-secondary-font-size:\
                      \ 13px;\n  --mush-icon-size: 4.84em;\n  {% if not is_state(config.entity,\
                      \ \"home\") %}\n  --ha-card-background:\n    {% if is_state(config.entity,\
                      \ \"not_home\") %}\n      rgba(244, 67, 54, 0.05)\n    {% elif\
                      \ state in [\"unknown\", \"unavailable\"] %}\n      rgba(189,\
                      \ 189, 189, 0.05)\n    {% else %}\n      rgba(33, 150, 243,\
                      \ 0.05)\n    {% endif %};\n  {% endif %}\n}\nha-card {\n  transition:\
                      \ all 0s;\n  padding-bottom: 0 !important;\n}\nmushroom-state-info\
                      \ {\n  z-index: 1;\n}\nmushroom-shape-avatar {\n  position:\
                      \ absolute;\n  top: -30px;\n  left: -10px;\n}\nmushroom-state-info\
                      \ {\n  padding-left: 50px;\n  z-index: 1;\n}\nmushroom-badge-icon\
                      \ {\n  margin-right: -55px;\n  margin-top: -20px;\n}\n"
                    mushroom-shape-avatar$: "{% set timer = \"timer.subaru_remote_start\"\
                      \ %}\n{% if state_attr(timer, \"finishes_at\") %}\n.picture\
                      \ {\n  {% set remaining = (as_datetime(state_attr(timer, \"\
                      finishes_at\")) - now()).total_seconds() | int %}\n  {% set\
                      \ duration =\n    (state_attr(timer, \"duration\").split(\"\
                      :\")[0] | int * 60 * 60)\n    + (state_attr(timer, \"duration\"\
                      ).split(\":\")[1] | int * 60)\n    + (state_attr(timer, \"duration\"\
                      ).split(\":\")[2] | int)\n  %}\n  background:\n    radial-gradient(var(--card-background-color)\
                      \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--accent-color)\
                      \ {{ (remaining / duration * 100) | round() }}% 0%, var(--card-background-color)\
                      \ 0% 100%);\n}\n{% endif %}\n"
              - type: custom:mushroom-chips-card
                alignment: end
                card_mod:
                  style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background:\
                    \ rgba(var(--rgb-disabled), 0.1);\n  --chip-border-width: 0;\n\
                    \  --chip-spacing: 1px;\n  margin-right: calc(var(--ha-card-border-radius,\
                    \ 12px) / 2);\n}\n"
                chips:
                  - type: template
                    entity: sensor.ascent_range
                    content: "{% if has_value(entity) %}\n  {{ states(entity) | round(0)\
                      \ }}mi\n{% endif %}"
                    icon: mdi:gas-station
                    icon_color: "{% if has_value(entity) %}\n  {% set range = int(states(entity),\
                      \ 0) %}\n  {% if range > 200 %}\n    green\n  {% elif range\
                      \ > 70 %}\n    light-green\n  {% elif range > 50 %}\n    amber\n\
                      \  {% elif range > 30 %}\n    orange\n  {% else %}\n    red\n\
                      \  {% endif %}\n{% endif %}"
                    tap_action:
                      action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
                  - type: template
                    entity: sensor.ascent_avg_fuel_consumption
                    icon: mdi:leaf
                    icon_color: green
                    content: "{% if has_value(entity) %}\n  {{ states(entity) | round(1)\
                      \ }}mpg\n{% endif %}"
                    tap_action:
                      action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
      - type: vertical-stack
        cards:
          - type: conditional
            conditions:
              - entity: binary_sensor.is_xmas
                state: 'on'
            card:
              type: vertical-stack
              cards:
                - type: custom:mushroom-title-card
                  title: XMas
                - type: grid
                  columns: 3
                  square: false
                  cards:
                    - type: tile
                      entity: light.xmas_tree
                      name: Tree
                      icon: mdi:pine-tree
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: light.wled_mario_star_main
                      name: Star
                      icon: mdi:star-face
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: light.eve
                      name: Outside
                      icon: mdi:string-lights
                      vertical: true
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#all-doors'
            button_type: state
            entity: binary_sensor.all_doors
            show_icon: false
            show_state: false
            sub_button:
              - entity: binary_sensor.all_doors
                show_state: true
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:auto-entities
                show_empty: false
                card:
                  type: custom:layout-card
                  cards: []
                  layout_type: masonry
                sort:
                  method: friendly_name
                filter:
                  include:
                    - group: binary_sensor.all_doors
                      options:
                        type: custom:mushroom-entity-card
                        layout: horizontal
                        secondary_info: last-changed
                        tap_action:
                          action: none
                        hold_action:
                          action: none
                        card_mod:
                          style: "ha-card {\n  transition: all 0s;\n  padding: 4px\
                            \ 12px !important;\n  border-width: 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#meater'
            button_type: name
            name: Meater
            icon: mdi:food-drumstick
            sub_button:
              - entity: sensor.meater_probe_cook_state
                show_icon: false
                show_state: true
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.meater_probe_cook_name
                name: Cooking
                primary_info: state
                secondary_info: name
                icon: mdi:food-steak
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:mushroom-entity-card
                    entity: sensor.meater_probe_cook_time_elapsed
                    name: Elapsed Time
                    primary_info: state
                    secondary_info: name
                  - type: custom:mushroom-entity-card
                    entity: sensor.meater_probe_cook_time_remaining
                    name: Remaining Time
                    primary_info: state
                    secondary_info: name
              - type: custom:mushroom-title-card
                subtitle: Temperature
              - type: custom:apexcharts-card
                card_mod:
                  style: "ha-card {\n  padding: 0px;\n  border: none;\n  box-shadow:\
                    \ none;\n  margin-bottom: -15px;\n}\n.apexcharts-tooltip-series-group\
                    \ {\n  padding-top: 0px !important;\n  padding-bottom: 0px !important;\n\
                    \  margin-top: 0px !important;\n  margin-bottom: 0px !important;\n\
                    \  display: none;\n  text-align: left;\n  justify-content: left;\n\
                    \  align-items: center;\n}\n"
                apex_config:
                  chart:
                    foreColor: '#7B7B7B'
                    toolbar:
                      show: false
                  grid:
                    borderColor: '#7B7B7B'
                  xaxis:
                    tooltip:
                      enabled: false
                header:
                  show: true
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                all_series_config:
                  extend_to: now
                  float_precision: 2
                  curve: stepline
                brush:
                  selection_span: 1h
                  apex_config:
                    chart:
                      foreColor: '#7B7B7B'
                      toolbar:
                        show: false
                    grid:
                      borderColor: '#7B7B7B'
                    xaxis:
                      tooltip:
                        enabled: false
                series:
                  - entity: sensor.meater_probe_internal
                    name: Internal
                    stroke_width: 4
                    color: rgb(33,150,243)
                    show:
                      in_brush: true
                  - entity: sensor.meater_probe_ambient
                    name: Ambient
                    stroke_width: 4
                    color: rgb(139,195,74)
                  - entity: sensor.meater_probe_cook_target_temp
                    name: Target
                    type: area
                    opacity: 0.2
                    stroke_width: 1
                    color: rgb(233,30,99)
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#offline-devices'
            entity: sensor.offline_devices
            show_icon: false
            show_state: false
            button_type: state
            sub_button:
              - entity: sensor.offline_devices
                show_state: true
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:auto-entities
                filter:
                  include:
                    - group: sensor.offline_devices
                      options:
                        type: custom:mushroom-template-card
                        primary: '{{ state_attr(entity, "friendly_name") | regex_replace(find="
                          last seen", replace="", ignorecase = true) }}'
                        secondary: "{%- if has_value(entity) -%}\n  {{ as_datetime(states(entity)).strftime(\"\
                          %Y-%m-%d %-I:%M %p\") }}\n{%- else -%}\n  Unknown\n{%- endif\
                          \ -%}"
                        icon: mdi:network-off
                        icon_color: yellow
                        layout: horizontal
                        tap_action:
                          action: more-info
                        card_mod:
                          style: "ha-card {\n  padding: 4px 12px !important;\n}\n"
                  exclude: []
                card:
                  type: custom:layout-card
                  cards: []
                  layout_type: masonry
                sort:
                  method: friendly_name
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#low-battery'
            button_type: state
            entity: sensor.low_battery_devices
            show_icon: false
            show_state: false
            sub_button:
              - entity: sensor.low_battery_devices
                show_state: true
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:auto-entities
                filter:
                  include:
                    - group: sensor.low_battery_devices
                      options:
                        type: custom:mushroom-template-card
                        primary: '{{ states(entity) }}%'
                        secondary: '{{ state_attr(entity, "friendly_name") | title
                          }}'
                        icon: '{% from "util.jinja" import battery_icon %} {{ battery_icon(entity)
                          }}

                          '
                        icon_color: '{% from "util.jinja" import battery_color %}
                          {{ battery_color(entity) }}'
                        badge_color: red
                        badge_icon: "{% if int(states(entity), 0) <= 15 %}\n  mdi:exclamation-thick\n\
                          {% endif %}"
                        layout: horizontal
                        tap_action:
                          action: more-info
                        card_mod:
                          style: "ha-card {\n  padding: 4px 12px !important;\n}\n"
                  exclude: []
                card:
                  type: custom:layout-card
                  cards: []
                  layout_type: masonry
                sort:
                  method: friendly_name
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#weather'
            button_type: state
            entity: sensor.owm_daily_temperature
            name: Weather
            show_attribute: false
            attribute: temperature
            show_icon: false
            show_state: false
            sub_button:
              - entity: sensor.owm_daily_condition
                show_state: true
                show_icon: false
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
            show_last_changed: false
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - card_config_version: 8
                daily_forecast_days: 6
                entity_apparent_temp: weather.owm_daily
                entity_extended: sensor.forecast
                entity_forecast_icon: weather.owm_daily
                entity_forecast_icon_1: weather.owm_daily
                entity_forecast_max: weather.owm_daily
                entity_forecast_max_1: weather.owm_daily
                entity_forecast_min: weather.owm_daily
                entity_forecast_min_1: weather.owm_daily
                entity_humidity: weather.owm_daily
                entity_pop: weather.owm_daily
                entity_pop_1: weather.owm_daily
                entity_pos: weather.owm_daily
                entity_pos_1: weather.owm_daily
                entity_pressure: weather.owm_daily
                entity_summary: weather.owm_daily
                entity_summary_1: weather.owm_daily
                entity_sun: sun.sun
                entity_temperature: weather.owm_daily
                entity_uv_alert_summary: sensor.owm_daily_uv_index
                entity_visibility: sensor.owm_daily_visibility
                entity_wind_bearing: weather.owm_daily
                entity_wind_speed: weather.owm_daily
                extended_name_attr: precipitation_unit
                extended_use_attr: false
                forecast_type: daily
                option_color_fire_danger: false
                option_show_overview_separator: false
                option_static_icons: false
                option_tooltips: false
                section_order:
                  - overview
                  - extended
                  - slots
                  - daily_forecast
                show_section_daily_forecast: true
                show_section_slots: true
                slot_l1: forecast_max
                slot_l2: forecast_min
                slot_l3: wind
                slot_l4: pressure
                slot_l5: sun_next
                slot_l6: remove
                slot_l7: remove
                slot_l8: remove
                slot_r1: popforecast
                slot_r2: humidity
                slot_r3: uv_summary
                slot_r4: visibility
                slot_r5: sun_following
                slot_r6: remove
                slot_r7: remove
                slot_r8: remove
                type: custom:platinum-weather-card
                weather_entity: weather.owm_daily
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 66px auto
                  margin: -4px -4px -12px -4px;
                cards:
                  - type: custom:mushroom-entity-card
                    entity: weather.owm_daily
                    icon_color: blue
                    card_mod:
                      style: "ha-card {\n  background: none;\n  --ha-card-box-shadow:\
                        \ 0px;\n}\n"
                  - type: custom:hourly-weather
                    entity: weather.owm_daily
                    icons: true
                    label_spacing: '2'
                    num_segments: '12'
                    name: ' '
                    card_mod:
                      style:
                        .: "ha-card {\n  background: none;\n  --ha-card-box-shadow:\
                          \ 0px;\n  margin: -8px -4px -4px -16px;\n}\n"
                        weather-bar$: ".main {\n  --mush-rgb-red: 244, 67, 54;\n \
                          \ --mush-rgb-pink: 233, 30, 99;\n  --mush-rgb-purple: 156,\
                          \ 39, 176;\n  --mush-rgb-deep-purple: 103, 58, 183;\n  --mush-rgb-indigo:\
                          \ 63, 81, 181;\n  --mush-rgb-blue: 33, 150, 243;\n  --mush-rgb-light-blue:\
                          \ 3, 169, 244;\n  --mush-rgb-cyan: 0, 188, 212;\n  --mush-rgb-teal:\
                          \ 0, 150, 136;\n  --mush-rgb-green: 76, 175, 80;\n  --mush-rgb-light-green:\
                          \ 139, 195, 74;\n  --mush-rgb-lime: 205, 220, 57;\n  --mush-rgb-yellow:\
                          \ 255, 235, 59;\n  --mush-rgb-amber: 255, 193, 7;\n  --mush-rgb-orange:\
                          \ 255, 152, 0;\n  --mush-rgb-deep-orange: 255, 87, 34;\n\
                          \  --mush-rgb-brown: 121, 85, 72;\n  --mush-rgb-grey: 158,\
                          \ 158, 158;\n  --mush-rgb-blue-grey: 96, 125, 139;\n  --mush-rgb-black:\
                          \ 0, 0, 0;\n  --mush-rgb-white: 255, 255, 255;\n\n  --color-clear-night:\
                          \ rgba(var(--mush-rgb-black), 0.2) !important;\n  --color-cloudy:\
                          \ rgba(var(--mush-rgb-grey), 0.2) !important;\n  --color-fog:\
                          \ var(--color-cloudy);\n  --color-hail: rgba(var(--mush-rgb-indigo),\
                          \ 0.2) !important;\n  --color-lightning: var(--color-rainy);\n\
                          \  --color-lightning-rainy: var(--color-rainy);\n  --color-partlycloudy:\
                          \ rgba(var(--mush-rgb-blue), 0.2) !important;\n  --color-pouring:\
                          \ var(--color-rainy);\n  --color-rainy: rgba(var(--mush-rgb-indigo),\
                          \ 0.2) !important;\n  --color-snowy: rgba(var(--mush-rgb-white),\
                          \ 0.2) !important;\n  --color-snowy-rainy: var(--color-partlycloudy);\n\
                          \  --color-sunny: rgba(var(--mush-rgb-yellow), 0.2) !important;\n\
                          \  --color-windy: var(--color-sunny);\n  --color-windy-variant:\
                          \ var(--color-sunny);\n  --color-exceptional: rgba(var(--mush-rgb-amber),\
                          \ 0.2) !important;\n}\n.bar > div {\n  height: 42px !important;\n\
                          }\n.bar > div:first-child {\n  border-top-left-radius: var(--ha-card-border-radius)\
                          \ !important;\n  border-bottom-left-radius: var(--ha-card-border-radius)\
                          \ !important;\n}\n.bar > div:last-child {\n  border-top-right-radius:\
                          \ var(--ha-card-border-radius) !important;\n  border-bottom-right-radius:\
                          \ var(--ha-card-border-radius) !important;\n}\n.bar > div\
                          \ > span {\n  text-shadow: none !important;\n  color: rgb(var(--primary-text-color));\n\
                          \  font-size: 14px;\n  font-weight: bold;\n}\n.axes > div\
                          \ > .bar-block-bottom > .hour {\n  font-size: 12px;\n  font-weight:\
                          \ bolder;\n}\n.axes > div > .bar-block-bottom > .temperature\
                          \ {\n  font-size: 12px;\n  font-weight: bolder;\n}\n.axes\
                          \ {\n  margin-top: 10px !important;\n}\n"
              - type: iframe
                url: https://embed.windy.com/embed2.html?lat=42.918&lon=-112.465&zoom=7&level=surface&overlay=wind&menu=&message=true&marker=&calendar=&pressure=&type=map&location=coordinates&detail=&detailLat=43.490&detailLon=-112.040&metricWind=mph&metricTemp=%C2%B0F&radarRange=-1
              - type: custom:horizon-card
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#air-quality'
            button_type: state
            entity: sensor.airgradient_kitchen_pm_2_5_aqi
            name: Air Quality
            show_icon: false
            show_state: false
            sub_button:
              - entity: sensor.airgradient_kitchen_pm_2_5_aqi
                show_state: true
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    title: Inside
                  - type: custom:bar-card
                    card_mod:
                      style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                        \  text-shadow: 1px 1px var(--primary-background-color);\n\
                        }\n"
                    animation:
                      state: 'on'
                    positions:
                      indicator: inside
                    entities:
                      - entity: sensor.airgradient_kitchen_pm_2_5_aqi
                        name: AQI
                        min: 0
                        max: 400
                        severity:
                          - color: var(--green-color)
                            from: '0'
                            to: '50'
                          - color: var(--yellow-color)
                            from: '50'
                            to: '100'
                          - color: var(--orange-color)
                            from: '100'
                            to: '150'
                          - color: var(--red-color)
                            from: '150'
                            to: '200'
                          - color: var(--purple-color)
                            from: '200'
                            to: '300'
                          - color: var(--pink-color)
                            from: '300'
                            to: '400'
                      - entity: sensor.airgradient_kitchen_pm_2_5
                        name: PM 2.5
                        min: 0
                        max: 100
                        severity:
                          - color: var(--green-color)
                            from: '0'
                            to: '12'
                          - color: var(--yellow-color)
                            from: '12'
                            to: '35'
                          - color: var(--orange-color)
                            from: '35'
                            to: '50'
                          - color: var(--red-color)
                            from: '50'
                            to: '100'
                      - entity: sensor.airgradient_kitchen_pm_10_0
                        name: PM 10
                        min: 0
                        max: 100
                        severity:
                          - color: var(--green-color)
                            from: '0'
                            to: '12'
                          - color: var(--yellow-color)
                            from: '12'
                            to: '35'
                          - color: var(--orange-color)
                            from: '35'
                            to: '50'
                          - color: var(--red-color)
                            from: '50'
                            to: '100'
                      - entity: sensor.airgradient_kitchen_voc_index
                        name: VOC
                        min: 0
                        max: 500
                        severity:
                          - color: var(--green-color)
                            from: '0'
                            to: '150'
                          - color: var(--yellow-color)
                            from: '150'
                            to: '250'
                          - color: var(--orange-color)
                            from: '250'
                            to: '400'
                          - color: var(--red-color)
                            from: '400'
                            to: '500'
                      - entity: sensor.airgradient_kitchen_nox_index
                        name: NOx
                        min: 0
                        max: 500
                        severity:
                          - color: var(--green-color)
                            from: '0'
                            to: '30'
                          - color: var(--yellow-color)
                            from: '30'
                            to: '150'
                          - color: var(--orange-color)
                            from: '150'
                            to: '300'
                          - color: var(--red-color)
                            from: '300'
                            to: '500'
              - type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    title: Outside
                  - type: custom:mushroom-template-card
                    entity: sensor.airnow_air_quality_index
                    primary: 'AQI: {{ state_attr(entity, "description") }}'
                    multiline_secondary: true
                    fill_container: false
                    tap_action:
                      action: none
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
                  - type: custom:bar-card
                    card_mod:
                      style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                        \  text-shadow: 1px 1px var(--primary-background-color);\n\
                        }\n"
                    decimal: 1
                    animation:
                      state: 'on'
                    positions:
                      indicator: inside
                    entities:
                      - entity: sensor.airnow_air_quality_index
                        name: AQI
                        min: 0
                        max: 400
                        severity:
                          - color: var(--green-color)
                            from: '0'
                            to: '50'
                          - color: var(--yellow-color)
                            from: '50'
                            to: '100'
                          - color: var(--orange-color)
                            from: '100'
                            to: '150'
                          - color: var(--red-color)
                            from: '150'
                            to: '200'
                          - color: var(--purple-color)
                            from: '200'
                            to: '300'
                          - color: var(--pink-color)
                            from: '300'
                            to: '400'
                      - entity: sensor.airnow_pm2_5
                        name: PM 2.5
                        min: 0
                        max: 100
                        severity:
                          - color: var(--green-color)
                            from: '0'
                            to: '12'
                          - color: var(--yellow-color)
                            from: '12'
                            to: '35'
                          - color: var(--orange-color)
                            from: '35'
                            to: '50'
                          - color: var(--red-color)
                            from: '50'
                            to: '100'
              - type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    title: Environment
                  - type: custom:apexcharts-card
                    apex_config:
                      chart:
                        foreColor: '#7B7B7B'
                        toolbar:
                          show: false
                      grid:
                        borderColor: '#7B7B7B'
                      xaxis:
                        tooltip:
                          enabled: false
                    experimental:
                      color_threshold: true
                    header:
                      show: true
                      show_states: true
                      colorize_states: true
                    all_series_config:
                      extend_to: now
                      stroke_width: 2
                      type: line
                      group_by:
                        func: max
                        duration: 10min
                      color_threshold:
                        - value: 0
                          color: '#4caf50'
                        - value: 700
                          color: '#ffeb3b'
                        - value: 1333
                          color: '#ff9800'
                        - value: 1666
                          color: '#f44336'
                    span:
                      end: minute
                    graph_span: 1d
                    yaxis:
                      - decimals: 0
                        min: ~400
                        max: ~2100
                        apex_config:
                          title:
                            text: ppm
                    series:
                      - entity: sensor.apollo_msr_1_office_co2
                        name: Office CO2
                      - entity: sensor.airgradient_kitchen_co2
                        name: Kitchen CO2
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#allergy'
            button_type: state
            entity: sensor.allergy_index_today
            name: Allergy
            show_icon: false
            show_state: false
            sub_button:
              - entity: sensor.allergy_index_today
                show_state: true
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:mushroom-title-card
                title: Allergens
              - type: custom:mushroom-template-card
                entity: sensor.allergy_index_today
                secondary: "{%- set ns = namespace(allergens=[]) -%} {%- for id in\
                  \ range(1, 4) -%}\n  {%- set attr = \"allergen_name_\" ~ id -%}\n\
                  \  {%- if not state_attr(entity, attr) in [\"unknown\", \"unavailable\"\
                  , None] -%}\n    {%- set ns.allergens = ns.allergens + [ state_attr(entity,\
                  \ attr) ] -%}\n  {%- endif -%}\n{%- endfor -%} {{ ns.allergens |\
                  \ join(\", \") }}\n{{ state_attr(\"sensor.allergy_index_forecasted_average\"\
                  , \"outlook\") | default(\"\", true) }}"
                multiline_secondary: true
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                card_mod:
                  style: "ha-card {\n  /* Make card non-responsive to select and pointer\
                    \ */\n  user-select: none;\n  pointer-events: none;\n}\n"
              - type: custom:mushroom-title-card
                title: Forecast
                subtitle: Allergy
              - type: custom:bar-card
                card_mod:
                  style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                    \  text-shadow: 1px 1px var(--primary-background-color);\n}\n"
                entities:
                  - entity: sensor.allergy_index_today
                  - entity: sensor.allergy_index_tomorrow
                  - entity: sensor.allergy_index_forecasted_average
                min: 0
                max: 12
                decimal: 1
                animation:
                  state: 'on'
                positions:
                  indicator: inside
                severity:
                  - color: var(--green-color)
                    from: '0'
                    to: '2.5'
                  - color: var(--light-green-color)
                    from: '2.5'
                    to: '4.9'
                  - color: var(--amber-color)
                    from: '4.9'
                    to: '7.3'
                  - color: var(--orange-color)
                    from: '7.3'
                    to: '9.7'
                  - color: var(--red-color)
                    from: '9.7'
                    to: '12'
              - type: custom:mushroom-title-card
                subtitle: Asthma
              - type: custom:bar-card
                card_mod:
                  style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                    \  text-shadow: 1px 1px var(--primary-background-color);\n}\n"
                entities:
                  - entity: sensor.asthma_index_today
                  - entity: sensor.asthma_index_tomorrow
                  - entity: sensor.asthma_index_forecasted_average
                min: 0
                max: 12
                decimal: 1
                animation:
                  state: 'on'
                positions:
                  indicator: inside
                severity:
                  - color: var(--green-color)
                    from: '0'
                    to: '2.5'
                  - color: var(--light-green-color)
                    from: '2.5'
                    to: '4.9'
                  - color: var(--amber-color)
                    from: '4.9'
                    to: '7.3'
                  - color: var(--orange-color)
                    from: '7.3'
                    to: '9.7'
                  - color: var(--red-color)
                    from: '9.7'
                    to: '12'
              - type: custom:mushroom-title-card
                subtitle: Cold
              - type: custom:bar-card
                card_mod:
                  style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                    \  text-shadow: 1px 1px var(--primary-background-color);\n}\n"
                entities:
                  - entity: sensor.cold_flu_index_today
                  - entity: sensor.cold_flu_forecasted_average
                min: 0
                max: 12
                decimal: 1
                animation:
                  state: 'on'
                positions:
                  indicator: inside
                severity:
                  - color: var(--green-color)
                    from: '0'
                    to: '2.5'
                  - color: var(--light-green-color)
                    from: '2.5'
                    to: '4.9'
                  - color: var(--amber-color)
                    from: '4.9'
                    to: '7.3'
                  - color: var(--orange-color)
                    from: '7.3'
                    to: '9.7'
                  - color: var(--red-color)
                    from: '9.7'
                    to: '12'
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#person-joshua'
            button_type: name
            name: Joshua
            icon: mdi:account
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }\n"
          - type: custom:decluttering-card
            template: person_popup
            variables:
              - person: joshua
              - name: Joshua
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#person-spotify-joshua'
            button_type: name
            name: Spotify (Joshua)
            icon: mdi:spotify
            show_state: false
            width_desktop: 600px
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }\n"
          - type: custom:decluttering-card
            template: media_card
            variables:
              - entity: media_player.spotify_joshua
              - buttons: []
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#person-amy'
            button_type: name
            name: Amy
            icon: mdi:account
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }\n"
          - type: custom:decluttering-card
            template: person_popup
            variables:
              - person: amy
              - name: Amy
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#person-spotify-amy'
            button_type: name
            name: Spotify (Amy)
            icon: mdi:spotify
            show_state: false
            width_desktop: 600px
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }\n"
          - type: custom:decluttering-card
            template: media_card
            variables:
              - entity: media_player.spotify_amy
              - buttons: []
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#media-living-room'
            button_type: state
            entity: media_player.universal_living_room
            name: Living Room
            icon: mdi:motion-play-outline
            show_state: false
            margin_top_mobile: -56px
            width_desktop: 600px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:decluttering-card
                template: media_card
                variables:
                  - expanded: true
                  - entity: media_player.universal_living_room
                  - sound_buttons:
                      - id: Straight
                        type: sound_mode
                        name: Direct
                        icon: mdi:surround-sound-5-1
                      - id: Surround
                        type: sound_mode
                        name: Surround
                        icon: mdi:surround-sound-2-1
                      - id: MCh Stereo
                        type: sound_mode
                        name: Multi-Channel
                        icon: mdi:surround-sound
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#media-family-room'
            button_type: state
            entity: media_player.universal_family_room
            name: Family Room
            icon: mdi:motion-play-outline
            show_state: false
            margin_top_mobile: -56px
            width_desktop: 600px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:decluttering-card
                template: media_card
                variables:
                  - expanded: true
                  - entity: media_player.universal_family_room
                  - sound_buttons:
                      - id: Direct
                        type: sound_mode
                        name: Direct
                        icon: mdi:surround-sound-5-1
                      - id: Dolby Digital
                        type: sound_mode
                        name: Surround
                        icon: mdi:surround-sound-2-1
                      - id: All Zone Stereo
                        type: sound_mode
                        name: Multi-Channel
                        icon: mdi:surround-sound
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#media-main-bedroom'
            button_type: state
            entity: media_player.universal_main_bedroom
            name: Main Bedroom
            icon: mdi:motion-play-outline
            show_state: false
            width_desktop: 600px
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
          - type: custom:vertical-stack-in-card
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
            cards:
              - type: custom:decluttering-card
                template: media_card
                variables:
                  - expanded: true
                  - entity: media_player.universal_main_bedroom
                  - buttons:
                      - id: Plex
                        type: source
                        name: Plex
                        icon: mdi:plex
                      - id: Prime Video
                        type: source
                        name: Prime Video
                        icon: fapro:prime-video
                      - id: SmartTube
                        type: source
                        name: SmartTube
                        icon: fapro:smarttube
                      - id: Spotify
                        type: source
                        name: Spotify
                        icon: mdi:spotify
                      - id: Twitch
                        type: source
                        name: Twitch
                        icon: mdi:twitch
                      - id: Crunchyroll
                        type: source
                        name: Crunchyroll
                        icon: fapro:crunchyroll
                      - id: Home
                        type: source
                        name: Home
                        icon: mdi:apps
  - title: Living
    theme: Backend-selected
    path: living
    type: custom:masonry-layout
    layout:
      max_cols: 2
    icon: mdi:sofa-single
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Living Room
          - icon: mdi:sofa-single
          - icon_color: orange
          - chips:
              - type: template
                entity: binary_sensor.ecobee_occupancy
                icon: "{%- if is_state(\"binary_sensor.ecobee_motion\", \"on\") -%}\n\
                  \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
                  {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.ecobee_motion\", \"on\"\
                  ) -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n\
                  {%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.ecobee_current_temperature
              - type: entity
                entity: sensor.ecobee_current_humidity
              - type: template
                icon: mdi:remote-tv
                icon_color: orange
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Living Room Remote
                      style: '--popup-min-width: 380px;

                        --popup-max-width: 380px;

                        '
                      content:
                        type: custom:decluttering-card
                        template: androidtv_remote
                        variables:
                          - remote: remote.androidtv_living_room
                          - media: media_player.universal_living_room
              - type: template
                icon: mdi:dots-horizontal-circle
                icon_color: blue
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Send Message
                      right_button: Send
                      right_button_action:
                        service: script.media_play
                        data:
                          media_player: media_player.cast_living_room_speaker
                          volume: 80
                      content:
                        - name: message
                          label: Message
                          selector:
                            select:
                              custom_value: true
                              options:
                                - label: Snack Time
                                  value: It's time for snacks!
                                - label: Lunch Time
                                  value: Hey, come get some lunch!
                                - label: Dinner Time
                                  value: It's time for dinner.
                                - label: Breakfast Time
                                  value: It's time for breakfast.
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: template
                    entity: light.living_room_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.living_room
                name: Main
                features:
                  - type: light-brightness
              - features:
                  - type: light-brightness
                type: tile
                entity: light.living_room_fan_light
                name: Fan Light
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.living_room_lamp
                name: Lamp
                features:
                  - type: light-brightness
              - type: tile
                entity: light.living_room_floor_lamp
                name: Floor Lamp
                features:
                  - type: light-brightness
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.front_entry
                name: Entry
                vertical: true
              - type: tile
                entity: light.hallway
                name: Hallway
                vertical: true
          - type: tile
            entity: fan.living_room_ceiling
            name: Fan
            features:
              - type: fan-speed
            card_mod:
              style:
                .: "ha-tile-icon {\n  --tile-color:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n    {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int(0) %}\n    {% if perc == 33 %} var(--green-color)\n    {%\
                  \ elif perc == 66 %} var(--yellow-color)\n    {% else %} var(--orange-color)\n\
                  \    {% endif %}\n    {% else %} var(--state-inactive-color)\n \
                  \   {% endif %};\n}\nha-state-icon {\n  animation:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n      {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int %}\n      {% set base = 'rotation infinite linear' %}\n\
                  \      {% if perc == 33 %} 1s {{base}}\n      {% elif perc == 66\
                  \ %} 0.75s {{base}}\n      {% else  %} 0.66s {{base}}\n      {%\
                  \ endif %}\n    {% else %} none\n    {% endif %};\n}\n@keyframes\
                  \ rotation {\n  0% {transform: rotate(0deg);}\n  100% {transform:\
                  \ rotate(360deg);}\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Media
          - type: conditional
            conditions:
              - entity: remote.androidtv_living_room
                state_not: unavailable
              - entity: remote.androidtv_living_room
                state_not: unknown
            card:
              type: grid
              columns: 2
              square: false
              cards:
                - type: custom:mushroom-template-card
                  primary: Shield
                  icon: mdi:motion-play-outline
                  entity: remote.androidtv_living_room
                  icon_color: "{%- if has_value(entity) and is_state(entity, \"on\"\
                    ) -%}\n  green\n{%- else -%}\n  grey\n{%- endif -%}"
                  tap_action:
                    action: call-service
                    service: remote.turn_on
                    target:
                      entity_id: remote.androidtv_living_room
                - type: conditional
                  conditions:
                    - entity: remote.androidtv_living_room
                      state: 'on'
                  card:
                    type: custom:mushroom-template-card
                    primary: Power
                    icon: mdi:power
                    entity: remote.androidtv_living_room
                    icon_color: red
                    tap_action:
                      action: call-service
                      service: remote.turn_off
                      target:
                        entity_id: remote.androidtv_living_room
          - type: conditional
            conditions:
              - entity: media_player.universal_living_room
                state_not: 'off'
              - entity: media_player.universal_living_room
                state_not: unavailable
              - entity: media_player.universal_living_room
                state_not: unknown
            card:
              type: custom:decluttering-card
              template: media_card
              variables:
                - entity: media_player.universal_living_room
                - sound_buttons:
                    - id: Straight
                      type: sound_mode
                      name: Direct
                      icon: mdi:surround-sound-5-1
                    - id: Surround
                      type: sound_mode
                      name: Surround
                      icon: mdi:surround-sound-2-1
                    - id: MCh Stereo
                      type: sound_mode
                      name: Multi-Channel
                      icon: mdi:surround-sound
          - type: custom:mini-media-player
            entity: media_player.cast_living_room_speaker
            name: Google Home
            icon: mdi:dots-horizontal-circle
            info: scroll
            hide:
              power: true
  - title: Family
    theme: Backend-selected
    path: family
    type: custom:masonry-layout
    layout:
      max_cols: 2
    icon: mdi:gamepad-circle
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Family Room
          - icon: mdi:gamepad-circle
          - icon_color: yellow
          - chips:
              - type: template
                entity: binary_sensor.family_room_occupancy
                icon: "{%- if is_state(\"binary_sensor.family_room_motion\", \"on\"\
                  ) -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.family_room_motion\"\
                  , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.family_room_temperature
              - type: template
                entity: binary_sensor.quest_in_use
                icon: fapro:meta
                icon_color: '{{ iif(is_state(entity, "on"), "blue", "disabled") }}'
                tap_action:
                  action: more-info
              - type: template
                entity: camera.family_room
                icon: mdi:cctv
                icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Family Room
                      size: fullscreen
                      content:
                        type: custom:decluttering-card
                        template: camera_popup
                        variables:
                          - camera: camera.family_room
                          - stream: familyroom
              - type: template
                icon: mdi:remote-tv
                icon_color: orange
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Family Room Remote
                      style: '--popup-min-width: 380px;

                        --popup-max-width: 380px;

                        '
                      content:
                        type: custom:decluttering-card
                        template: androidtv_remote
                        variables:
                          - remote: remote.androidtv_family_room
                          - media: media_player.universal_family_room
              - type: template
                icon: mdi:dots-horizontal-circle
                icon_color: blue
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Send Message
                      right_button: Send
                      right_button_action:
                        service: script.media_play
                        data:
                          media_player: media_player.cast_family_room_speaker
                          volume: 90
                      content:
                        - name: message
                          label: Message
                          selector:
                            select:
                              custom_value: true
                              options:
                                - label: Snack Time
                                  value: It's snack time!
                                - label: Lunch Time
                                  value: Hey, come get some lunch.
                                - label: Dinner Time
                                  value: Head up-stairs, it's time for dinner.
                                - label: Breakfast Time
                                  value: It's time for breakfast.
                                - label: Ethan up-stairs
                                  value: Hey Ethan, come up-stairs please.
                                - label: Emma up-stairs
                                  value: Hey Emma, come up-stairs please.
                                - label: Kids up-stairs
                                  value: Hey kids, come up-stairs please.
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: template
                    entity: script.family_room_game_light_mode
                    icon: mdi:light-flood-up
                    icon_color: pink
                    tap_action:
                      action: call-service
                      service: script.family_room_game_light_mode
                  - type: template
                    entity: light.family_room_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: grid
            square: false
            columns: 2
            cards:
              - type: tile
                entity: light.family_room
                name: Main
                features:
                  - type: light-brightness
              - type: tile
                entity: light.family_room_lamp
                name: Lamp
                features:
                  - type: light-brightness
              - type: tile
                entity: light.stairway
                name: Stairs
                vertical: true
              - type: tile
                entity: light.basement_hallway
                name: Hallway
                features:
                  - type: light-brightness
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Media
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - entity: remote.harmony_family_room
                    state: unavailable
                  - entity: remote.harmony_family_room
                    state: unknown
            card:
              type: custom:mushroom-template-card
              primary: Harmony Unavailable
              icon: mdi:progress-question
          - type: conditional
            conditions:
              - entity: remote.harmony_family_room
                state_not: unavailable
              - entity: remote.harmony_family_room
                state_not: unknown
            card:
              type: grid
              columns: 3
              square: false
              cards:
                - type: custom:mushroom-template-card
                  primary: Shield
                  icon: mdi:motion-play-outline
                  entity: remote.harmony_family_room
                  icon_color: "{%- if has_value(entity) and is_state_attr(entity,\
                    \ \"current_activity\", \"Shield TV\") -%}\n  green\n{%- else\
                    \ -%}\n  grey\n{%- endif -%}"
                  tap_action:
                    action: call-service
                    service: remote.turn_on
                    data:
                      activity: Shield TV
                    target:
                      entity_id: remote.harmony_family_room
                - type: custom:mushroom-template-card
                  primary: PC
                  icon: mdi:desktop-tower
                  entity: remote.harmony_family_room
                  icon_color: "{%- if has_value(entity) and is_state_attr(entity,\
                    \ \"current_activity\", \"Computer\") -%}\n  green\n{%- else -%}\n\
                    \  grey\n{%- endif -%}"
                  tap_action:
                    action: call-service
                    service: remote.turn_on
                    data:
                      activity: Computer
                    target:
                      entity_id: remote.harmony_family_room
                - type: custom:mushroom-template-card
                  primary: PS4
                  icon: fapro:ps4
                  entity: remote.harmony_family_room
                  icon_color: "{%- if has_value(entity) and is_state_attr(entity,\
                    \ \"current_activity\", \"PS4\") -%}\n  green\n{%- else -%}\n\
                    \  grey\n{%- endif -%}"
                  tap_action:
                    action: call-service
                    service: remote.turn_on
                    data:
                      activity: PS4
                    target:
                      entity_id: remote.harmony_family_room
                - type: custom:mushroom-template-card
                  primary: PS3
                  icon: fapro:ps3
                  entity: remote.harmony_family_room
                  icon_color: "{%- if has_value(entity) and is_state_attr(entity,\
                    \ \"current_activity\", \"PS3\") -%}\n  green\n{%- else -%}\n\
                    \  grey\n{%- endif -%}"
                  tap_action:
                    action: call-service
                    service: remote.turn_on
                    data:
                      activity: PS3
                    target:
                      entity_id: remote.harmony_family_room
                - type: custom:mushroom-template-card
                  primary: XBox
                  icon: mdi:microsoft-xbox
                  entity: remote.harmony_family_room
                  icon_color: "{%- if has_value(entity) and is_state_attr(entity,\
                    \ \"current_activity\", \"XBox\") -%}\n  green\n{%- else -%}\n\
                    \  grey\n{%- endif -%}"
                  tap_action:
                    action: call-service
                    service: remote.turn_on
                    data:
                      activity: XBox
                    target:
                      entity_id: remote.harmony_family_room
                - type: conditional
                  conditions:
                    - entity: remote.harmony_family_room
                      state: 'on'
                  card:
                    type: custom:mushroom-template-card
                    primary: Power
                    icon: mdi:power
                    entity: remote.harmony_family_room
                    icon_color: red
                    tap_action:
                      action: call-service
                      service: remote.turn_off
                      target:
                        entity_id: remote.harmony_family_room
          - type: conditional
            conditions:
              - entity: sensor.family_room_denon_source
                state_not: 'off'
              - entity: sensor.family_room_denon_source
                state_not: unavailable
              - entity: sensor.family_room_denon_source
                state_not: unknown
            card:
              type: custom:decluttering-card
              template: media_card
              variables:
                - entity: media_player.universal_family_room
                - sound_buttons:
                    - id: Direct
                      type: sound_mode
                      name: Direct
                      icon: mdi:surround-sound-5-1
                    - id: Dolby Digital
                      type: sound_mode
                      name: Surround
                      icon: mdi:surround-sound-2-1
                    - id: All Zone Stereo
                      type: sound_mode
                      name: Multi-Channel
                      icon: mdi:surround-sound
          - type: conditional
            conditions:
              - entity: sensor.family_room_denon_source
                state_not: 'off'
              - entity: sensor.family_room_denon_source
                state_not: unavailable
              - entity: sensor.family_room_denon_source
                state_not: unknown
            card:
              type: custom:mini-media-player
              entity: media_player.denon_avr_s760h
              icon: mdi:audio-video
              hide:
                power: true
                controls: true
                source: true
              shortcuts:
                columns: 5
                attribute: source
                buttons:
                  - id: Shield
                    type: source
                    icon: mdi:motion-play-outline
                  - id: Computer
                    type: source
                    icon: mdi:desktop-tower
                  - id: PS4
                    type: source
                    icon: fapro:ps4
                  - id: PS3
                    type: source
                    icon: fapro:ps3
                  - id: XBox
                    type: source
                    icon: mdi:microsoft-xbox
          - type: custom:mini-media-player
            entity: media_player.cast_family_room_speaker
            name: Google Home
            icon: mdi:dots-horizontal-circle
            info: scroll
            hide:
              power: true
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Dreamscreen
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                primary: Video
                entity: dreamscreen.family_room
                icon: mdi:television
                icon_color: "{%- if is_state_attr(entity, \"device_mode\", 1) -%}\n\
                  \  purple\n{%- else -%}\n  grey\n{%- endif -%}"
                tap_action:
                  action: call-service
                  service: dreamscreen.set_mode
                  data:
                    entity_id: dreamscreen.family_room
                    mode: 1
                  target:
                    entity_id: dreamscreen.family_room
              - type: custom:mushroom-template-card
                primary: Music
                entity: dreamscreen.family_room
                icon: mdi:music-note
                icon_color: "{%- if is_state_attr(entity, \"device_mode\", 2) -%}\n\
                  \  blue\n{%- else -%}\n  grey\n{%- endif -%}"
                tap_action:
                  action: call-service
                  service: dreamscreen.set_mode
                  data:
                    entity_id: dreamscreen.family_room
                    mode: 2
                  target:
                    entity_id: dreamscreen.family_room
              - type: custom:mushroom-template-card
                primary: Ambient
                entity: dreamscreen.family_room
                icon: mdi:lightbulb-on
                icon_color: "{%- if is_state_attr(entity, \"device_mode\", 3) -%}\n\
                  \  amber\n{%- else -%}\n  grey\n{%- endif -%}"
                tap_action:
                  action: call-service
                  service: dreamscreen.set_mode
                  data:
                    entity_id: dreamscreen.family_room
                    mode: 3
                  target:
                    entity_id: dreamscreen.family_room
          - type: conditional
            conditions:
              - entity: dreamscreen.family_room
                state: 'on'
            card:
              type: custom:mushroom-template-card
              primary: Power
              entity: dreamscreen.family_room
              icon: mdi:power
              icon_color: red
              tap_action:
                action: call-service
                service: dreamscreen.set_mode
                data:
                  entity_id: dreamscreen.family_room
                  mode: 0
                target:
                  entity_id: dreamscreen.family_room
          - type: conditional
            conditions:
              - entity: sensor.dreamscreen_family_room_mode
                state: Ambient
            card:
              type: custom:mushroom-select-card
              entity: input_select.dreamscreen_family_room_scene
              name: Ambient Scene
              layout: horizontal
              secondary_info: none
              icon_color: amber
  - title: Office
    theme: Backend-selected
    path: office
    type: custom:masonry-layout
    layout:
      max_cols: 1
    icon: mdi:chair-rolling
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Office
          - icon: mdi:chair-rolling
          - icon_color: blue
          - chips:
              - type: template
                entity: binary_sensor.apollo_msr_1_office_radar_target
                icon: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"\
                  on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                  \ endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.joshua_office_temperature
              - type: entity
                entity: sensor.apollo_msr_1_office_co2
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: entity
                    entity: switch.adaptive_lighting_adapt_brightness_office
                    icon: mdi:brightness-auto
                    icon_color: amber
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_adapt_color_office
                    icon: mdi:palette
                    icon_color: pink
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_sleep_mode_office
                    icon: mdi:sleep
                    icon_color: cyan
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_office
                    icon_color: green
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: template
                    entity: light.joshua_office_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: grid
            square: false
            columns: 2
            cards:
              - type: tile
                entity: light.joshua_office
                name: Main
                features:
                  - type: light-brightness
                state_content:
                  - brightness
                  - color_temp_kelvin
              - type: tile
                entity: light.joshua_office_lamp
                name: Lamp
                features:
                  - type: light-brightness
                state_content:
                  - brightness
                  - color_temp_kelvin
              - type: tile
                entity: light.wled_joshua_office_desk
                name: Desk
                features:
                  - type: light-brightness
                state_content:
                  - brightness
                  - effect
              - type: tile
                entity: light.joshua_office_shelf_led
                name: Shelf
                vertical: true
      - type: custom:mini-media-player
        entity: media_player.cast_office_speaker
        name: Google Home
        icon: mdi:dots-horizontal-circle
        info: scroll
        hide:
          power: true
  - title: Kitchen
    theme: Backend-selected
    path: kitchen
    type: custom:masonry-layout
    layout:
      max_cols: 1
    icon: mdi:fridge-variant
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Kitchen
          - icon: mdi:fridge-variant
          - icon_color: cyan
          - chips:
              - type: template
                entity: binary_sensor.kitchen_occupancy
                icon: "{%- if is_state(\"binary_sensor.kitchen_motion\", \"on\") -%}\n\
                  \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
                  {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.kitchen_motion\", \"\
                  on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n\
                  {%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.kitchen_temperature
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: template
                    entity: light.kitchen_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.kitchen
            name: Main
            features:
              - type: light-brightness
          - type: grid
            square: false
            columns: 2
            cards:
              - type: tile
                entity: light.dining_room
                name: Dining
              - type: tile
                entity: switch.grow_light
                name: Grow Light
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Oven
              - chips:
                  - type: entity
                    entity: switch.ge_oven_light
          - type: custom:yet-another-expander-card
            title-card:
              type: custom:mushroom-template-card
              entity: water_heater.ge_oven
              multiline_secondary: false
              primary: "{% if is_state_attr(entity, 'operation_mode', 'Off') %}\n\
                \  Oven\n{% else %}\n  {{ state_attr(entity, 'operation_mode') }}\
                \ - {{ float(state_attr('water_heater.ge_oven', 'temperature')) |\
                \ round(0) }}°F\n{% endif %}"
              secondary: "{% if is_state_attr(entity,'operation_mode', 'Off') %}\n\
                \  Off\n{% else %}\n  Current Temperature - {{ float(state_attr(entity,\
                \ 'current_temperature')) | round(0) }}°F\n{% endif %}"
              icon: mdi:stove
              icon_color: "{% if is_state_attr('water_heater.ge_oven', 'operation_mode',\
                \ 'Off') %}\n  grey\n{% else %}\n  red\n{% endif %}\n"
              tap_action:
                action: more-info
            padding: null
            cards:
              - type: grid
                columns: 6
                square: false
                cards:
                  - type: custom:mushroom-template-card
                    icon: mdi:power
                    icon_color: "{% if is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') %}\n  grey\n{% else %}\n  red\n{% endif %}\n"
                    layout: vertical
                    primary: 'Off'
                    tap_action:
                      action: call-service
                      service: water_heater.set_operation_mode
                      service_data:
                        entity_id: water_heater.ge_oven
                        operation_mode: 'Off'
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  padding-right: 0px !important;\n  padding-left:\
                          \ 0px !important;\n  padding-bottom: 3px !important;\n \
                          \ padding-top: 3px !important;\n}\nha-state-icon {\n  --icon-symbol-size:\
                          \ 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not\n  is_state_attr('water_heater.ge_oven',\
                      \ 'operation_mode', 'Off') and\n  is_state_attr('water_heater.ge_oven',\
                      \ 'temperature', 250)\n%}\n  red\n{% else %}\n  grey\n{% endif\
                      \ %}\n"
                    layout: vertical
                    primary: 250°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 250
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  padding-right: 0px !important;\n  padding-left:\
                          \ 0px !important;\n  padding-bottom: 3px !important;\n \
                          \ padding-top: 3px !important;\n}\nha-state-icon {\n  --icon-symbol-size:\
                          \ 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not\n  is_state_attr('water_heater.ge_oven','operation_mode','Off')\
                      \ and\n  is_state_attr('water_heater.ge_oven','temperature',\
                      \ 350)\n%}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 350°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 350
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  padding-right: 0px !important;\n  padding-left:\
                          \ 0px !important;\n  padding-bottom: 3px !important;\n \
                          \ padding-top: 3px !important;\n}\nha-state-icon {\n  --icon-symbol-size:\
                          \ 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 375)  %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 375°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 375
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  padding-right: 0px !important;\n  padding-left:\
                          \ 0px !important;\n  padding-bottom: 3px !important;\n \
                          \ padding-top: 3px !important;\n}\nha-state-icon {\n  --icon-symbol-size:\
                          \ 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven','operation_mode','Off')\
                      \ and is_state_attr('water_heater.ge_oven','temperature', 400)\
                      \  %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 400°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 400
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  padding-right: 0px !important;\n  padding-left:\
                          \ 0px !important;\n  padding-bottom: 3px !important;\n \
                          \ padding-top: 3px !important;\n}\nha-state-icon {\n  --icon-symbol-size:\
                          \ 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven','operation_mode','Off')\
                      \ and is_state_attr('water_heater.ge_oven','temperature', 425)\
                      \  %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 425°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 425
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  padding-right: 0px !important;\n  padding-left:\
                          \ 0px !important;\n  padding-bottom: 3px !important;\n \
                          \ padding-top: 3px !important;\n}\nha-state-icon {\n  --icon-symbol-size:\
                          \ 18px;\n}\n"
              - type: custom:mushroom-select-card
                entity: select.ge_oven_operation
                name: Mode
                icon: mdi:heating-coil
                secondary_info: none
                layout: horizontal
                tap_action:
                  action: more-info
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Luna
          - type: custom:yet-another-expander-card
            gap: 0em
            padding: 0em
            child-padding: 0.5em
            title-card-padding: 0em
            title-card:
              type: custom:mushroom-template-card
              primary: Feed Luna
              secondary: Press and Hold to Dispense
              entity: script.feeder_start
              icon: mdi:cat
              icon_color: "{%- if is_state(entity, \"on\") -%}\n  green\n{%- else\
                \ -%}\n  grey\n{%- endif -%}"
              tap_action:
                action: none
              hold_action:
                action: call-service
                service: script.feeder_start
                data:
                  feeder: Cat Feeder
            cards:
              - type: custom:mushroom-number-card
                entity: number.cat_feeder_serving_size
                name: Servings
                icon: mdi:location-enter
                secondary_info: none
                layout: horizontal
                display_mode: buttons
              - type: custom:mushroom-lock-card
                entity: lock.cat_feeder_child_lock
                name: Local Control
                fill_container: false
                layout: horizontal
              - type: markdown
                title: Schedule
                content: "{%- if has_value(\"sensor.cat_feeder_schedule\") -%}\n{%-\
                  \ set schedules = states(\"sensor.cat_feeder_schedule\") | replace(\"\
                  '\", '\"') | from_json -%}\n{%- for schedule in schedules -%}\n\
                  \  {{ schedule.size }} portions at {{ as_timestamp(today_at(schedule.hour\
                  \ ~ \":\" ~ schedule.minute)) | timestamp_custom(\"%-I:%M %p\",\
                  \ True) }}\n{% endfor -%}\n{%- endif -%}"
              - type: custom:bar-card
                card_mod:
                  style: "ha-card {\n  background: none;\n  border-width: 0;\n}\n\
                    #states {\n  padding: 8px 2px;\n}\nbar-card-name,\nbar-card-value\
                    \ {\n  font-weight: 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                    }\nbar-card-backgroundbar {\n  background-color: var(--primary-background-color);\n\
                    }\n"
                name: Food Level
                entities:
                  - entity: sensor.cat_feeder_food_level
                animation:
                  state: 'on'
                positions:
                  indicator: inside
                  icon: inside
                height: 24px
                min: 0
                max: 100
                decimal: 1
                severity:
                  - color: var(--red-color)
                    from: 0
                    to: 10
                  - color: var(--orange-color)
                    from: 10
                    to: 20
                  - color: var(--amber-color)
                    from: 20
                    to: 40
                  - color: var(--light-green-color)
                    from: 40
                    to: 70
                  - color: var(--green-color)
                    from: 70
                    to: 100
              - type: custom:apexcharts-card
                apex_config:
                  chart:
                    foreColor: '#7B7B7B'
                    toolbar:
                      show: false
                  grid:
                    borderColor: '#7B7B7B'
                  xaxis:
                    tooltip:
                      enabled: false
                experimental:
                  color_threshold: true
                header:
                  show: false
                all_series_config:
                  extend_to: now
                  stroke_width: 2
                  type: line
                  group_by:
                    func: min
                    duration: 1hour
                  color_threshold:
                    - value: 0
                      color: '#f44336'
                    - value: 10
                      color: '#ff9800'
                    - value: 20
                      color: '#ffc107'
                    - value: 40
                      color: '#8bc34a'
                    - value: 70
                      color: '#4caf50'
                span:
                  end: minute
                graph_span: 10d
                yaxis:
                  - decimals: 0
                    min: ~0
                    max: ~100
                    apex_config:
                      tickAmount: 4
                      title:
                        text: '%'
                series:
                  - entity: sensor.cat_feeder_food_level
                    name: Food Level
                    color: rgb(158,158,158)
              - type: custom:mushroom-template-card
                entity: sensor.cat_feeder_total_weight
                secondary: Press and hold to reset
                primary: Reset Food Level
                icon: mdi:progress-upload
                icon_color: green
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: utility_meter.calibrate
                  target:
                    entity_id: sensor.cat_feeder_total_weight
                  data:
                    value: '0'
  - title: Main
    theme: Backend-selected
    path: main-bed
    type: custom:masonry-layout
    layout:
      max_cols: 1
    icon: mdi:bed-king
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Main Bedroom
          - icon: mdi:bed-king
          - icon_color: deep-purple
          - chips:
              - type: template
                entity: binary_sensor.main_bedroom_occupancy
                icon: "{%- if is_state(\"binary_sensor.main_bedroom_motion\", \"on\"\
                  ) -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.main_bedroom_motion\"\
                  , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.main_bedroom_temperature
              - type: template
                icon: mdi:remote-tv
                icon_color: orange
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Main Bedroom Remote
                      style: '--popup-min-width: 380px;

                        --popup-max-width: 380px;

                        '
                      content:
                        type: custom:decluttering-card
                        template: androidtv_remote
                        variables:
                          - remote: remote.harmony_main_bedroom
                          - media: media_player.universal_main_bedroom
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: template
                    entity: light.main_bedroom_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.main_bedroom
            name: Main
            features:
              - type: light-brightness
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.main_bedroom_fan
                name: Fan Light
                features:
                  - type: light-brightness
              - type: tile
                entity: light.main_bedroom_floor_lamp
                name: Floor Lamp
                features:
                  - type: light-brightness
          - type: tile
            entity: fan.main_bedroom_ceiling
            name: Fan
            features:
              - type: fan-speed
            card_mod:
              style:
                .: "ha-tile-icon {\n  --tile-color:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n    {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int(0) %}\n    {% if perc == 33 %} var(--green-color)\n    {%\
                  \ elif perc == 66 %} var(--yellow-color)\n    {% else %} var(--orange-color)\n\
                  \    {% endif %}\n    {% else %} var(--state-inactive-color)\n \
                  \   {% endif %};\n}\nha-state-icon {\n  animation:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n      {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int %}\n      {% set base = 'rotation infinite linear' %}\n\
                  \      {% if perc == 33 %} 1s {{base}}\n      {% elif perc == 66\
                  \ %} 0.75s {{base}}\n      {% else  %} 0.66s {{base}}\n      {%\
                  \ endif %}\n    {% else %} none\n    {% endif %};\n}\n@keyframes\
                  \ rotation {\n  0% {transform: rotate(0deg);}\n  100% {transform:\
                  \ rotate(360deg);}\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Media
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - entity: remote.harmony_main_bedroom
                    state: unavailable
                  - entity: remote.harmony_main_bedroom
                    state: unknown
            card:
              type: custom:mushroom-template-card
              primary: Harmony Unavailable
              icon: mdi:progress-question
          - type: conditional
            conditions:
              - entity: remote.harmony_main_bedroom
                state_not: unavailable
              - entity: remote.harmony_main_bedroom
                state_not: unknown
            card:
              type: grid
              square: false
              columns: 2
              cards:
                - type: custom:mushroom-template-card
                  primary: Shield
                  icon: mdi:motion-play-outline
                  entity: remote.harmony_main_bedroom
                  icon_color: "{%- if has_value(entity) and is_state_attr(entity,\
                    \ \"current_activity\", \"Shield TV\") -%}\n  green\n{%- else\
                    \ -%}\n  grey\n{%- endif -%}"
                  tap_action:
                    action: call-service
                    service: remote.turn_on
                    data:
                      activity: Shield TV
                    target:
                      entity_id: remote.harmony_main_bedroom
                - type: conditional
                  conditions:
                    - entity: remote.harmony_main_bedroom
                      state: 'on'
                  card:
                    type: custom:mushroom-template-card
                    primary: Power
                    icon: mdi:power
                    entity: remote.harmony_main_bedroom
                    icon_color: red
                    tap_action:
                      action: call-service
                      service: remote.turn_off
                      target:
                        entity_id: remote.harmony_main_bedroom
          - type: conditional
            conditions:
              - entity: remote.harmony_main_bedroom
                state_not: 'off'
              - entity: remote.harmony_main_bedroom
                state_not: unavailable
              - entity: remote.harmony_main_bedroom
                state_not: unknown
            card:
              type: custom:decluttering-card
              template: media_card
              variables:
                - entity: media_player.universal_main_bedroom
                - buttons:
                    - id: Plex
                      type: source
                      name: Plex
                      icon: mdi:plex
                    - id: Prime Video
                      type: source
                      name: Prime Video
                      icon: fapro:prime-video
                    - id: SmartTube
                      type: source
                      name: SmartTube
                      icon: fapro:smarttube
                    - id: Spotify
                      type: source
                      name: Spotify
                      icon: mdi:spotify
                    - id: Twitch
                      type: source
                      name: Twitch
                      icon: mdi:twitch
                    - id: Crunchyroll
                      type: source
                      name: Crunchyroll
                      icon: fapro:crunchyroll
                    - id: Home
                      type: source
                      name: Home
                      icon: mdi:apps
  - title: Ethan
    theme: Backend-selected
    path: ethan
    type: custom:masonry-layout
    layout:
      max_cols: 1
    icon: mdi:robot
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Ethan
          - icon: mdi:robot
          - icon_color: green
          - chips:
              - type: template
                entity: binary_sensor.ethan_occupancy
                icon: "{%- if is_state(\"binary_sensor.ethan_motion\", \"on\") -%}\n\
                  \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
                  {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.ethan_motion\", \"on\"\
                  ) -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n\
                  {%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.ethan_bedroom_temperature
              - type: template
                entity: camera.ethan
                icon: mdi:cctv
                icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Ethan
                      size: fullscreen
                      content:
                        type: custom:decluttering-card
                        template: camera_popup
                        variables:
                          - camera: camera.ethan
                          - stream: ethan
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: template
                    entity: light.ethan_bedroom_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.ethan_bedroom
            name: Main
            features:
              - type: light-brightness
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Nebula Projector
          - type: tile
            entity: switch.nebula_projector_ethan_main_switch
            name: Main
          - type: conditional
            conditions:
              - entity: switch.nebula_projector_ethan_main_switch
                state: 'on'
            card:
              type: vertical-stack
              cards:
                - type: tile
                  entity: select.nebula_projector_ethan_scene
                  name: Scene
                  icon: mdi:play-box-outline
                  hide_state: true
                  features:
                    - type: select-options
                - type: grid
                  square: false
                  columns: 3
                  cards:
                    - type: tile
                      entity: light.nebula_projector_ethan_light
                      icon: mdi:crystal-ball
                      name: Light
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: light.nebula_projector_ethan_laser
                      name: Laser
                      color: green
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: fan.nebula_projector_ethan_motor
                      name: Motor
                      features:
                        - type: fan-speed
  - title: Emma
    theme: Backend-selected
    path: emma
    type: custom:masonry-layout
    layout:
      max_cols: 1
    icon: mdi:unicorn-variant
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Emma
          - icon: mdi:unicorn-variant
          - icon_color: purple
          - chips:
              - type: template
                entity: binary_sensor.emma_occupancy
                icon: "{%- if is_state(\"binary_sensor.emma_motion\", \"on\") -%}\n\
                  \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
                  {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.emma_motion\", \"on\"\
                  ) -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n\
                  {%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.emma_bedroom_temperature
              - type: template
                entity: camera.emma
                icon: mdi:cctv
                icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Emma
                      size: fullscreen
                      content:
                        type: custom:decluttering-card
                        template: camera_popup
                        variables:
                          - camera: camera.emma
                          - stream: emma
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: template
                    entity: light.emma_bedroom_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.emma_bedroom
            name: Main
            features:
              - type: light-brightness
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Nebula Projector
          - type: tile
            entity: switch.nebula_projector_emma_main_switch
            name: Main
          - type: conditional
            conditions:
              - entity: switch.nebula_projector_emma_main_switch
                state: 'on'
            card:
              type: vertical-stack
              cards:
                - type: tile
                  entity: select.nebula_projector_emma_scene
                  name: Scene
                  icon: mdi:play-box-outline
                  hide_state: true
                  features:
                    - type: select-options
                - type: grid
                  square: false
                  columns: 3
                  cards:
                    - type: tile
                      entity: light.nebula_projector_emma_light
                      icon: mdi:crystal-ball
                      name: Light
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: light.nebula_projector_emma_laser
                      name: Laser
                      color: green
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: fan.nebula_projector_emma_motor
                      name: Motor
                      features:
                        - type: fan-speed
  - title: Amy's Office
    theme: Backend-selected
    path: amy-office
    icon: mdi:skull
    type: custom:masonry-layout
    layout:
      max_cols: 1
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Amy's Office
          - icon: mdi:skull
          - icon_color: red
          - chips:
              - type: template
                entity: binary_sensor.amy_office_occupancy
                icon: "{%- if is_state(\"binary_sensor.amy_office_motion\", \"on\"\
                  ) -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.amy_office_motion\",\
                  \ \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.amy_office_temperature
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Lights
          - type: tile
            entity: light.amy_office
            name: Main
            features:
              - type: light-brightness
  - title: Garage
    theme: Backend-selected
    path: garage
    type: custom:masonry-layout
    layout:
      max_cols: 1
    icon: mdi:garage-variant
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Garage
          - icon: '{% if is_state(''cover.garage_door'', ''open'') %}mdi:garage-open-variant{%
              elif states(''cover.garage_door'') in [''opening'', ''closing''] %}mdi:garage-alert-variant{%
              else %}mdi:garage-variant{% endif %}'
          - icon_color: blue-grey
          - chips:
              - type: template
                entity: binary_sensor.garage_multisensor_motion_detection
                icon: '{{ iif(is_state(entity, "on"), "mdi:motion-sensor", "mdi:motion-sensor-off")
                  }}'
                icon_color: '{{ iif(is_state(entity, "on"), "orange", "disabled")
                  }}'
                tap_action:
                  action: more-info
              - type: template
                entity: sensor.garage_multisensor_air_temperature
                content: '{{ int(states(entity), 0) }} °F'
                icon: mdi:thermometer
                tap_action:
                  action: more-info
              - type: template
                entity: sensor.garage_multisensor_humidity
                content: '{{ int(states(entity), 0) }} %'
                icon: mdi:water-percent
                tap_action:
                  action: more-info
              - type: template
                entity: sensor.garage_multisensor_illuminance
                content: '{{ int(states(entity), 0) }} %'
                icon: mdi:brightness-6
                tap_action:
                  action: more-info
              - type: template
                entity: camera.garage
                icon: mdi:cctv
                icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Garage
                      size: fullscreen
                      content:
                        type: custom:decluttering-card
                        template: camera_popup
                        variables:
                          - camera: camera.garage
                          - stream: garage
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Lights
          - type: tile
            entity: light.garage
            name: Main
      - type: tile
        entity: cover.garage_door
        color: green
        features:
          - type: cover-open-close
          - type: cover-position
        state_content:
          - state
          - last-changed
  - title: Outside
    theme: Backend-selected
    path: outside
    type: custom:masonry-layout
    layout:
      max_cols: 1
    icon: mdi:spa
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Outside
          - icon: mdi:spa
          - icon_color: light-green
          - chips:
              - type: template
                entity: binary_sensor.doorbell_person_occupancy
                icon: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\", \"\
                  on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                  ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%- endif\
                  \ -%}"
                icon_color: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\"\
                  , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
                hold_action:
                  action: none
              - type: entity
                entity: sensor.owm_daily_temperature
              - type: entity
                entity: sensor.owm_daily_humidity
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Lights
              - chips:
                  - type: template
                    entity: light.outside_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.outside_entry
                name: Entry
                features:
                  - type: light-brightness
              - features:
                  - type: light-brightness
                type: tile
                entity: light.outside_garage
                name: Garage Front
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.outside_side
                name: Side
              - type: tile
                entity: light.outside_back
                name: Back
              - type: tile
                entity: light.eve
                name: Eve
  - title: Utility
    theme: Backend-selected
    path: utility
    icon: mdi:progress-wrench
    type: custom:masonry-layout
    layout:
      max_cols: 1
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Utility
          - icon: mdi:progress-wrench
          - icon_color: brown
          - chips:
              - type: entity
                entity: sensor.water_main_valve_air_temperature
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Water
          - type: custom:auto-entities
            card:
              type: vertical-stack
            card_param: cards
            sort:
              method: state
            filter:
              include:
                - group: binary_sensor.water_leak_detected
                  options:
                    type: custom:mushroom-entity-card
              exclude:
                - entity_id: binary_sensor.water_leak_detected
                - state: 'off'
                - state: unavailable
                - state: unknown
          - type: custom:mushroom-template-card
            primary: Water Main Valve
            secondary: "{%- if is_state(entity, \"open\") -%}\n  Press and hold to\
              \ close\n{%- elif is_state(entity, \"closed\") -%}\n  Press and hold\
              \ to open\n{%- endif -%}"
            entity: valve.water_main_valve
            icon: "{%- if is_state(entity, \"open\") -%}\n  mdi:valve-open\n{%- elif\
              \ is_state(entity, \"closed\") -%}\n  mdi:valve-closed\n{%- else -%}\n\
              \  mdi:valve\n{%- endif -%}"
            icon_color: "{%- if is_state(entity, \"open\") -%}\n  green\n{%- elif\
              \ is_state(entity, \"closed\") -%}\n  red\n{%- else -%}\n  grey\n{%-\
              \ endif -%}"
            tap_action:
              action: more-info
            hold_action:
              action: toggle
          - type: custom:yet-another-expander-card
            gap: 0em
            padding: 0em
            child-padding: 0.5em
            title-card-padding: 0em
            title-card:
              type: custom:bar-card
              card_mod:
                style: "ha-card {\n  background: none;\n  border-width: 0;\n}\n#states\
                  \ {\n  padding: 8px 2px;\n}\nbar-card-name,\nbar-card-value {\n\
                  \  font-weight: 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                  }\nbar-card-backgroundbar {\n  background-color: var(--primary-background-color);\n\
                  }\n"
              name: Water Softener Salt Level
              entities:
                - entity: sensor.water_softener_salt_monitor_salt_level
                  name: Water Softener Salt Level
              decimal: 1
              animation:
                state: 'on'
              positions:
                indicator: inside
              severity:
                - color: var(--red-color)
                  from: 0
                  to: 10
                - color: var(--orange-color)
                  from: 10
                  to: 20
                - color: var(--amber-color)
                  from: 20
                  to: 40
                - color: var(--light-green-color)
                  from: 40
                  to: 70
                - color: var(--green-color)
                  from: 70
                  to: 100
            cards:
              - type: custom:apexcharts-card
                apex_config:
                  chart:
                    foreColor: '#7B7B7B'
                    toolbar:
                      show: false
                  grid:
                    borderColor: '#7B7B7B'
                  xaxis:
                    tooltip:
                      enabled: false
                experimental:
                  color_threshold: true
                header:
                  show: false
                all_series_config:
                  extend_to: now
                  stroke_width: 2
                  type: line
                  group_by:
                    func: min
                    duration: 1hour
                  color_threshold:
                    - value: 0
                      color: '#f44336'
                    - value: 10
                      color: '#ff9800'
                    - value: 20
                      color: '#ffc107'
                    - value: 40
                      color: '#8bc34a'
                    - value: 70
                      color: '#4caf50'
                span:
                  end: minute
                graph_span: 10d
                yaxis:
                  - decimals: 0
                    min: ~0
                    max: ~100
                    apex_config:
                      tickAmount: 4
                      title:
                        text: '%'
                series:
                  - entity: sensor.water_softener_salt_monitor_salt_level
                    name: Salt Level
                    color: rgb(158,158,158)
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Sprinklers
              - chips:
                  - type: template
                    icon: mdi:stop
                    icon_color: red
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: opensprinkler.stop
                  - type: template
                    icon: mdi:pause
                    icon_color: yellow
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: opensprinkler.pause_stations
          - type: custom:opensprinkler-card
            device: c2a83f52c36a3795327fad03d6c568e1
            name: OpenSprinkler
            extra_entities:
              - binary_sensor.opensprinkler_rain_delay_active
              - sensor.opensprinkler_rain_delay_stop_time
  - title: Subaru
    theme: Backend-selected
    path: subaru
    type: custom:masonry-layout
    layout:
      max_cols: 2
    icon: fapro:subaru
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Ascent
          - secondary: Press and Hold to Activate Actions
          - icon: fapro:subaru
          - icon_color: blue
          - chips:
              - type: entity
                entity: sensor.ascent_odometer
              - type: entity
                entity: sensor.ascent_avg_fuel_consumption
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.ascent_trouble
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.ascent_trouble
                  icon_color: red
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Trouble Codes
                        content:
                          type: markdown
                          content: "{%- set codes = {\n  \"ABS_MIL\": \"Anti-lock\
                            \ Brake System\",\n  \"AHBL_MIL\": \"Automatic Headlight\
                            \ Beam Leveller\",\n  \"ATF_MIL\": \"ATF\",\n  \"AWD_MIL\"\
                            : \"AWD\",\n  \"BSDRCT_MIL\": \"Blind Spot Detection/Rear\
                            \ Cross Traffic Alert\",\n  \"CEL_MIL\": \"Check Engine\
                            \ Light\",\n  \"EBD_MIL\": \"Electronic Brake-force Distribution\"\
                            ,\n  \"EOL_MIL\": \"EOL\",\n  \"EPAS_MIL\": \"Electric\
                            \ Power Assisted Steering\",\n  \"EPB_MIL\": \"Electronic\
                            \ Parking Brake\",\n  \"ESS_MIL\": \"Engine Start-Stop\"\
                            ,\n  \"HEVCM_MIL\": \"HEVCM\",\n  \"HEV_MIL\": \"HEV\"\
                            ,\n  \"OPL_MIL\": \"OPL\",\n  \"RAB_MIL\": \"Reverse Automatic\
                            \ Braking\",\n  \"SRS_MIL\": \"Airbag System\",\n  \"\
                            TEL_MIL\": \"Telematics\",\n  \"TPMS_MIL\": \"Tire Preassure\
                            \ Monitoring\",\n  \"VDC_MIL\": \"Multi-mode Vehicle Dynamics\
                            \ Control\",\n  \"WASH_MIL\": \"Washer Fluid\"\n} -%}\n\
                            {%- set entity_id = \"binary_sensor.ascent_trouble\" -%}\n\
                            {%- for attribute, value in states[entity_id].attributes.items()\
                            \ -%}\n{%- if attribute in codes -%}\n- {{ codes[attribute]\
                            \ }} ({{ attribute }})\n{% endif -%}\n{%- endfor -%}"
      - type: vertical-stack
        cards:
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-template-columns: 180px max-content
              grid-template-rows: auto
              margin: 0
              padding: 5px
            cards:
              - type: custom:mushroom-entity-card
                entity: device_tracker.ascent
                primary_info: state
                secondary_info: none
                icon_type: entity-picture
                layout: vertical
                tap_action:
                  action: none
                hold_action:
                  action: none
                card_mod:
                  style:
                    .: ":host {\n  /* Define Person State colors. Can be added to\
                      \ theme */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                      \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n\
                      \  --state-person-unknown: var(--grey-color);\n\n  /* Set Person\
                      \ State color */\n  --state-person:\n  {% if is_state(config.entity,\
                      \ ['home', 'not_home', 'unknown']) %}\n    var(--state-person-{{\
                      \ states(config.entity) | replace('_', '-') }})\n  {% else %}\n\
                      \    var(--state-person-zone)\n  {% endif %};\n\n  /* Match\
                      \ styling to Mushroom Title */\n  --mush-card-primary-font-size:\
                      \ var(--mush-title-font-size, 24px);\n  --mush-card-primary-font-weight:\
                      \ var(--mush-title-font-weight, normal);\n  --mush-card-primary-line-height:\
                      \ var(--ush-title-line-height, 1.2);\n  --mush-card-secondary-font-size:\
                      \ var(--mush-title-font-size, 16px);\n  --mush-card-secondary-font-weight:\
                      \ var(--mush-title-font-weight, normal);\n  --mush-card-secondary-line-height:\
                      \ var(--mush-title-line-height, 1.2);\n}\nha-card {\n    /*\
                      \ Remove default card styling */\n  --ha-card-background: none;\n\
                      \  box-shadow: none;\n  --ha-card-border-width: 0;\n\n  /* Increase\
                      \ icon size */\n  --icon-size: 72px;\n\n  /* Center card */\n\
                      \  # margin: 10px auto;\n  # width: fit-content;\n\n  /* Add\
                      \ padding to bottom of card */\n  padding: 0px 0px var(--mush-title-spacing,\
                      \ 12px) 0px !important;\n\n  /* Make card non-responsive to\
                      \ select and pointer */\n  user-select: none;\n  pointer-events:\
                      \ none;\n\n  transition: all 0s;\n}\n"
                    mushroom-shape-avatar$: ".picture {\n  /* Style shadow around\
                      \ avatar */\n  background-color: var(--state-person);\n  box-shadow:\
                      \ 0 0 4px 2px var(--state-person);\n}\n"
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-entity-card
                    entity: sensor.ascent_avg_fuel_consumption
                    layout: vertical
                    name: MPG
                    icon_color: green
                    card_mod:
                      style:
                        .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                          \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                          \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n\
                          \  margin: auto;\n}\n"
                  - type: custom:mushroom-entity-card
                    entity: sensor.ascent_odometer
                    layout: vertical
                    name: Odometer
                    icon_color: blue
                    card_mod:
                      style:
                        .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                          \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                          \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n\
                          \  margin: auto;\n}\n"
                  - type: custom:mushroom-template-card
                    entity: sensor.maverik_regular_gas
                    layout: vertical
                    primary: Gas Price
                    secondary: ${{ states(entity) }}/gal
                    icon: mdi:gas-station
                    icon_color: amber
                    tap_action:
                      action: more-info
                    card_mod:
                      style:
                        .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                          \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                          \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n\
                          \  margin: auto;\n}\n"
          - type: custom:bar-card
            card_mod:
              style: "ha-card {\n  background: none;\n  border-width: 0;\n}\n#states\
                \ {\n  padding: 8px 2px;\n}\nbar-card-name,\nbar-card-value {\n  font-weight:\
                \ 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                }\nbar-card-backgroundbar {\n  background-color: var(--primary-background-color);\n\
                }\n"
            name: Range
            entities:
              - entity: sensor.ascent_range
            animation:
              state: 'on'
            positions:
              indicator: inside
              icon: inside
            height: 24px
            max: 345
            decimal: 1
            severity:
              - color: var(--red-color)
                from: 0
                to: 30
              - color: var(--orange-color)
                from: 30
                to: 50
              - color: var(--amber-color)
                from: 50
                to: 70
              - color: var(--light-green-color)
                from: 70
                to: 200
              - color: var(--green-color)
                from: 200
                to: 345
          - type: custom:yet-another-expander-card
            gap: 0em
            padding: 0em
            child-padding: 0.5em
            title-card-padding: 0em
            title-card-button-overlay: true
            overlay-margin: calc(var(--ha-card-border-radius, 12px) / 2) auto
            title-card:
              type: vertical-stack
              cards:
                - type: custom:mushroom-template-card
                  primary: Remote Start
                  secondary: "{%- if is_state(\"device_tracker.ascent\", \"home\"\
                    ) -%}\n  Open the Garage and Start the Ascent\n{%- else -%}\n\
                    \  Start the Ascent\n{%- endif -%}"
                  icon: mdi:key-wireless
                  entity: script.subaru_remote_start
                  icon_color: amber
                  tap_action:
                    action: none
                  hold_action:
                    action: call-service
                    service: script.turn_on
                    target:
                      entity_id: script.subaru_remote_start
                - type: custom:timer-bar-card
                  filter: true
                  invert: true
                  state_color: true
                  bar_height: 12px
                  bar_radius: var(--ha-card-border-radius, 12px)
                  bar_direction: rtl
                  bar_foreground: var(--lime-color)
                  bar_background: var(--disabled-color)
                  compressed: true
                  modifications:
                    - remaining: 00:03:00
                      bar_foreground: var(--amber-color)
                    - remaining: 00:02:00
                      bar_foreground: var(--orange-color)
                    - remaining: 00:01:00
                      bar_foreground: var(--red-color)
                  entities:
                    - entity: timer.subaru_remote_start
                      name: Timer
            cards:
              - type: custom:mushroom-select-card
                entity: select.ascent_climate_preset
                layout: horizontal
                name: Climate Preset
                secondary_info: none
                icon_color: pink
              - type: custom:mushroom-chips-card
                card_mod:
                  style: ".chip-container {\n  display: grid !important;\n  grid-template-columns:\
                    \ 1fr 1fr 1fr 1fr;\n}\n"
                chips:
                  - type: entity
                    entity: lock.ascent_door_locks
                    name: Lock
                    icon: mdi:lock
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: lock.lock
                      target:
                        entity_id: lock.ascent_door_locks
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
                  - type: entity
                    entity: button.ascent_remote_start
                    name: Remote Start
                    icon: mdi:key-wireless
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_remote_start
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
                  - type: entity
                    entity: button.ascent_lights_start
                    name: Flash Lights
                    icon: mdi:lightbulb-on
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_lights_start
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
                  - type: entity
                    entity: button.ascent_horn_start
                    name: Sound Horn
                    icon: mdi:volume-high
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_horn_start
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
                  - type: entity
                    entity: lock.ascent_door_locks
                    name: Unlock
                    icon: mdi:lock-open
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: lock.unlock
                      target:
                        entity_id: lock.ascent_door_locks
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
                  - type: entity
                    entity: button.ascent_remote_stop
                    name: Remote Stop
                    icon: mdi:stop-circle-outline
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_remote_stop
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
                  - type: entity
                    entity: button.ascent_lights_stop
                    name: Stop Flash Lights
                    icon: mdi:lightbulb-off
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_lights_stop
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
                  - type: entity
                    entity: button.ascent_horn_stop
                    name: Stop Horn
                    icon: mdi:volume-off
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_horn_stop
                    card_mod:
                      style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                        }\n"
              - type: custom:mushroom-chips-card
                card_mod:
                  style: ".chip-container {\n  display: grid !important;\n  grid-template-columns:\
                    \ max-content max-content;\n  margin-top: 15px;\n  place-content:\
                    \ space-around !important;\n}\n"
                chips:
                  - type: entity
                    entity: button.ascent_refresh
                    name: Update from Server
                    icon: mdi:refresh
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_refresh
                    card_mod:
                      style: "ha-card {\n  justify-content: center;\n}\nha-card:hover\
                        \ {\n  --chip-background: rgb(var(--rgb-disabled));\n}\n"
                  - type: entity
                    entity: button.ascent_poll_vehicle
                    name: Update from Car
                    icon: mdi:car-connected
                    content_info: name
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.ascent_poll_vehicle
                    card_mod:
                      style: "ha-card {\n  justify-content: center;\n}\nha-card:hover\
                        \ {\n  --chip-background: rgb(var(--rgb-disabled));\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Location
          - type: map
            entities:
              - entity: device_tracker.ascent
            aspect_ratio: '4:3'
            hours_to_show: 24
            default_zoom: 12
            card_mod:
              style:
                .: ":host {\n  /* Define Person State colors. Can be added to theme\
                  \ */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                  \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n\
                  \  --state-person-unknown: var(--grey-color);\n\n  /* Set person\
                  \ state color */\n  --state-person:\n  {% if is_state(config.entities[0].entity,\
                  \ ['home', 'not_home', 'unknown']) %}\n    var(--state-person-{{\
                  \ states(config.entities[0].entity) | replace('_', '-') }})\n  {%\
                  \ else %}\n    var(--state-person-zone)\n  {% endif %};\n}\nha-card\
                  \ {\n  /* Remove default card styling without affecting child elements\
                  \ */\n  box-shadow: none;\n  border-width: 0;\n  /*border-radius:\
                  \ 0px 0px var(--ha-card-border-radius, 12px) var(--ha-card-border-radius,\
                  \ 12px);*/\n  transition: all 0s;\n}\nha-icon-button {\n  /* Position\
                  \ center button */\n  bottom: 12px;\n  left: 12px !important;\n\
                  \  top: auto !important;\n\n  /* Style center button to match Chip\
                  \ */\n  color: var(--deep-orange-color) !important;\n  background:\
                  \ color-mix(in srgb, var(--deep-orange-color) 20%, transparent);\n\
                  \  border-radius: var(--mush-chip-border-radius, 19px);\n  border:\
                  \ var(--ha-card-border-width, 1px) solid var(--ha-card-border-color,\
                  \ var(--divider-color, #e0e0e0)) !important;\n}\n"
                ha-map $ ha-entity-marker $: ".marker {\n  /* Style person marker\
                  \ & adjust position to avoid blocking waypoints */\n  border: 3px\
                  \ solid var(--state-person) !important;\n  border-radius: 50% 50%\
                  \ 50% 0px !important;\n  transform: rotate(-45deg) translate(50%,\
                  \ -50%);\n  overflow: visible !important;\n  background: var(--state-person)\
                  \ !important;\n}\n.entity-picture {\n  /* Correct orientation of\
                  \ person avatar */\n  transform: rotate(45deg);\n  border-radius:\
                  \ 50%;\n}\n"
                ha-map $: "path:first-child {\n  /* Style accuracy radius */\n  fill:\
                  \ color-mix(in srgb, var(--state-person) 50%, transparent);\n  stroke-width:\
                  \ 0px;\n}\npath:nth-child(even) {\n  /* Styling for waypoints */\n\
                  \  stroke: var(--primary-color);\n  fill: var(--primary-color);\n\
                  \  stroke-width: 4px;\n}\npath:nth-child(odd):not(:first-child)\
                  \ {\n  /* Styling for lines */\n  stroke: var(--primary-color);\n\
                  \  stroke-width: 4px;\n}\n.leaflet-control-attribution {\n  /* Style\
                  \ attribution text */\n  background: rgba(var(--rgb-card-background-color),\
                  \ 0.2) !important;\n  font-size: 8px;\n}\n.leaflet-container a {\n\
                  \  /* Set color of zoom icons & attribution text */\n  color: var(--secondary-text-color);\n\
                  }\n.leaflet-control-zoom-in,\n.leaflet-control-zoom-out {\n  /*\
                  \ Style zoom buttons like Chips */\n  border-radius: var(--mush-chip-border-radius,\
                  \ 19px) !important;\n  padding: 3px;\n  background: rgb(var(--rgb-secondary-text-color),\
                  \ 0.2) !important;\n  margin: 8px 12px 0px;\n  border: var(--ha-card-border-width,\
                  \ 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0))\
                  \ !important;\n}\n.leaflet-top {\n  /* Move zoom buttons to bottom\
                  \ of map */\n  bottom: 0px !important;\n}\n.leaflet-control-zoom\
                  \ {\n  /* Allow buttons to be moved */\n  position: absolute !important;\n\
                  \n  /* Adjust spacing for border */\n  bottom: calc(2 * var(--ha-card-border-width,\
                  \ 1px) + 56px);\n\n  /* Remove extra margin */\n  margin: 0px !important;\n\
                  \n  /* Remove zoom control border */\n  border: none !important;\n\
                  }\n"
                ha-icon-button $ mwc-icon-button $: "button {\n  /* Size center button\
                  \ to match Chip */\n  height: var(--mush-chip-height, 36px) !important;\n\
                  \  width: var(--mush-chip-height, 36px) !important;\n  --mdc-icon-size:\
                  \ 22px;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Overview
          - type: custom:floorplan-card
            config:
              image: /local/floorplan/subaru.svg
              stylesheet: /local/floorplan/subaru.css
              defaults:
                hover_action: hover-info
                tap_action: more-info
                hold_action: more-info
              console_log_level: warn
              rules:
                - name: Tires
                  entities:
                    - sensor.ascent_tire_pressure_fl
                    - sensor.ascent_tire_pressure_fr
                    - sensor.ascent_tire_pressure_rl
                    - sensor.ascent_tire_pressure_rr
                  state_action:
                    - service: floorplan.text_set
                      service_data: '${entity.state ? Math.round(entity.state) : "undefined"}'
                    - service: floorplan.class_set
                      service_data: ">\nvar temp = parseFloat(entity.state.replace(\"\
                        °\", \"\"));\nif (temp < 28)\n  return \"danger\";\nelse if\
                        \ (temp < 30)\n  return \"warning\";\nelse if (temp < 35)\n\
                        \  return \"normal\";\nelse if (temp < 37)\n  return \"warning\"\
                        ;\nelse\n  return \"danger\";\n"
                - name: Openables
                  entities:
                    - binary_sensor.ascent_hood
                    - binary_sensor.ascent_front_left_door
                    - binary_sensor.ascent_front_right_door
                    - binary_sensor.ascent_rear_left_door
                    - binary_sensor.ascent_rear_right_door
                    - binary_sensor.ascent_trunk
                    - binary_sensor.ascent_front_left_window
                    - binary_sensor.ascent_front_right_window
                    - binary_sensor.ascent_rear_left_window
                    - binary_sensor.ascent_rear_right_window
                  state_action:
                    service: floorplan.class_set
                    service_data: '${(entity.state === "on") ? "layer-visible " :
                      "layer-hidden"}'
  - title: Computer
    theme: Backend-selected
    path: computer
    layout:
      max_cols: 1
    icon: mdi:desktop-tower
    type: custom:masonry-layout
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Computers
          - icon: mdi:desktop-tower
          - icon_color: grey
          - chips:
              - type: template
                entity: binary_sensor.computers
                icon: mdi:desktop-tower
                icon_color: '{{ "teal" if is_state(entity, "on") else "disabled" }}'
                tap_action:
                  action: none
                card_mod:
                  style:
                    .: "{% if is_state(config.entity, \"on\") %}\nha-card:after {\n\
                      \  content: \"{{ expand(config.entity) | selectattr(\"state\"\
                      , \"==\", \"on\") | list | count }}\";\n  position: absolute;\n\
                      \  color: var(--teal-color);\n  font-weight: bolder;\n  top:\
                      \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
              - type: template
                entity: sensor.steam_zanix
                picture: '{{ state_attr(entity, "entity_picture") }}'
                content: '{{ states(config.entity) | title }}'
                card_mod:
                  style: "ha-card {\n{% if is_state(config.entity, \"online\") %}\n\
                    \  --chip-background: rgba(var(--rgb-green), 0.8);\n{% endif %}\n\
                    \  --chip-height: 30px;\n  margin-top: 3px;\n  margin-left: 10px;\n\
                    }\n{% if is_state(config.entity, \"offline\") %}\n.avatar {\n\
                    \  filter: grayscale(100%);\n}\n{% endif %}\n"
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Steam
                      content:
                        type: custom:kb-steam-card
                        entity: sensor.steam_zanix
                        game_background: true
                        card_mod:
                          style: "ha-card {\n  background: none;\n}\n"
              - type: template
                entity: sensor.steam_starchild
                picture: '{{ state_attr(entity, "entity_picture") }}'
                content: '{{ states(config.entity) | title }}'
                card_mod:
                  style: "ha-card {\n{% if is_state(config.entity, \"online\") %}\n\
                    \  --chip-background: rgba(var(--rgb-green), 0.8);\n{% endif %}\n\
                    \  --chip-height: 30px;\n  margin-top: 3px;\n  margin-left: 10px;\n\
                    }\n{% if is_state(config.entity, \"offline\") %}\n.avatar {\n\
                    \  filter: grayscale(100%);\n}\n{% endif %}\n"
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Steam
                      content:
                        type: custom:kb-steam-card
                        entity: sensor.steam_starchild
                        game_background: true
                        card_mod:
                          style: "ha-card {\n  background: none;\n}\n"
      - type: grid
        square: false
        cards:
          - type: custom:button-card
            template: computer_tile
            variables:
              connected: binary_sensor.erebus_connected
              media: media_player.erebus
              cpu: sensor.erebus_cpu_load
              ram: sensor.erebus_memory_usage
              gpu: sensor.erebus_gpu_load
            name: Erebus
            icon: mdi:desktop-tower
            entity: binary_sensor.erebus_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-erebus'
            custom_fields:
              stat1: "[[[\n  return `<ha-icon icon=\"mdi:motion-play-outline\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> Media: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.media].state !== 'unavailable' ? helpers.localize(states[variables.media])\
                \ : '?'}</span></span>`\n]]]"
              stat2: "[[[\n  return `<ha-icon icon=\"mdi:cpu-64-bit\" style=\"width:\
                \ 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n  \
                \  <span> CPU: <span style=\"color: var(--text-color-sensor);\">${states[variables.cpu].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.cpu], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat3: "[[[\n  return `<ha-icon icon=\"mdi:memory\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ RAM: <span style=\"color: var(--text-color-sensor);\">${states[variables.ram].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.ram], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat4: "[[[\n  return `<ha-icon icon=\"mdi:expansion-card\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> GPU: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.gpu].state !== 'unavailable' ? helpers.localize(states[variables.gpu],\
                \ undefined, 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Ryzen_5_5600X-ED1C24?style=flat-square&logo=amd&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/RX_6650_XT-ED1C24?style=flat-square&logo=amd&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.erebus_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.erebus_mic_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.erebus_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.erebus_webcam_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.erebus_windows_updates_software_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.erebus_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: erebus
                                  - entity: sensor.erebus_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.erebus_windows_updates_driver_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.erebus_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: erebus
                                  - entity: sensor.erebus_windows_updates_driver_updates
          - type: custom:button-card
            template: computer_tile
            variables:
              connected: binary_sensor.nasya_connected
              media: media_player.nasya
              cpu: sensor.nasya_cpu_load
              ram: sensor.nasya_memory_usage
              gpu: sensor.nasya_gpu_load
            name: Nasya
            icon: mdi:laptop
            entity: binary_sensor.nasya_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-nasya'
            custom_fields:
              stat1: "[[[\n  return `<ha-icon icon=\"mdi:motion-play-outline\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> Media: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.media].state !== 'unavailable' ? helpers.localize(states[variables.media])\
                \ : '?'}</span></span>`\n]]]"
              stat2: "[[[\n  return `<ha-icon icon=\"mdi:cpu-64-bit\" style=\"width:\
                \ 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n  \
                \  <span> CPU: <span style=\"color: var(--text-color-sensor);\">${states[variables.cpu].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.cpu], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat3: "[[[\n  return `<ha-icon icon=\"mdi:memory\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ RAM: <span style=\"color: var(--text-color-sensor);\">${states[variables.ram].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.ram], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat4: "[[[\n  return `<ha-icon icon=\"mdi:expansion-card\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> GPU: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.gpu].state !== 'unavailable' ? helpers.localize(states[variables.gpu],\
                \ undefined, 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Core_i7_1260P-0071C5?style=flat-square&logo=intel&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/RTX_3050_Ti-76B900?style=flat-square&logo=nvidia&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.nasya_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.nasya_mic_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.nasya_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.nasya_webcam_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.nasya_windows_updates_software_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.nasya_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: nasya
                                  - entity: sensor.nasya_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.nasya_windows_updates_driver_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.nasya_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: nasya
                                  - entity: sensor.nasya_windows_updates_driver_updates
          - type: custom:button-card
            template: computer_tile
            variables:
              connected: binary_sensor.ardena_connected
              media: media_player.ardena
              cpu: sensor.ardena_cpu_load
              ram: sensor.ardena_memory_usage
              gpu: sensor.ardena_gpu_load
            name: Ardena
            icon: fab:steam-symbol
            entity: binary_sensor.ardena_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-ardena'
            custom_fields:
              stat1: "[[[\n  return `<ha-icon icon=\"mdi:motion-play-outline\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> Media: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.media].state !== 'unavailable' ? helpers.localize(states[variables.media])\
                \ : '?'}</span></span>`\n]]]"
              stat2: "[[[\n  return `<ha-icon icon=\"mdi:cpu-64-bit\" style=\"width:\
                \ 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n  \
                \  <span> CPU: <span style=\"color: var(--text-color-sensor);\">${states[variables.cpu].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.cpu], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat3: "[[[\n  return `<ha-icon icon=\"mdi:memory\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ RAM: <span style=\"color: var(--text-color-sensor);\">${states[variables.ram].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.ram], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat4: "[[[\n  return `<ha-icon icon=\"mdi:expansion-card\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> GPU: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.gpu].state !== 'unavailable' ? helpers.localize(states[variables.gpu],\
                \ undefined, 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Ryzen_5_5600X-ED1C24?style=flat-square&logo=amd&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/RTX_3080-76B900?style=flat-square&logo=nvidia&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: fan.computer
                          state_not: 'off'
                      chip:
                        type: template
                        entity: fan.computer
                        icon: mdi:fan
                        icon_color: '{{ iif(is_state(entity, ''on''), "green", "disabled")
                          }}'
                        card_mod:
                          style:
                            .: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n\
                              \    animation: rotation 1.5s linear infinite;\n   \
                              \ {% endif %}\n}\n@keyframes rotation {\n  100% {\n\
                              \    transform: rotate(-360deg);\n  }\n}\n"
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ardena_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.ardena_mic_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ardena_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.ardena_webcam_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.ardena_windows_updates_software_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.ardena_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: ardena
                                  - entity: sensor.ardena_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.ardena_windows_updates_driver_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.ardena_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: ardena
                                  - entity: sensor.ardena_windows_updates_driver_updates
          - type: custom:button-card
            template: computer_tile
            variables:
              connected: binary_sensor.athos_connected
              media: media_player.athos
              cpu: sensor.athos_cpu_load
              ram: sensor.athos_memory_usage
              gpu: sensor.athos_gpu_load
            name: Athos
            icon: mdi:gamepad
            entity: binary_sensor.athos_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-athos'
            custom_fields:
              stat1: "[[[\n  return `<ha-icon icon=\"mdi:motion-play-outline\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> Media: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.media].state !== 'unavailable' ? helpers.localize(states[variables.media])\
                \ : '?'}</span></span>`\n]]]"
              stat2: "[[[\n  return `<ha-icon icon=\"mdi:cpu-64-bit\" style=\"width:\
                \ 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n  \
                \  <span> CPU: <span style=\"color: var(--text-color-sensor);\">${states[variables.cpu].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.cpu], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat3: "[[[\n  return `<ha-icon icon=\"mdi:memory\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ RAM: <span style=\"color: var(--text-color-sensor);\">${states[variables.ram].state\
                \ !== 'unavailable' ? helpers.localize(states[variables.ram], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat4: "[[[\n  return `<ha-icon icon=\"mdi:expansion-card\" style=\"\
                width: 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n\
                \    <span> GPU: <span style=\"color: var(--text-color-sensor);\"\
                >${states[variables.gpu].state !== 'unavailable' ? helpers.localize(states[variables.gpu],\
                \ undefined, 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Core_i7_11700-0071C5?style=flat-square&logo=intel&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/GTX_1070-76B900?style=flat-square&logo=nvidia&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.athos_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.athos_mic_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.athos_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.athos_webcam_active
                        icon_color: green
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: sensor.athos_windows_updates_software_updates
                          state_not: '0'
                        - entity: sensor.athos_windows_updates_software_updates
                          state_not: unavailable
                        - entity: sensor.athos_windows_updates_software_updates
                          state_not: unknown
                      chip:
                        type: template
                        entity: sensor.athos_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: athos
                                  - entity: sensor.athos_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - entity: sensor.athos_windows_updates_driver_updates
                          state_not: '0'
                        - entity: sensor.athos_windows_updates_driver_updates
                          state_not: unavailable
                        - entity: sensor.athos_windows_updates_driver_updates
                          state_not: unknown
                      chip:
                        type: template
                        entity: sensor.athos_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:decluttering-card
                                template: windows_updates_list
                                variables:
                                  - computer: athos
                                  - entity: sensor.athos_windows_updates_driver_updates
          - type: custom:button-card
            name: MagicMirror
            icon: mdi:apps
            entity: binary_sensor.magicmirror_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-magicmirror'
            custom_fields:
              stat1: "[[[\n  var entity_id = 'sensor.magicmirror_cpu_usage';\n  return\
                \ `<ha-icon icon=\"mdi:cpu-64-bit\" style=\"width: 24px; height: 24px;\
                \ color: var(--green-color);\"></ha-icon>\n    <span> CPU: <span style=\"\
                color: var(--text-color-sensor);\">${states[entity_id].state !== 'unavailable'\
                \ ? helpers.localize(states[entity_id], undefined, 0) : '?'}</span></span>`\n\
                ]]]"
              stat2: "[[[\n  var entity_id = 'sensor.magicmirror_memory_usage';\n\
                \  return `<ha-icon icon=\"mdi:memory\" style=\"width: 24px; height:\
                \ 24px; color: var(--green-color);\"></ha-icon>\n    <span> RAM: <span\
                \ style=\"color: var(--text-color-sensor);\">${states[entity_id].state\
                \ !== 'unavailable' ? helpers.localize(states[entity_id], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat3: "[[[\n  var entity_id = 'sensor.magicmirror_cpu_thermal_1_temperature';\n\
                \  return `<ha-icon icon=\"mdi:thermometer\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ Temp: <span style=\"color: var(--text-color-sensor);\">${states[entity_id].state\
                \ !== 'unavailable' ? helpers.localize(states[entity_id], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Raspberry_Pi_5-C7053D?style=flat-square&logo=raspberrypi&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips: []
            styles:
              grid:
                - grid-template-columns: 1fr min-content
                - grid-template-rows: min-content min-content min-content min-content
                    min-content min-content min-content;
                - grid-template-areas: '"n i" "s chips" "info chips" "stat1 chips"
                    "stat2 chips" "stat3 chips" "stat4 chips"'
              card:
                - padding: 22px 8px 22px 22px
              img_cell:
                - justify-content: start
                - align-self: start
                - position: absolute
                - width: 100px
                - height: 100px
                - right: -20px
                - top: -20px
                - border-radius: 50%
                - background: '[[[ if (states["binary_sensor.magicmirror_connected"].state
                    == "off") return "var(--red-color)"; else return "var(--green-color)"
                    ]]]'
              icon:
                - width: 60px
                - color: rgba(0, 0, 0, 0.6)
              name:
                - justify-self: start
                - align-self: start
                - font-size: 20px
                - font-weight: 500
                - color: var(--white-color)
              state:
                - min-height: 30px
                - justify-self: start
                - align-self: start
                - font-size: 14px
                - opacity: '0.7'
              custom_fields:
                stat1:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.magicmirror_cpu_usage''].state
                      > 80) return "var(--red-color)"; ]]]'
                stat2:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.magicmirror_memory_usage''].state
                      > 80) return "var(--red-color)"; ]]]'
                stat3:
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.magicmirror_cpu_thermal_1_temperature''].state
                      > 80) return "var(--red-color)"; ]]]'
                info:
                  - align-self: end
                  - justify-self: start
                  - text-align: left
                chips:
                  - margin-top: 15px
                  - justify-content: end
                  - align-self: start
          - type: custom:button-card
            name: Quest 2
            icon: fab:meta
            entity: binary_sensor.quest_interactive
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-quest'
            custom_fields:
              stat1: "[[[\n  var entity_id = 'sensor.quest_battery_level';\n  return\
                \ `<ha-icon icon=\"mdi:battery\" style=\"width: 24px; height: 24px;\
                \ color: var(--green-color);\"></ha-icon>\n    <span> CPU: <span style=\"\
                color: var(--text-color-sensor);\">${states[entity_id].state !== 'unavailable'\
                \ ? helpers.localize(states[entity_id], undefined, 0) : '?'}</span></span>`\n\
                ]]]"
              stat2: "[[[\n  var entity_id = 'sensor.quest_wifi_link_speed';\n  return\
                \ `<ha-icon icon=\"mdi:wifi\" style=\"width: 24px; height: 24px; color:\
                \ var(--green-color);\"></ha-icon>\n    <span> WiFi: <span style=\"\
                color: var(--text-color-sensor);\">${states[entity_id].state !== 'unavailable'\
                \ ? helpers.localize(states[entity_id], undefined, 0) : '?'}</span></span>`\n\
                ]]]"
              stat3: "[[[\n  var entity_id = 'sensor.quest_battery_temperature';\n\
                \  return `<ha-icon icon=\"mdi:thermometer\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ Temp: <span style=\"color: var(--text-color-sensor);\">${states[entity_id].state\
                \ !== 'unavailable' ? helpers.localize(states[entity_id], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Meta_Quest_2-0668E1?style=flat-square&logo=meta&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips: []
            styles:
              grid:
                - grid-template-columns: 1fr min-content
                - grid-template-rows: min-content min-content min-content min-content
                    min-content min-content min-content;
                - grid-template-areas: '"n i" "s chips" "info chips" "stat1 chips"
                    "stat2 chips" "stat3 chips" "stat4 chips"'
              card:
                - padding: 22px 8px 22px 22px
              img_cell:
                - justify-content: start
                - align-self: start
                - position: absolute
                - width: 100px
                - height: 100px
                - right: -20px
                - top: -20px
                - border-radius: 50%
                - background: '[[[ if (states["binary_sensor.quest_interactive"].state
                    == "off") return "var(--red-color)"; else return "var(--green-color)"
                    ]]]'
              icon:
                - width: 60px
                - color: rgba(0, 0, 0, 0.6)
              name:
                - justify-self: start
                - align-self: start
                - font-size: 20px
                - font-weight: 500
                - color: var(--white-color)
              state:
                - min-height: 30px
                - justify-self: start
                - align-self: start
                - font-size: 14px
                - opacity: '0.7'
              custom_fields:
                stat1:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.quest_battery_level''].state
                      < 16) return "var(--red-color)"; ]]]'
                stat2:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.quest_wifi_link_speed''].state
                      < 800) return "var(--red-color)"; ]]]'
                stat3:
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.quest_battery_temperature''].state
                      > 80) return "var(--red-color)"; ]]]'
                info:
                  - align-self: end
                  - justify-self: start
                  - text-align: left
                chips:
                  - margin-top: 15px
                  - justify-content: end
                  - align-self: start
        columns: 2
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#computer-erebus'
            name: Erebus
            icon: mdi:desktop-tower
            button_type: state
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
            entity: binary_sensor.erebus_connected
            show_state: false
            show_attribute: false
          - type: custom:mushroom-chips-card
            chips:
              - type: conditional
                conditions:
                  - entity: binary_sensor.erebus_mic_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.erebus_mic_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - entity: binary_sensor.erebus_webcam_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.erebus_webcam_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.erebus_windows_updates_software_updates
                    above: 0
                chip:
                  type: template
                  entity: sensor.erebus_windows_updates_software_updates
                  icon: mdi:arrow-up-bold-circle
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Software Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: erebus
                            - entity: sensor.erebus_windows_updates_software_updates
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.erebus_windows_updates_driver_updates
                    above: 0
                chip:
                  type: template
                  entity: sensor.erebus_windows_updates_driver_updates
                  icon: mdi:cog-refresh
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Driver Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: erebus
                            - entity: sensor.erebus_windows_updates_driver_updates
              - type: template
                entity: button.erebus_publish_sensors
                icon: mdi:gesture-tap-button
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.erebus
            alignment: end
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:decluttering-card
                template: computer_power
                variables:
                  - computer: erebus
              - type: conditional
                conditions:
                  - entity: media_player.erebus
                    state_not: unavailable
                  - entity: media_player.erebus
                    state_not: unknown
                  - entity: media_player.erebus
                    state_not: 'off'
                card:
                  type: custom:bubble-card
                  card_type: media-player
                  card_layout: large
                  entity: media_player.erebus
                  styles: ".bubble-media-player-container {\n  border-radius: var(--ha-card-border-radius,\
                    \ 12px) !important;\n}"
                  hide:
                    power_button: true
              - type: custom:decluttering-card
                template: uptime_card
                variables:
                  - entity: binary_sensor.erebus_connected
                  - name: Erebus Up-Time
                  - icon: mdi:connection
              - type: custom:decluttering-card
                template: four_graphs
                variables:
                  - graph_1_name: CPU
                  - graph_1_icon: mdi:cpu-64-bit
                  - graph_1_entities:
                      - entity: sensor.erebus_cpu_load
                        name: Usage
                        color: var(--amber-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.erebus_cpu_clock_speed
                        name: Speed
                        color: var(--lime-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_2_name: GPU
                  - graph_2_icon: mdi:expansion-card
                  - graph_2_entities:
                      - entity: sensor.erebus_gpu_load
                        name: Load
                        color: var(--green-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.erebus_gpu_temperature
                        name: Temperature
                        color: var(--pink-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_3_name: Storage
                  - graph_3_icon: mdi:harddisk
                  - graph_3_entities:
                      - entity: sensor.erebus_storage_c
                        attribute: UsedSpacePercentage
                        unit: '%'
                        name: Win11
                        color: var(--blue-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.erebus_storage_b
                        attribute: UsedSpacePercentage
                        unit: '%'
                        name: Backup
                        color: var(--indigo-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.erebus_storage_d
                        attribute: UsedSpacePercentage
                        unit: '%'
                        name: Dev Drive
                        color: var(--lime-color)
                        show_state: true
                        show_points: false
                  - graph_4_name: RAM
                  - graph_4_icon: mdi:memory
                  - graph_4_entities:
                      - entity: sensor.erebus_memory_usage
                        name: Usage
                        color: var(--purple-color)
                        show_state: true
                        show_points: false
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#computer-nasya'
            name: Nasya
            icon: mdi:desktop-tower
            button_type: state
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
            entity: binary_sensor.nasya_connected
            show_state: false
            show_attribute: false
          - type: custom:mushroom-chips-card
            chips:
              - type: conditional
                conditions:
                  - entity: binary_sensor.nasya_mic_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.nasya_mic_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - entity: binary_sensor.nasya_webcam_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.nasya_webcam_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.nasya_windows_updates_software_updates
                    above: 0
                chip:
                  type: template
                  entity: sensor.nasya_windows_updates_software_updates
                  icon: mdi:arrow-up-bold-circle
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Software Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: nasya
                            - entity: sensor.nasya_windows_updates_software_updates
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.nasya_windows_updates_driver_updates
                    above: 0
                chip:
                  type: template
                  entity: sensor.nasya_windows_updates_driver_updates
                  icon: mdi:cog-refresh
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Driver Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: nasya
                            - entity: sensor.nasya_windows_updates_driver_updates
              - type: template
                entity: button.nasya_publish_sensors
                icon: mdi:gesture-tap-button
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.nasya
            alignment: end
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:decluttering-card
                template: computer_power
                variables:
                  - computer: nasya
              - type: conditional
                conditions:
                  - entity: media_player.nasya
                    state_not: unavailable
                  - entity: media_player.nasya
                    state_not: unknown
                  - entity: media_player.nasya
                    state_not: 'off'
                card:
                  type: custom:bubble-card
                  card_type: media-player
                  card_layout: large
                  entity: media_player.nasya
                  styles: ".bubble-media-player-container {\n  border-radius: var(--ha-card-border-radius,\
                    \ 12px) !important;\n}"
                  hide:
                    power_button: true
              - type: custom:decluttering-card
                template: uptime_card
                variables:
                  - entity: binary_sensor.nasya_connected
                  - name: Nasya Up-Time
                  - icon: mdi:connection
              - type: custom:decluttering-card
                template: four_graphs
                variables:
                  - graph_1_name: CPU
                  - graph_1_icon: mdi:cpu-64-bit
                  - graph_1_entities:
                      - entity: sensor.nasya_cpu_load
                        name: Usage
                        color: var(--amber-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.nasya_cpu_clock_speed
                        name: Speed
                        color: var(--lime-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_2_name: GPU
                  - graph_2_icon: mdi:expansion-card
                  - graph_2_entities:
                      - entity: sensor.nasya_gpu_load
                        name: Load
                        color: var(--green-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.nasya_gpu_temperature
                        name: Temperature
                        color: var(--pink-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_3_name: Storage
                  - graph_3_icon: mdi:harddisk
                  - graph_3_entities:
                      - entity: sensor.nasya_storage_c
                        attribute: UsedSpacePercentage
                        unit: '%'
                        name: Win11
                        color: var(--blue-color)
                        show_state: true
                        show_points: false
                  - graph_4_name: RAM
                  - graph_4_icon: mdi:memory
                  - graph_4_entities:
                      - entity: sensor.nasya_memory_usage
                        name: Usage
                        color: var(--purple-color)
                        show_state: true
                        show_points: false
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#computer-ardena'
            name: Ardena
            icon: mdi:desktop-tower
            button_type: state
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
            entity: binary_sensor.ardena_connected
            show_state: false
            show_attribute: false
          - type: custom:mushroom-chips-card
            alignment: end
            chips:
              - type: template
                entity: fan.computer
                icon: mdi:fan
                icon_color: '{{ iif(is_state(entity, ''on''), "green", "disabled")
                  }}'
                card_mod:
                  style:
                    .: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n    animation:\
                      \ rotation 1.5s linear infinite;\n    {% endif %}\n}\n@keyframes\
                      \ rotation {\n  100% {\n    transform: rotate(-360deg);\n  }\n\
                      }\n"
              - type: conditional
                conditions:
                  - entity: binary_sensor.ardena_mic_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.ardena_mic_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - entity: binary_sensor.ardena_webcam_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.ardena_webcam_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.ardena_windows_updates_software_updates
                    above: 0
                chip:
                  type: template
                  entity: sensor.ardena_windows_updates_software_updates
                  icon: mdi:arrow-up-bold-circle
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Software Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: ardena
                            - entity: sensor.ardena_windows_updates_software_updates
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.ardena_windows_updates_driver_updates
                    above: 0
                chip:
                  type: template
                  entity: sensor.ardena_windows_updates_driver_updates
                  icon: mdi:cog-refresh
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Driver Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: ardena
                            - entity: sensor.ardena_windows_updates_driver_updates
              - type: template
                entity: button.ardena_publish_sensors
                icon: mdi:gesture-tap-button
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.ardena
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:decluttering-card
                template: computer_power
                variables:
                  - computer: ardena
              - type: conditional
                conditions:
                  - entity: binary_sensor.ardena_connected
                    state: 'on'
                card:
                  type: custom:decluttering-card
                  template: computer_apps
                  variables:
                    - computer: ardena
              - type: conditional
                conditions:
                  - entity: media_player.ardena
                    state_not: unavailable
                  - entity: media_player.ardena
                    state_not: unknown
                  - entity: media_player.ardena
                    state_not: 'off'
                card:
                  type: custom:bubble-card
                  card_type: media-player
                  card_layout: large
                  entity: media_player.ardena
                  styles: ".bubble-media-player-container {\n  border-radius: var(--ha-card-border-radius,\
                    \ 12px) !important;\n}"
                  hide:
                    power_button: true
              - type: custom:decluttering-card
                template: uptime_card
                variables:
                  - entity: binary_sensor.ardena_connected
                  - name: Ardena Up-Time
                  - icon: mdi:connection
              - type: custom:decluttering-card
                template: four_graphs
                variables:
                  - graph_1_name: CPU
                  - graph_1_icon: mdi:cpu-64-bit
                  - graph_1_entities:
                      - entity: sensor.ardena_cpu_load
                        name: Usage
                        color: var(--amber-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.ardena_cpu_clock_speed
                        name: Speed
                        color: var(--lime-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_2_name: GPU
                  - graph_2_icon: mdi:expansion-card
                  - graph_2_entities:
                      - entity: sensor.ardena_gpu_load
                        name: Load
                        color: var(--green-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.ardena_gpu_temperature
                        name: Temperature
                        color: var(--pink-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_3_name: Storage
                  - graph_3_icon: mdi:harddisk
                  - graph_3_entities:
                      - entity: sensor.ardena_storage_c
                        attribute: UsedSpacePercentage
                        unit: '%'
                        name: Win11
                        color: var(--blue-color)
                        show_state: true
                        show_points: false
                  - graph_4_name: RAM
                  - graph_4_icon: mdi:memory
                  - graph_4_entities:
                      - entity: sensor.ardena_memory_usage
                        name: Usage
                        color: var(--purple-color)
                        show_state: true
                        show_points: false
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#computer-athos'
            name: Athos
            icon: mdi:desktop-tower
            button_type: state
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
            entity: binary_sensor.athos_connected
            show_state: false
            show_attribute: false
          - type: custom:mushroom-chips-card
            alignment: end
            chips:
              - type: conditional
                conditions:
                  - entity: binary_sensor.athos_mic_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.athos_mic_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - entity: binary_sensor.athos_webcam_active
                    state: 'on'
                chip:
                  type: entity
                  entity: binary_sensor.athos_webcam_active
                  icon_color: green
                  content_info: none
              - type: conditional
                conditions:
                  - entity: sensor.athos_windows_updates_software_updates
                    state_not: '0'
                  - entity: sensor.athos_windows_updates_software_updates
                    state_not: unavailable
                  - entity: sensor.athos_windows_updates_software_updates
                    state_not: unknown
                chip:
                  type: template
                  entity: sensor.athos_windows_updates_software_updates
                  icon: mdi:arrow-up-bold-circle
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Software Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: athos
                            - entity: sensor.athos_windows_updates_software_updates
              - type: conditional
                conditions:
                  - entity: sensor.athos_windows_updates_driver_updates
                    state_not: '0'
                  - entity: sensor.athos_windows_updates_driver_updates
                    state_not: unavailable
                  - entity: sensor.athos_windows_updates_driver_updates
                    state_not: unknown
                chip:
                  type: template
                  entity: sensor.athos_windows_updates_driver_updates
                  icon: mdi:cog-refresh
                  icon_color: red
                  content: '{{ int(states(entity), 0) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Driver Updates
                        content:
                          type: custom:decluttering-card
                          template: windows_updates_list
                          variables:
                            - computer: athos
                            - entity: sensor.athos_windows_updates_driver_updates
              - type: template
                entity: button.athos_publish_sensors
                icon: mdi:gesture-tap-button
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.athos
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:decluttering-card
                template: computer_power
                variables:
                  - computer: athos
              - type: conditional
                conditions:
                  - entity: binary_sensor.athos_connected
                    state: 'on'
                card:
                  type: custom:decluttering-card
                  template: computer_apps
                  variables:
                    - computer: athos
              - type: conditional
                conditions:
                  - entity: media_player.athos
                    state_not: unavailable
                  - entity: media_player.athos
                    state_not: unknown
                  - entity: media_player.athos
                    state_not: 'off'
                card:
                  type: custom:bubble-card
                  card_type: media-player
                  card_layout: large
                  entity: media_player.athos
                  styles: ".bubble-media-player-container {\n  border-radius: var(--ha-card-border-radius,\
                    \ 12px) !important;\n}"
                  hide:
                    power_button: true
              - type: custom:decluttering-card
                template: uptime_card
                variables:
                  - entity: binary_sensor.athos_connected
                  - name: Athos Up-Time
                  - icon: mdi:connection
              - type: custom:decluttering-card
                template: four_graphs
                variables:
                  - graph_1_name: CPU
                  - graph_1_icon: mdi:cpu-64-bit
                  - graph_1_entities:
                      - entity: sensor.athos_cpu_load
                        name: Usage
                        color: var(--amber-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.athos_cpu_clock_speed
                        name: Speed
                        color: var(--lime-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_2_name: GPU
                  - graph_2_icon: mdi:expansion-card
                  - graph_2_entities:
                      - entity: sensor.athos_gpu_load
                        name: Load
                        color: var(--green-color)
                        show_state: true
                        show_points: false
                      - entity: sensor.athos_gpu_temperature
                        name: Temperature
                        color: var(--pink-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_3_name: Storage
                  - graph_3_icon: mdi:harddisk
                  - graph_3_entities:
                      - entity: sensor.athos_storage_c
                        attribute: UsedSpacePercentage
                        unit: '%'
                        name: Win11
                        color: var(--blue-color)
                        show_state: true
                        show_points: false
                  - graph_4_name: RAM
                  - graph_4_icon: mdi:memory
                  - graph_4_entities:
                      - entity: sensor.athos_memory_usage
                        name: Usage
                        color: var(--purple-color)
                        show_state: true
                        show_points: false
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#computer-magicmirror'
            name: MagicMirror
            icon: mdi:apps
            button_type: slider
            tap_action:
              action: toggle
            double_tap_action:
              action: none
            hold_action:
              action: none
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
            entity: light.magicmirror_monitor
            show_state: true
            show_attribute: true
            show_last_changed: false
            attribute: brightness
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.magicmirror_connected
                        state: 'on'
                    card:
                      type: custom:mushroom-template-card
                      entity: button.magicmirror_shutdown
                      layout: vertical
                      icon: mdi:power
                      icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                        }}'
                      tap_action:
                        action: none
                      hold_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.magicmirror_shutdown
                      card_mod:
                        style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n\
                          }\n"
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.magicmirror_connected
                        state: 'on'
                    card:
                      type: custom:mushroom-template-card
                      entity: button.magicmirror_reboot
                      layout: vertical
                      icon: mdi:refresh
                      icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                        }}'
                      tap_action:
                        action: none
                      hold_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.magicmirror_reboot
                      card_mod:
                        style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n\
                          }\n"
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.magicmirror_connected
                        state: 'on'
                    card:
                      type: custom:mushroom-template-card
                      entity: button.magicmirror_restart
                      layout: vertical
                      icon: mdi:table-refresh
                      icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                        }}'
                      tap_action:
                        action: none
                      hold_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.magicmirror_restart
                      card_mod:
                        style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n\
                          }\n"
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.magicmirror_connected
                        state: 'on'
                    card:
                      type: custom:mushroom-template-card
                      entity: button.magicmirror_refresh
                      layout: vertical
                      icon: mdi:web-refresh
                      icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                        }}'
                      tap_action:
                        action: none
                      hold_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.magicmirror_refresh
                      card_mod:
                        style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n\
                          }\n"
              - type: custom:decluttering-card
                template: uptime_card
                variables:
                  - entity: binary_sensor.magicmirror_connected
                  - name: MagicMirror Up-Time
                  - icon: mdi:connection
              - type: custom:decluttering-card
                template: four_graphs
                variables:
                  - graph_1_name: CPU
                  - graph_1_icon: mdi:cpu-64-bit
                  - graph_1_entities:
                      - entity: sensor.magicmirror_cpu_usage
                        name: Usage
                        color: var(--amber-color)
                        show_state: true
                        show_points: false
                  - graph_2_name: CPU Temp
                  - graph_2_icon: mdi:thermometer-lines
                  - graph_2_entities:
                      - entity: sensor.magicmirror_cpu_thermal_1_temperature
                        name: Temperature
                        color: var(--pink-color)
                        show_state: true
                        show_points: false
                        y_axis: secondary
                  - graph_3_name: Storage
                  - graph_3_icon: mdi:sd
                  - graph_3_entities:
                      - entity: sensor.magicmirror_disk_usage
                        name: Storage
                        color: var(--blue-color)
                        show_state: true
                        show_points: false
                  - graph_4_name: RAM
                  - graph_4_icon: mdi:memory
                  - graph_4_entities:
                      - entity: sensor.magicmirror_memory_usage
                        name: Usage
                        color: var(--purple-color)
                        show_state: true
                        show_points: false
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#computer-quest'
            name: Meta Quest 2
            icon: fab:meta
            button_type: state
            tap_action:
              action: none
            double_tap_action:
              action: none
            hold_action:
              action: none
            margin_top_mobile: -56px
            styles: "#root {\n  border-radius: var(--ha-card-border-radius, 12px)\
              \ !important;\n}\n#header-container {\n  flex-direction: row-reverse;\n\
              }\n#header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
              .bubble-button-card-container {\n  border-radius: var(--ha-card-border-radius,\
              \ 12px) !important;\n}\nbubble-card::after {\n  display: none !important;\n\
              }"
            entity: binary_sensor.quest_interactive
            show_state: true
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:bar-card
                card_mod:
                  style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                    \  text-shadow: 1px 1px var(--primary-background-color);\n}\n"
                name: Quest 2 Battery Level
                entities:
                  - entity: sensor.quest_battery_level
                animation:
                  state: 'on'
                positions:
                  indicator: inside
                decimal: 0
                severity:
                  - color: var(--red-color)
                    from: 0
                    to: 10
                  - color: var(--orange-color)
                    from: 10
                    to: 30
                  - color: var(--amber-color)
                    from: 30
                    to: 50
                  - color: var(--light-green-color)
                    from: 50
                    to: 80
                  - color: var(--green-color)
                    from: 80
                    to: 100
              - type: custom:decluttering-card
                template: four_graphs
                variables:
                  - graph_1_name: WiFi Speed
                  - graph_1_icon: mdi:wifi-arrow-left-right
                  - graph_1_entities:
                      - entity: sensor.quest_wifi_link_speed
                        color: var(--green-color)
                        show_state: false
                        show_points: false
                  - graph_2_name: WiFi Signal
                  - graph_2_icon: mdi:wifi
                  - graph_2_entities:
                      - entity: sensor.quest_wifi_signal_strength
                        color: var(--yellow-color)
                        show_state: false
                        show_points: false
                  - graph_3_name: Storage
                  - graph_3_icon: mdi:sd
                  - graph_3_entities:
                      - entity: sensor.quest_internal_storage
                        name: Storage
                        color: var(--blue-color)
                        show_state: true
                        show_points: false
                  - graph_4_name: Battery Temp
                  - graph_4_icon: mdi:battery-alert
                  - graph_4_entities:
                      - entity: sensor.quest_battery_temperature
                        name: Battery Temp
                        color: var(--red-color)
                        show_state: true
                        show_points: false
            card_mod:
              style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                \ 0;\n}\n"
  - title: Climate
    theme: Backend-selected
    path: climate
    type: custom:masonry-layout
    layout:
      max_cols: 3
    icon: mdi:thermostat-box
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Climate
          - icon: mdi:thermostat-box
          - icon_color: indigo
          - chips:
              - type: template
                entity: sensor.ecobee_mode
                content: '{{ states(entity) }}'
                icon: mdi:thermostat
                icon_color: "{% if is_state(entity, \"Heating\") %}\n  red\n{% elif\
                  \ is_state(entity, \"Cooling\") %}\n  light-blue\n{% elif is_state(entity,\
                  \ \"Fan\") %}\n  amber\n{% elif is_state(entity, \"Off\") %}\n \
                  \ grey\n{% else %}\n  blue-grey\n{% endif %}"
                tap_action:
                  action: more-info
              - type: template
                entity: climate.ecobee_cloud
                icon: mdi:thermostat-cog
                content: '{{ (state_attr(entity, "preset_mode") | replace("_", " ")
                  | title) | default("Home", true) }}'
                tap_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        cards:
          - type: thermostat
            entity: climate.ecobee
            name: ' '
            features:
              - style: icons
                hvac_modes:
                  - 'off'
                  - heat
                  - cool
                  - heat_cool
                type: climate-hvac-modes
              - style: icons
                fan_modes:
                  - 'on'
                  - auto
                type: climate-fan-modes
            show_current_as_primary: true
          - type: thermostat
            entity: climate.ecobee_cloud
            name: ' '
            features:
              - style: icons
                preset_modes:
                  - home
                  - away
                  - sleep
                  - Basement
                type: climate-preset-modes
            show_current_as_primary: true
            card_mod:
              style: "ha-state-control-climate-temperature,\nha-icon-button,\n.title\
                \ {\n  display: none;\n}\n"
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.ecobee_current_temperature
                primary_info: state
                secondary_info: name
                icon_color: green
                name: Temperature
              - type: custom:mushroom-entity-card
                entity: sensor.ecobee_current_humidity
                primary_info: state
                secondary_info: name
                icon_color: blue
                name: Humidity
          - type: custom:history-explorer-card
            cardName: historycard-ecobee-mode
            header: hide
            uiLayout:
              toolbar: hide
              selector: hide
            labelsVisible: false
            labelAreaWidth: 0
            tooltipShowDuration: true
            tooltipSize: slim
            stateTextMode: auto
            stateColors:
              Idle: rgb(100,100,100)
              Cooling: rgb(33,150,243)
              Heating: rgb(244,67,54)
              Fan: rgb(255,235,59)
            graphs:
              - type: timeline
                entities:
                  - entity: sensor.ecobee_mode
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Thermostat
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 2
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - id: temp
                decimals: 0
                min: ~65
                max: ~85
                apex_config:
                  tickAmount: 4
                  title:
                    text: °F
                    rotate: 0
              - id: perc
                opposite: true
                decimals: 0
                min: ~10
                max: ~50
                apex_config:
                  tickAmount: 4
                  forceNiceScale: true
                  title:
                    text: '%'
                    rotate: 0
            series:
              - entity: sensor.ecobee_current_temperature
                name: Indoor Temp
                yaxis_id: temp
                color: rgb(158,158,158)
              - entity: climate.ecobee
                attribute: target_temp_high
                name: Cool Setpoint
                yaxis_id: temp
                unit: °F
                color: rgb(33,150,243)
                stroke_width: 1
              - entity: climate.ecobee
                attribute: target_temp_low
                name: Heat Setpoint
                yaxis_id: temp
                unit: °F
                color: rgb(255,152,0)
                stroke_width: 1
              - entity: climate.ecobee
                attribute: temperature
                name: Setpoint
                yaxis_id: temp
                unit: °F
                color: rgb(33,150,243)
                stroke_width: 1
                type: area
                opacity: 0.2
              - entity: sensor.ecobee_current_humidity
                name: Indoor Humidity
                yaxis_id: perc
                color: rgb(0,150,136)
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Temperatures
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 1
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - decimals: 0
                min: ~65
                max: ~78
                apex_config:
                  tickAmount: 4
                  title:
                    text: °F
                    rotate: 0
            series:
              - entity: sensor.ecobee_current_temperature
                name: Home
                color: rgb(255,152,0)
              - entity: sensor.main_bedroom_temperature
                name: Main
                color: rgb(103,58,183)
              - entity: sensor.ethan_bedroom_temperature
                name: Ethan
                color: rgb(76,175,80)
              - entity: sensor.emma_bedroom_temperature
                name: Emma
                color: rgb(156,39,176)
              - entity: sensor.family_room_temperature
                name: Family Room
                color: rgb(255,235,59)
              - entity: sensor.joshua_office_temperature
                name: Joshua's Office
                color: rgb(33,150,243)
              - entity: sensor.amy_office_temperature
                name: Amy's Office
                color: rgb(0,188,212)
              - entity: sensor.water_main_valve_air_temperature
                name: Utility
                color: rgb(121,85,72)
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 2
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - decimals: 0
                apex_config:
                  tickAmount: 4
                  title:
                    text: °F
                    rotate: 0
            series:
              - entity: sensor.owm_daily_temperature
                name: Outside
                color: rgb(0,188,212)
              - entity: sensor.cold_storage_temperature
                name: Cold Storage
                color: rgb(121,85,72)
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Humidity
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 2
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - decimals: 0
                min: ~10
                max: ~50
                apex_config:
                  tickAmount: 4
                  forceNiceScale: true
                  title:
                    text: '%'
                    rotate: 0
            series:
              - entity: sensor.owm_daily_humidity
                name: Outside
                color: rgb(0,188,212)
              - entity: sensor.cold_storage_humidity
                name: Cold Storage
                color: rgb(121,85,72)
  - title: Lights
    theme: Backend-selected
    path: lights
    type: custom:masonry-layout
    layout:
      max_cols: 3
    icon: mdi:lightbulb-group
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Light Control
          - icon: mdi:lightbulb-group
          - icon_color: amber
          - chips:
              - type: template
                entity: light.all_lights
                icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-group", "mdi:lightbulb-group-off")
                  }}'
                icon_color: '{{ iif(is_state(entity, "on"), "amber", "grey") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Lights
                      content:
                        type: custom:decluttering-card
                        template: light_group_popup
                        variables:
                          - entity: light.all_lights
                hold_action:
                  action: call-service
                  service: light.turn_off
                  target:
                    entity_id: light.all_lights
                card_mod:
                  style:
                    .: "{% if is_state(config.entity, \"on\") %}\nha-card:after {\n\
                      \  content: \"{{ expand(config.entity) | selectattr('state',\
                      \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                      \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                      \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
              - type: template
                entity: fan.all_fans
                icon: '{{ iif(is_state(entity, "on"), "mdi:fan", "mdi:fan-off") }}'
                icon_color: '{{ iif(is_state(entity, "on"), "green", "grey") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: All Fans
                      content:
                        type: custom:vertical-stack-in-card
                        card_mod:
                          style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                            \ 0;\n}\n"
                        cards:
                          - type: custom:auto-entities
                            show_empty: false
                            card:
                              type: custom:layout-card
                              cards: []
                              layout_type: masonry
                            sort:
                              method: friendly_name
                            filter:
                              include:
                                - group: fan.all_fans
                                  options:
                                    type: custom:mushroom-fan-card
                                    layout: horizontal
                                    icon_animation: true
                                    show_percentage_control: true
                                    card_mod:
                                      style: "ha-card {\n  transition: all 0s;\n \
                                        \ padding: 4px 12px !important;\n  border-width:\
                                        \ 0;\n}\n"
                hold_action:
                  action: call-service
                  service: fan.turn_off
                  target:
                    entity_id: fan.all_fans
                card_mod:
                  style:
                    .: "{% if is_state(config.entity, \"on\") %}\nha-card:after {\n\
                      \  content: \"{{ expand(config.entity) | selectattr('state',\
                      \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                      \  color: var(--green-color);\n  font-weight: bolder;\n  top:\
                      \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n\
                      .content {\n  {% if is_state(config.entity, 'on') %}\n    animation:\
                      \ rotation linear infinite;\n    animation-duration: 1s;\n \
                      \ {% endif %}\n}\n@keyframes rotation {\n  100% {\n    transform:\
                      \ rotate(360deg);\n  }\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Living Room
              - chips:
                  - type: template
                    entity: light.living_room_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.living_room
                name: Main
                features:
                  - type: light-brightness
              - features:
                  - type: light-brightness
                type: tile
                entity: light.living_room_fan_light
                name: Fan Light
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.living_room_lamp
                name: Lamp
                features:
                  - type: light-brightness
              - type: tile
                entity: light.living_room_floor_lamp
                name: Floor Lamp
                features:
                  - type: light-brightness
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.front_entry
                name: Entry
                vertical: true
              - type: tile
                entity: light.hallway
                name: Hallway
                vertical: true
          - type: tile
            entity: fan.living_room_ceiling
            name: Fan
            features:
              - type: fan-speed
            card_mod:
              style:
                .: "ha-tile-icon {\n  --tile-color:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n    {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int(0) %}\n    {% if perc == 33 %} var(--green-color)\n    {%\
                  \ elif perc == 66 %} var(--yellow-color)\n    {% else %} var(--orange-color)\n\
                  \    {% endif %}\n    {% else %} var(--state-inactive-color)\n \
                  \   {% endif %};\n}\nha-state-icon {\n  animation:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n      {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int %}\n      {% set base = 'rotation infinite linear' %}\n\
                  \      {% if perc == 33 %} 1s {{base}}\n      {% elif perc == 66\
                  \ %} 0.75s {{base}}\n      {% else  %} 0.66s {{base}}\n      {%\
                  \ endif %}\n    {% else %} none\n    {% endif %};\n}\n@keyframes\
                  \ rotation {\n  0% {transform: rotate(0deg);}\n  100% {transform:\
                  \ rotate(360deg);}\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Kitchen
              - chips:
                  - type: template
                    entity: light.kitchen_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.kitchen
            name: Main
            features:
              - type: light-brightness
          - type: grid
            square: false
            columns: 2
            cards:
              - type: tile
                entity: light.dining_room
                name: Dining
              - type: tile
                entity: switch.grow_light
                name: Grow Light
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Joshua's Office
              - chips:
                  - type: entity
                    entity: switch.adaptive_lighting_adapt_brightness_office
                    icon: mdi:brightness-auto
                    icon_color: amber
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_adapt_color_office
                    icon: mdi:palette
                    icon_color: pink
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_sleep_mode_office
                    icon: mdi:sleep
                    icon_color: cyan
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_office
                    icon_color: green
                    content_info: none
                    tap_action:
                      action: toggle
                  - type: template
                    entity: light.joshua_office_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: grid
            square: false
            columns: 2
            cards:
              - type: tile
                entity: light.joshua_office
                name: Main
                features:
                  - type: light-brightness
                state_content:
                  - brightness
                  - color_temp_kelvin
              - type: tile
                entity: light.joshua_office_lamp
                name: Lamp
                features:
                  - type: light-brightness
                state_content:
                  - brightness
                  - color_temp_kelvin
              - type: tile
                entity: light.wled_joshua_office_desk
                name: Desk
                features:
                  - type: light-brightness
                state_content:
                  - brightness
                  - effect
              - type: tile
                entity: light.joshua_office_shelf_led
                name: Shelf
                vertical: true
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Family Room
              - chips:
                  - type: template
                    entity: light.family_room_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: grid
            square: false
            columns: 2
            cards:
              - type: tile
                entity: light.family_room
                name: Main
                features:
                  - type: light-brightness
              - type: tile
                entity: light.family_room_lamp
                name: Lamp
                features:
                  - type: light-brightness
              - type: tile
                entity: light.stairway
                name: Stairs
                vertical: true
              - type: tile
                entity: light.basement_hallway
                name: Hallway
                features:
                  - type: light-brightness
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Main Bedroom
              - chips:
                  - type: template
                    entity: light.main_bedroom_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.main_bedroom
            name: Main
            features:
              - type: light-brightness
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.main_bedroom_fan
                name: Fan Light
                features:
                  - type: light-brightness
              - type: tile
                entity: light.main_bedroom_floor_lamp
                name: Floor Lamp
                features:
                  - type: light-brightness
          - type: tile
            entity: fan.main_bedroom_ceiling
            name: Fan
            features:
              - type: fan-speed
            card_mod:
              style:
                .: "ha-tile-icon {\n  --tile-color:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n    {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int(0) %}\n    {% if perc == 33 %} var(--green-color)\n    {%\
                  \ elif perc == 66 %} var(--yellow-color)\n    {% else %} var(--orange-color)\n\
                  \    {% endif %}\n    {% else %} var(--state-inactive-color)\n \
                  \   {% endif %};\n}\nha-state-icon {\n  animation:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n      {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int %}\n      {% set base = 'rotation infinite linear' %}\n\
                  \      {% if perc == 33 %} 1s {{base}}\n      {% elif perc == 66\
                  \ %} 0.75s {{base}}\n      {% else  %} 0.66s {{base}}\n      {%\
                  \ endif %}\n    {% else %} none\n    {% endif %};\n}\n@keyframes\
                  \ rotation {\n  0% {transform: rotate(0deg);}\n  100% {transform:\
                  \ rotate(360deg);}\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Ethan's Room
              - chips:
                  - type: template
                    entity: light.ethan_bedroom_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.ethan_bedroom
            name: Main
            features:
              - type: light-brightness
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Emma's Room
              - chips:
                  - type: template
                    entity: light.emma_bedroom_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: tile
            entity: light.emma_bedroom
            name: Main
            features:
              - type: light-brightness
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Amy's Office
          - type: tile
            entity: light.amy_office
            name: Main
            features:
              - type: light-brightness
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Outside
              - chips:
                  - type: template
                    entity: light.outside_lights
                    content: '{{ expand(entity) | selectattr("state", "==", "on")
                      | list | count }} / {{ expand(entity) | list | count }}'
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.outside_entry
                name: Entry
                features:
                  - type: light-brightness
              - features:
                  - type: light-brightness
                type: tile
                entity: light.outside_garage
                name: Garage Front
          - type: horizontal-stack
            cards:
              - type: tile
                entity: light.outside_side
                name: Side
                vertical: true
              - type: tile
                entity: light.outside_back
                name: Back
                vertical: true
              - type: tile
                entity: light.garage
                name: Garage
                vertical: true
      - type: vertical-stack
        cards:
          - type: conditional
            conditions:
              - entity: binary_sensor.is_xmas
                state: 'on'
            card:
              type: vertical-stack
              cards:
                - type: custom:mushroom-title-card
                  title: XMas
                - type: grid
                  columns: 3
                  square: false
                  cards:
                    - type: tile
                      entity: light.xmas_tree
                      name: Tree
                      icon: mdi:pine-tree
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: light.wled_mario_star_main
                      name: Star
                      icon: mdi:star-face
                      features:
                        - type: light-brightness
                    - type: tile
                      entity: light.eve
                      name: Outside
                      icon: mdi:string-lights
                      vertical: true
  - title: Security
    theme: Backend-selected
    path: security
    type: custom:masonry-layout
    layout:
      max_cols: 2
    icon: mdi:shield
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Security
          - icon: mdi:shield
          - icon_color: green
          - chips:
              - type: template
                entity: lock.front_door
                content: '{% from "util.jinja" import security_count %} {{ iif(security_count()
                  | int == 0, "Secure", "Not Secure") }}'
                icon: '{% from "util.jinja" import security_count %} {{ iif(security_count()
                  | int == 0, "mdi:shield-check", "mdi:shield-alert") }}'
                icon_color: '{% from "util.jinja" import security_count %} {{ iif(security_count()
                  | int == 0, "green", "red") }}'
                tap_action:
                  action: none
                hold_action:
                  action: none
              - type: template
                entity: binary_sensor.all_doors
                card_mod:
                  style:
                    .: "{% if is_state(config.entity, \"on\") %}\nha-card:after {\n\
                      \  content: \"{{ expand(config.entity) | selectattr('state',\
                      \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                      \  color: var(--cyan-color);\n  font-weight: bolder;\n  top:\
                      \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                icon_color: '{{ iif(is_state(entity, "on"), "cyan", "disabled") }}'
                icon: '{{ iif(is_state(entity, "on"), "mdi:door-open", "mdi:door")
                  }}'
                tap_action:
                  action: none
              - type: template
                entity: input_boolean.guest_mode
                icon: '{{ iif(is_state(entity, "on"), "mdi:account-question", "mdi:account-question-outline")
                  }}'
                icon_color: '{{ iif(is_state(entity, "on"), "green", "disabled") }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
              - type: template
                icon: mdi:chart-gantt
                icon_color: light-green
                tap_action:
                  action: navigate
                  navigation_path: frigate
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Doors
              - chips:
                  - type: template
                    entity: input_boolean.door_open_alerts
                    icon: mdi:door-open
                    icon_color: "{% if is_state(entity, \"off\") %}\n  yellow\n{%\
                      \ else %}\n  green\n{% endif %}"
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
                    card_mod:
                      style: "ha-card {\n  {%- if is_state(config.entity, \"off\"\
                        ) -%}\n  animation: ping 2s infinite;\n  {%- endif -%}\n}\n\
                        @keyframes ping {\n  0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-yellow),\
                        \ 0.7); }\n  100% { box-shadow: 0 0 5px 15px transparent;\
                        \ }\n}\n"
                  - type: template
                    entity: input_boolean.garage_door_open_alerts
                    icon: mdi:garage-variant
                    icon_color: "{% if is_state(entity, \"off\") %}\n  yellow\n{%\
                      \ else %}\n  green\n{% endif %}"
                    tap_action:
                      action: more-info
                    hold_action:
                      action: toggle
                    card_mod:
                      style: "ha-card {\n  {%- if is_state(config.entity, \"off\"\
                        ) -%}\n  animation: ping 2s infinite;\n  {%- endif -%}\n}\n\
                        @keyframes ping {\n  0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-yellow),\
                        \ 0.7); }\n  100% { box-shadow: 0 0 5px 15px transparent;\
                        \ }\n}\n"
          - type: grid
            square: false
            columns: 2
            cards:
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:mushroom-template-card
                    entity: binary_sensor.front_door_window_door_is_open
                    primary: Front Door
                    secondary: "{% from \"util.jinja\" import nominal_change_history\
                      \ %} {% if is_state(entity, \"on\") -%}\n  Open\n{% endif -%}\
                      \ {% if is_state(\"lock.front_door\", \"unlocked\") -%}\n  Unlocked\n\
                      {% else -%}\n  Locked\n{% endif -%} ⸱ {{ nominal_change_history(entity)\
                      \ }}"
                    icon: "{% if is_state(entity, \"on\") %}\n  mdi:door-open\n{%\
                      \ elif is_state(\"lock.front_door\", \"unlocked\") and is_state(entity,\
                      \ \"off\") %}\n  mdi:door-closed\n{% elif is_state(\"lock.front_door\"\
                      , \"locked\") and is_state(entity, \"off\") %}\n  mdi:door-closed-lock\n\
                      {% endif %}"
                    icon_color: "{% if is_state(entity, \"on\") %}\n  red\n{% elif\
                      \ is_state(\"lock.front_door\", \"unlocked\") and is_state(entity,\
                      \ \"off\") %}\n  yellow\n{% elif is_state(\"lock.front_door\"\
                      , \"locked\") and is_state(entity, \"off\") %}\n  green\n{%\
                      \ endif %}"
                    tap_action:
                      action: more-info
                    hold_action:
                      action: fire-dom-event
                      browser_mod:
                        data:
                          entity: sensor.front_door_battery_level
                        service: browser_mod.more_info
                    card_mod:
                      style:
                        mushroom-shape-icon$: "{% set battery_entity = \"sensor.front_door_battery_level\"\
                          \ %} {% if (states(battery_entity) | int) <= 60 %} {% from\
                          \ \"util.jinja\" import battery_color %} .shape {\n  /*\
                          \ Radial progress bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                          \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                          \ battery_color(battery_entity) }}-color) {{ states(battery_entity)\
                          \ }}% 0%, var(--card-background-color) 0% 100%\n  );\n}\
                          \ .shape:after {\n  /* Add back icon shape */\n  content:\
                          \ \"\";\n  height: 100%;\n  width: 100%;\n  position: absolute;\n\
                          \  border-radius: var(--icon-border-radius);\n  background:\
                          \ var(--shape-color);\n} {% endif %}"
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 65px auto
                      grid-template-rows: auto
                      margin: 0 -2px -10px -2px
                      padding: 0
                    cards:
                      - type: custom:mushroom-template-card
                        entity: sensor.front_door_battery_level
                        icon: mdi:lock-smart
                        icon_color: disabled
                        tap_action:
                          action: navigate
                          navigation_path: /lock-admin/front-door
                        hold_action:
                          action: fire-dom-event
                          browser_mod:
                            data:
                              entity: sensor.front_door_battery_level
                            service: browser_mod.more_info
                        card_mod:
                          style:
                            .: "ha-card {\n  --icon-size: 42px;\n  --ha-card-box-shadow:\
                              \ none;\n  --ha-card-border-width: 0;\n}\n"
                            mushroom-shape-icon$: "{% set timer = \"timer.keymaster_front_door_autolock\"\
                              \ %} {% if state_attr(timer, \"finishes_at\") %} {%\
                              \ set remaining = (as_datetime(state_attr(timer, \"\
                              finishes_at\")) - now()).total_seconds() | int %} {%\
                              \ set duration =\n  (state_attr(timer, \"duration\"\
                              ).split(\":\")[0] | int * 60 * 60)\n  + (state_attr(timer,\
                              \ \"duration\").split(\":\")[1] | int * 60)\n  + (state_attr(timer,\
                              \ \"duration\").split(\":\")[2] | int)\n%} .shape {\n\
                              \  /* Radial progress bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                              \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--red-color)\
                              \ {{ (remaining / duration * 100) | round() }}% 0%,\
                              \ var(--card-background-color) 0% 100%);\n} .shape:after\
                              \ {\n  /* Add back icon shape */\n  content: \"\";\n\
                              \  height: 100%;\n  width: 100%;\n  position: absolute;\n\
                              \  border-radius: var(--icon-border-radius);\n  background:\
                              \ var(--shape-color);\n} {%- endif -%}\n"
                      - type: custom:mushroom-lock-card
                        entity: lock.front_door
                        name: Front Door
                        primary_info: none
                        secondary_info: none
                        icon_type: none
                        card_mod:
                          style:
                            .: "ha-card {\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                              \ 0;\n  background: none;\n}\n"
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:mushroom-template-card
                    entity: binary_sensor.garage_entry_window_door_is_open
                    primary: Garage Entry
                    secondary: "{% from \"util.jinja\" import nominal_change_history\
                      \ %} {% if is_state(entity, \"on\") -%}\n  Open\n{% endif -%}\
                      \ {% if is_state(\"lock.garage_entry\", \"unlocked\") -%}\n\
                      \  Unlocked\n{% else -%}\n  Locked\n{% endif -%} ⸱ {{ nominal_change_history(entity)\
                      \ }}"
                    icon: "{% if is_state(entity, \"on\") %}\n  mdi:door-open\n{%\
                      \ elif is_state(\"lock.garage_entry\", \"unlocked\") and is_state(entity,\
                      \ \"off\") %}\n  mdi:door-closed\n{% elif is_state(\"lock.garage_entry\"\
                      , \"locked\") and is_state(entity, \"off\") %}\n  mdi:door-closed-lock\n\
                      {% endif %}"
                    icon_color: "{% if is_state(entity, \"on\") %}\n  red\n{% elif\
                      \ is_state(\"lock.garage_entry\", \"unlocked\") and is_state(entity,\
                      \ \"off\") %}\n  yellow\n{% elif is_state(\"lock.garage_entry\"\
                      , \"locked\") and is_state(entity, \"off\") %}\n  green\n{%\
                      \ endif %}"
                    tap_action:
                      action: more-info
                    hold_action:
                      action: fire-dom-event
                      browser_mod:
                        data:
                          entity: sensor.garage_entry_battery_level
                        service: browser_mod.more_info
                    card_mod:
                      style:
                        mushroom-shape-icon$: "{% set battery_entity = \"sensor.garage_entry_battery_level\"\
                          \ %} {% if (states(battery_entity) | int) <= 60 %} {% from\
                          \ \"util.jinja\" import battery_color %} .shape {\n  /*\
                          \ Radial progress bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                          \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                          \ battery_color(battery_entity) }}-color) {{ states(battery_entity)\
                          \ }}% 0%, var(--card-background-color) 0% 100%\n  );\n}\
                          \ .shape:after {\n  /* Add back icon shape */\n  content:\
                          \ \"\";\n  height: 100%;\n  width: 100%;\n  position: absolute;\n\
                          \  border-radius: var(--icon-border-radius);\n  background:\
                          \ var(--shape-color);\n} {% endif %}"
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 65px auto
                      grid-template-rows: auto
                      margin: 0 -2px -10px -2px
                      padding: 0
                    cards:
                      - type: custom:mushroom-template-card
                        entity: sensor.garage_entry_battery_level
                        icon: mdi:lock-smart
                        icon_color: disabled
                        tap_action:
                          action: navigate
                          navigation_path: /lock-admin/garage-entry
                        hold_action:
                          action: fire-dom-event
                          browser_mod:
                            data:
                              entity: sensor.garage_entry_battery_level
                            service: browser_mod.more_info
                        card_mod:
                          style:
                            .: "ha-card {\n  --icon-size: 42px;\n  --ha-card-box-shadow:\
                              \ none;\n  --ha-card-border-width: 0;\n}\n"
                            mushroom-shape-icon$: "{% set timer = \"timer.keymaster_garage_entry_autolock\"\
                              \ %} {% if state_attr(timer, \"finishes_at\") %} {%\
                              \ set remaining = (as_datetime(state_attr(timer, \"\
                              finishes_at\")) - now()).total_seconds() | int %} {%\
                              \ set duration =\n  (state_attr(timer, \"duration\"\
                              ).split(\":\")[0] | int * 60 * 60)\n  + (state_attr(timer,\
                              \ \"duration\").split(\":\")[1] | int * 60)\n  + (state_attr(timer,\
                              \ \"duration\").split(\":\")[2] | int)\n%} .shape {\n\
                              \  /* Radial progress bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                              \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--red-color)\
                              \ {{ (remaining / duration * 100) | round() }}% 0%,\
                              \ var(--card-background-color) 0% 100%);\n} .shape:after\
                              \ {\n  /* Add back icon shape */\n  content: \"\";\n\
                              \  height: 100%;\n  width: 100%;\n  position: absolute;\n\
                              \  border-radius: var(--icon-border-radius);\n  background:\
                              \ var(--shape-color);\n} {%- endif -%}\n"
                      - type: custom:mushroom-lock-card
                        entity: lock.garage_entry
                        name: Garage Entry
                        primary_info: none
                        secondary_info: none
                        icon_type: none
                        card_mod:
                          style:
                            .: "ha-card {\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                              \ 0;\n  background: none;\n}\n"
              - type: custom:decluttering-card
                template: door_card
                variables:
                  - name: Sliding Door
                  - entity: binary_sensor.sliding_door_contact
                  - battery_entity: sensor.sliding_door_contact_battery_level
                  - icon: mdi:door-sliding
              - type: custom:decluttering-card
                template: door_card
                variables:
                  - name: Garage Side Door
                  - entity: binary_sensor.garage_side_door_contact_door_is_open
                  - battery_entity: sensor.garage_side_door_contact_battery_level
                  - icon: mdi:door
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:mushroom-template-card
                    entity: cover.garage_door
                    primary: Garage Door
                    secondary: '{% from "util.jinja" import nominal_change_history
                      %} {{ state_translated(entity) }} ⸱ {{ nominal_change_history(entity)
                      }}'
                    icon: "{% if is_state(entity, \"open\") %}\n  mdi:garage-open-variant\n\
                      {% elif states(entity) in [\"opening\", \"closing\"] %}\n  mdi:garage-alert-variant\n\
                      {% elif is_state(entity, \"closed\") %}\n  mdi:garage-variant\n\
                      {% else %}\n  mdi:garage-alert-variant\n{% endif %}"
                    icon_color: "{% if is_state(entity, \"open\") %}\n  red\n{% elif\
                      \ states(entity) in [\"opening\", \"closing\"] %}\n  amber\n\
                      {% elif is_state(entity, \"closed\") %}\n  green\n{% else %}\n\
                      \  red\n{% endif %}"
                    tap_action:
                      action: more-info
                  - type: custom:mushroom-cover-card
                    entity: cover.garage_door
                    name: Garage Door
                    show_buttons_control: true
                    primary_info: none
                    secondary_info: none
                    icon_type: none
                    show_position_control: true
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Cameras
              - chips:
                  - type: template
                    icon: mdi:chart-gantt
                    tap_action:
                      action: navigate
                      navigation_path: frigate
          - type: grid
            square: false
            columns: 2
            cards:
              - type: custom:decluttering-card
                template: camera_card
                variables:
                  - name: Emma
                  - camera: camera.emma
                  - stream: emma
              - type: custom:decluttering-card
                template: camera_card
                variables:
                  - name: Ethan
                  - camera: camera.ethan
                  - stream: ethan
              - type: custom:decluttering-card
                template: camera_card
                variables:
                  - name: Family Room
                  - camera: camera.family_room
                  - stream: familyroom
              - type: custom:decluttering-card
                template: camera_card
                variables:
                  - name: Garage
                  - camera: camera.garage
                  - stream: garage
              - type: picture-elements
                camera_image: camera.doorbell
                show_name: false
                show_state: false
                aspect_ratio: '16:10'
                elements:
                  - type: icon
                    icon: mdi:cctv
                    style:
                      right: 0px
                      top: 20px
                      transform: translate(-50%, -50%) scale(150%)
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Doorbell
                          size: fullscreen
                          content:
                            type: custom:decluttering-card
                            template: camera_popup
                            variables:
                              - camera: camera.doorbell
                              - stream: doorbell
                  - type: state-icon
                    entity: sensor.doorbell_person_count
                    icon: mdi:walk
                    state_color: true
                    style:
                      bottom: -20px
                      right: -20px
                      transform: translate(-50%, -50%)
                    tap_action:
                      action: more-info
                  - type: state-icon
                    entity: binary_sensor.doorbell_camera_motion
                    icon: mdi:motion-sensor
                    state_color: true
                    style:
                      bottom: -20px
                      right: 20px
                      transform: translate(-50%, -50%)
                    tap_action:
                      action: more-info
              - type: vertical-stack
                cards:
                  - type: custom:mushroom-template-card
                    entity: binary_sensor.doorbell_visitor
                    primary: Last Ring
                    secondary: '{% from "util.jinja" import nominal_change_history
                      %} {{ nominal_change_history(entity) }}'
                    icon: mdi:bell-ring
                    icon_color: disabled
                    tap_action:
                      action: more-info
                  - type: custom:mushroom-template-card
                    entity: sensor.doorbell_person_count
                    primary: Last Person
                    secondary: '{% from "util.jinja" import nominal_change_history
                      %} {{ nominal_change_history(entity) }}'
                    icon: mdi:walk
                    icon_color: disabled
                    tap_action:
                      action: more-info
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Occupancy
          - type: grid
            square: false
            columns: 3
            cards:
              - type: custom:decluttering-card
                template: motion_card
                variables:
                  - name: Home
                  - entity: binary_sensor.ecobee_occupancy
              - type: custom:decluttering-card
                template: motion_card
                variables:
                  - name: Kitchen
                  - entity: binary_sensor.kitchen_occupancy
              - type: custom:decluttering-card
                template: motion_card
                variables:
                  - name: Family
                  - entity: binary_sensor.family_room_occupancy
              - type: custom:decluttering-card
                template: motion_card
                variables:
                  - name: Main
                  - entity: binary_sensor.main_bedroom_occupancy
              - type: custom:decluttering-card
                template: motion_card
                variables:
                  - name: Emma
                  - entity: binary_sensor.emma_occupancy
              - type: custom:decluttering-card
                template: motion_card
                variables:
                  - name: Ethan
                  - entity: binary_sensor.ethan_occupancy
              - type: custom:decluttering-card
                template: motion_card
                variables:
                  - name: Amy Office
                  - entity: binary_sensor.amy_office_occupancy
              - type: custom:mushroom-template-card
                entity: binary_sensor.apollo_msr_1_office_radar_target
                primary: Office
                secondary: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  Motion\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  Detected\n{%- else -%}\n  Clear\n{%- endif -%}"
                icon: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"\
                  on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                  \ endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
  - title: Frigate
    subview: true
    path: frigate
    icon: mdi:timeline
    type: panel
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: chip_header
            variables:
              - primary: Frigate Timeline
              - icon: mdi:timeline
              - icon_color: lime
              - back_path: security
          - type: custom:frigate-card
            cameras:
              - camera_entity: camera.doorbell
              - camera_entity: camera.emma
              - camera_entity: camera.ethan
              - camera_entity: camera.family_room
              - camera_entity: camera.garage
            view:
              default: timeline
              camera_select: current
            menu:
              style: outside
              buttons:
                recordings:
                  enabled: true
            timeline:
              style: ribbon
              show_recordings: true
              controls:
                thumbnails:
                  mode: below
              window_seconds: 21600
              media: all
            media_viewer:
              auto_unmute: selected
              transition_effect: slide
            dimensions:
              min_height: 500px
            performance:
              profile: high
  - title: Bambu
    path: bambu
    icon: mdi:printer-3d
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Bambu Lab P1S
          - icon: fapro:bambu-lab
          - icon_color: lime
          - chips:
              - type: template
                entity: light.bambu_p1s_chamber_light
                icon: mdi:lightbulb
                icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled") }}'
              - type: template
                entity: sensor.bambu_p1s_print_status
                icon: mdi:file-tree
                content: "{% if is_state(\"sensor.bambu_p1s_current_stage\", \"idle\"\
                  ) %}\n  {{ state_translated(\"sensor.bambu_p1s_current_stage\")\
                  \ }}\n{% else %}\n  {{ state_translated(entity) }}\n{% endif %}"
                tap_action:
                  action: more-info
              - type: entity
                entity: sensor.bambu_p1s_wi_fi_signal
              - type: template
                entity: binary_sensor.bambu_p1s_hms_errors
                icon: mdi:{{ iif(is_state(entity, "on"), "alert-circle", "check-circle")
                  }}
                icon_color: '{{ iif(is_state(entity, "on"), "red", "green") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Bambu P1S HMS Errors
                      content:
                        type: markdown
                        card_mod:
                          style: "ha-card {\n  --ha-card-background: none\n}\n"
                        content: "{%- set entity_id = \"binary_sensor.bambu_p1s_hms_errors\"\
                          \ -%}\n{%- set errors = namespace(message=[],severity=[],url=[])\
                          \ -%}\n{%- for attribute, value in states[entity_id].attributes.items()\
                          \ -%}\n  {%- if attribute.split('-') | count > 1 -%}\n \
                          \   {%- set id, type = attribute.split('-') -%}\n    {%-\
                          \ if type | count > 1 -%}\n      {%- if type == \"Error\"\
                          \ -%}\n        {% set errors.message = dict(errors.message,\
                          \ **{id: value}) %}\n      {%- endif -%}\n      {%- if type\
                          \ == \"Severity\" -%}\n        {% set errors.severity =\
                          \ dict(errors.severity, **{id: value}) %}\n      {%- endif\
                          \ -%}\n      {%- if type == \"Wiki\" -%}\n        {% set\
                          \ errors.url = dict(errors.url, **{id: value}) %}\n    \
                          \  {%- endif -%}\n    {%- endif -%}\n  {%- endif -%}\n{%-\
                          \ endfor -%}\n{%- set levels = {\n  \"fatal\": \"mdi:alert-decagram\"\
                          ,\n  \"serious\": \"mdi:alert-circle\",\n  \"common\": \"\
                          mdi:minus-circle\",\n  \"info\": \"mdi:information\",\n\
                          \  \"unknown\": \"mdi:help-circle\"\n} -%}\n{% for id in\
                          \ errors.message %}\n<ha-icon icon=\"{{ levels[errors.severity[id]]\
                          \ }}\"></ha-icon> {{ errors.message[id] }}\n<a href=\"{{\
                          \ errors.url[id] }}\">Support</a>\n{% endfor %}"
      - type: vertical-stack
        cards:
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:mushroom-template-card
                primary: Power
                secondary: Press and hold to power {{ iif(is_state(entity, "on"),
                  "off", "on") }}
                entity: switch.bambu_p1s
                icon: mdi:power{{ iif(is_state(entity, "off"), "-off", "") }}
                icon_color: '{{ iif(is_state(entity, "on"), "green", "red") }}'
                tap_action:
                  action: none
                hold_action:
                  action: toggle
                card_mod:
                  style: ":host {\n  --mush-card-primary-font-size: 16px;\n  --mush-card-secondary-font-size:\
                    \ 13px;\n  --mush-icon-size: 2.84em;\n  --mush-icon-symbol-size:\
                    \ 1.3em;\n}\nha-card {\n  transition: all 0s;\n  padding-bottom:\
                    \ 0 !important;\n}\nmushroom-shape-icon {\n  position: absolute;\n\
                    \  top: -57px;\n  left: -40px;\n}\nmushroom-state-info {\n  padding-left:\
                    \ 64px;\n  z-index: 1;\n}\n"
              - type: custom:mushroom-chips-card
                alignment: end
                chips:
                  - type: entity
                    entity: sensor.bambu_p1s_power
                  - type: entity
                    entity: sensor.bambu_p1s_energy
                card_mod:
                  style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background:\
                    \ rgba(var(--rgb-disabled), 0.1);\n  --chip-border-width: 0;\n\
                    \  --chip-spacing: 1px;\n  margin-right: calc(var(--ha-card-border-radius,\
                    \ 12px) / 2);\n}\n"
          - type: custom:tabbed-card
            styles:
              --mdc-theme-primary: var(--primary-color)
            attributes:
              isMinWidthIndicator: true
            tabs:
              - card:
                  show_state: false
                  show_name: false
                  camera_view: live
                  type: picture-entity
                  entity: image.bambu_p1s_camera
                attributes:
                  icon: mdi:camera-document
                  label: Camera
              - card:
                  type: picture-entity
                  entity: image.bambu_p1s_cover_image
                  camera_view: live
                  show_name: false
                  show_state: false
                attributes:
                  icon: mdi:cube-outline
                  label: Model
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: sensor.bambu_p1s_print_status
                    state: running
                  - condition: state
                    entity: sensor.bambu_p1s_print_status
                    state: pause
            card:
              type: horizontal-stack
              cards:
                - type: conditional
                  conditions:
                    - condition: state
                      entity: sensor.bambu_p1s_print_status
                      state: running
                  card:
                    type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_print_status
                    icon: mdi:pause
                    icon_color: yellow
                    layout: vertical
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      service_data:
                        entity_id: button.bambu_p1s_pause_printing
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                          \  margin-top: 10px;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  box-shadow: 0 0 1px 15px\
                          \ rgba(var(--rgb-yellow), 0.1) !important;\n}\n"
                - type: conditional
                  conditions:
                    - condition: state
                      entity: sensor.bambu_p1s_print_status
                      state: pause
                  card:
                    type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_print_status
                    icon: mdi:play
                    icon_color: green
                    layout: vertical
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      data: {}
                      target:
                        entity_id: button.bambu_p1s_resume_printing
                    card_mod:
                      style:
                        .: "ha-card {\n    --ha-card-background: none;\n    --ha-card-box-shadow:\
                          \ none;\n    --ha-card-border-width: 0;\n    --icon-size:\
                          \ 48px;\n    margin-top: 10px;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  box-shadow: 0 0 1px 15px\
                          \ rgba(var(--rgb-green), 0.1) !important;\n}\n"
                - type: conditional
                  conditions:
                    - condition: or
                      conditions:
                        - condition: state
                          entity: sensor.bambu_p1s_print_status
                          state: running
                        - condition: state
                          entity: sensor.bambu_p1s_print_status
                          state: pause
                  card:
                    type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_print_status
                    icon: mdi:stop
                    icon_color: red
                    layout: vertical
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      data: {}
                      target:
                        entity_id: button.bambu_p1s_stop_printing
                    card_mod:
                      style:
                        .: "ha-card {\n    --ha-card-background: none;\n    --ha-card-box-shadow:\
                          \ none;\n    --ha-card-border-width: 0;\n    --icon-size:\
                          \ 48px;\n    margin-top: 10px;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  box-shadow: 0 0 1px 15px\
                          \ rgba(var(--rgb-red), 0.1) !important;\n}\n"
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: sensor.bambu_p1s_print_status
                    state: running
                  - condition: state
                    entity: sensor.bambu_p1s_print_status
                    state: pause
            card:
              type: horizontal-stack
              cards:
                - type: custom:mushroom-template-card
                  entity: select.bambu_p1s_printing_speed
                  primary: Silent
                  icon: mdi:speedometer-slow
                  icon_color: '{{ iif(is_state(entity, "silent"), "yellow", "disabled")
                    }}'
                  layout: vertical
                  tap_action:
                    action: none
                  hold_action:
                    action: call-service
                    service: select.select_option
                    data:
                      option: silent
                    target:
                      entity_id: select.bambu_p1s_printing_speed
                  card_mod:
                    style:
                      .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                        \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                        \  margin-top: 10px;\n}\n"
                - type: custom:mushroom-template-card
                  entity: select.bambu_p1s_printing_speed
                  primary: Standard
                  icon: mdi:speedometer-medium
                  icon_color: '{{ iif(is_state(entity, "standard"), "yellow", "disabled")
                    }}'
                  layout: vertical
                  tap_action:
                    action: none
                  hold_action:
                    action: call-service
                    service: select.select_option
                    data:
                      option: standard
                    target:
                      entity_id: select.bambu_p1s_printing_speed
                  card_mod:
                    style:
                      .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                        \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                        \  margin-top: 10px;\n}\n"
                - type: custom:mushroom-template-card
                  entity: select.bambu_p1s_printing_speed
                  primary: Sport
                  icon: mdi:speedometer
                  icon_color: '{{ iif(is_state(entity, "sport"), "yellow", "disabled")
                    }}'
                  layout: vertical
                  tap_action:
                    action: none
                  hold_action:
                    action: call-service
                    service: select.select_option
                    data:
                      option: sport
                    target:
                      entity_id: select.bambu_p1s_printing_speed
                  card_mod:
                    style:
                      .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                        \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                        \  margin-top: 10px;\n}\n"
                - type: custom:mushroom-template-card
                  entity: select.bambu_p1s_printing_speed
                  primary: Ludicrous
                  icon: mdi:play-speed
                  icon_color: '{{ iif(is_state(entity, "ludicrous"), "yellow", "disabled")
                    }}'
                  layout: vertical
                  tap_action:
                    action: none
                  hold_action:
                    action: call-service
                    service: select.select_option
                    data:
                      option: ludicrous
                    target:
                      entity_id: select.bambu_p1s_printing_speed
                  card_mod:
                    style:
                      .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                        \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                        \  margin-top: 10px;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 20% 80%
                  grid-template-rows: auto
                  grid-template-areas: '"ext ams"'
                  reflow: true
                  margin: 0
                  padding: 0
                cards:
                  - type: custom:mushroom-title-card
                    title: EXT
                  - type: custom:decluttering-card
                    template: title_chips
                    variables:
                      - title: AMS
                      - chips:
                          - type: template
                            entity: sensor.bambu_p1s_ams_humidity_index
                            content: '{{ states(entity) }}'
                            icon: mdi:water-opacity
                            icon_color: "{% if is_state(entity, \"1\") %}\n  green\n\
                              {% elif is_state(entity, \"2\") %}\n  light-green\n\
                              {% elif is_state(entity, \"3\") %}\n  yellow\n{% elif\
                              \ is_state(entity, \"4\") %}\n  orange\n{% elif is_state(entity,\
                              \ \"5\") %}\n  red\n{% else %}\n  grey\n{% endif %}"
                            tap_action:
                              action: more-info
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 20% 80%
                      grid-template-rows: auto
                      grid-template-areas: '"ext ams"'
                      reflow: true
                      margin: 0
                      padding: 0
                    cards:
                      - type: horizontal-stack
                        cards:
                          - type: custom:mushroom-template-card
                            entity: sensor.bambu_p1s_external_spool_external_spool
                            secondary: '{{ state_translated(entity) }}'
                            multiline_secondary: true
                            icon: mdi:circle-slice-8
                            icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                              ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                              \ \"color\") }}\n{%- endif -%}"
                            layout: vertical
                            tap_action:
                              action: more-info
                            card_mod:
                              style:
                                .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                                  \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                                  \ 48px;\n  margin-top: 10px;\n}\n"
                                mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                                  \ \"active\", true) %}\n  --shape-animation: ping\
                                  \ 2s infinite;\n  {% elif states(config.entity)\
                                  \ not in [\"Empty\", \"unknown\"] %}\n  box-shadow:\
                                  \ 0 0 1px 15px rgba(111,111,111, 0.2) !important;\n\
                                  \  {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                                  \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100%\
                                  \ { box-shadow: 0 0 1px 15px transparent; }\n}\n"
                      - type: horizontal-stack
                        cards:
                          - type: custom:mushroom-template-card
                            entity: sensor.bambu_p1s_ams_tray_1
                            secondary: '{{ state_translated(entity) }}'
                            multiline_secondary: true
                            icon: mdi:circle-slice-8
                            icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                              ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                              \ \"color\") }}\n{%- endif -%}"
                            layout: vertical
                            tap_action:
                              action: more-info
                            card_mod:
                              style:
                                .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                                  \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                                  \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                                  \ and states(config.entity) not in [\"Empty\", \"\
                                  unknown\"] %}\nha-card:after {\n  content: \"{{\
                                  \ state_attr(config.entity, \"remain\") }}%\";\n\
                                  \  position: absolute;\n  font-weight: bolder;\n\
                                  \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                                  }\n{% endif %}\n"
                                mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                                  \ \"active\", true) %}\n  --shape-animation: ping\
                                  \ 2s infinite;\n  {% elif states(config.entity)\
                                  \ not in [\"Empty\", \"unknown\"] %}\n  box-shadow:\
                                  \ 0 0 1px 15px rgba(111,111,111, 0.2) !important;\n\
                                  \  {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                                  \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100%\
                                  \ { box-shadow: 0 0 1px 15px transparent; }\n}\n"
                          - type: custom:mushroom-template-card
                            entity: sensor.bambu_p1s_ams_tray_2
                            secondary: '{{ state_translated(entity) }}'
                            multiline_secondary: true
                            icon: mdi:circle-slice-8
                            icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                              ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                              \ \"color\") }}\n{%- endif -%}"
                            layout: vertical
                            tap_action:
                              action: more-info
                            card_mod:
                              style:
                                .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                                  \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                                  \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                                  \ and states(config.entity) not in [\"Empty\", \"\
                                  unknown\"] %}\nha-card:after {\n  content: \"{{\
                                  \ state_attr(config.entity, \"remain\") }}%\";\n\
                                  \  position: absolute;\n  font-weight: bolder;\n\
                                  \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                                  }\n{% endif %}\n"
                                mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                                  \ \"active\", true) %}\n  --shape-animation: ping\
                                  \ 2s infinite;\n  {% elif states(config.entity)\
                                  \ not in [\"Empty\", \"unknown\"] %}\n  box-shadow:\
                                  \ 0 0 1px 15px rgba(111,111,111, 0.2) !important;\n\
                                  \  {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                                  \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100%\
                                  \ { box-shadow: 0 0 1px 15px transparent; }\n}\n"
                          - type: custom:mushroom-template-card
                            entity: sensor.bambu_p1s_ams_tray_3
                            secondary: '{{ state_translated(entity) }}'
                            multiline_secondary: true
                            icon: mdi:circle-slice-8
                            icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                              ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                              \ \"color\") }}\n{%- endif -%}"
                            layout: vertical
                            tap_action:
                              action: more-info
                            card_mod:
                              style:
                                .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                                  \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                                  \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                                  \ and states(config.entity) not in [\"Empty\", \"\
                                  unknown\"] %}\nha-card:after {\n  content: \"{{\
                                  \ state_attr(config.entity, \"remain\") }}%\";\n\
                                  \  position: absolute;\n  font-weight: bolder;\n\
                                  \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                                  }\n{% endif %}\n"
                                mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                                  \ \"active\", true) %}\n  --shape-animation: ping\
                                  \ 2s infinite;\n  {% elif states(config.entity)\
                                  \ not in [\"Empty\", \"unknown\"] %}\n  box-shadow:\
                                  \ 0 0 1px 15px rgba(111,111,111, 0.2) !important;\n\
                                  \  {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                                  \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100%\
                                  \ { box-shadow: 0 0 1px 15px transparent; }\n}\n"
                          - type: custom:mushroom-template-card
                            entity: sensor.bambu_p1s_ams_tray_4
                            secondary: '{{ state_translated(entity) }}'
                            multiline_secondary: true
                            icon: mdi:circle-slice-8
                            icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                              ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                              \ \"color\") }}\n{%- endif -%}"
                            layout: vertical
                            tap_action:
                              action: more-info
                            card_mod:
                              style:
                                .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                                  \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                                  \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                                  \ and states(config.entity) not in [\"Empty\", \"\
                                  unknown\"] %}\nha-card:after {\n  content: \"{{\
                                  \ state_attr(config.entity, \"remain\") }}%\";\n\
                                  \  position: absolute;\n  font-weight: bolder;\n\
                                  \  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                                  }\n{% endif %}\n"
                                mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                                  \ \"active\", true) %}\n  --shape-animation: ping\
                                  \ 2s infinite;\n  {% elif states(config.entity)\
                                  \ not in [\"Empty\", \"unknown\"] %}\n  box-shadow:\
                                  \ 0 0 1px 15px rgba(111,111,111, 0.2) !important;\n\
                                  \  {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                                  \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100%\
                                  \ { box-shadow: 0 0 1px 15px transparent; }\n}\n"
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Printer
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.bambu_p1s_task_name
                name: Task
                secondary_info: name
                primary_info: state
              - type: custom:mushroom-entity-card
                entity: sensor.bambu_p1s_current_stage
                name: Stage
                icon_color: green
                icon: mdi:printer-3d-nozzle
                primary_info: state
                secondary_info: name
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_start_time
                    icon: mdi:clock-start
                    icon_color: blue
                    primary: "{%- from \"util.jinja\" import custom_timedelta -%}\n\
                      {%- if has_value(entity) -%}\n  {%- set time = as_local(states(entity)\
                      \ | as_datetime) -%}\n  {{ custom_timedelta(time) }}\n{%- endif\
                      \ -%}"
                    secondary: Start Time
                    tap_action:
                      action: more-info
                  - type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_end_time
                    icon: mdi:clock-end
                    icon_color: blue
                    primary: "{%- from \"util.jinja\" import custom_timedelta -%}\n\
                      {%- if has_value(entity) -%}\n  {%- set time = as_local(states(entity)\
                      \ | as_datetime) -%}\n  {{ custom_timedelta(time) }}\n{%- endif\
                      \ -%}"
                    secondary: End Time
                    tap_action:
                      action: more-info
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 205px auto
                  margin: -4px -4px -8px -4px
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:mushroom-template-card
                        primary: '{{ states(''sensor.bambu_p1s_current_layer'') }}
                          / {{ states(''sensor.bambu_p1s_total_layer_count'') }}'
                        secondary: Layer
                        icon: mdi:layers
                        icon_color: lime
                        tap_action:
                          action: none
                      - type: custom:mushroom-entity-card
                        entity: sensor.bambu_p1s_print_weight
                        name: Filament Weight
                        primary_info: state
                        secondary_info: name
                      - type: custom:mushroom-entity-card
                        entity: sensor.bambu_p1s_print_length
                        name: Filament Length
                        primary_info: state
                        secondary_info: name
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:apexcharts-card
                        header:
                          show: false
                        series:
                          - entity: sensor.bambu_p1s_print_progress
                            name: Job Progress
                            color: rgb(3, 169, 244)
                            show:
                              legend_value: false
                        chart_type: radialBar
                        apex_config:
                          legend:
                            show: false
                          chart:
                            height: 250px
                          plotOptions:
                            radialBar:
                              hollow:
                                size: 60%
                              dataLabels:
                                name:
                                  show: false
                                value:
                                  show: false
                              track:
                                strokeWidth: 80%
                                margin: 0
                          fill:
                            type: gradient
                            gradient:
                              shade: light
                              type: horizontal
                              shadeIntensity: 0.3
                              inverseColors: false
                              opacityFrom: 1
                              opacityTo: 1
                              stops:
                                - 0
                                - 50
                                - 55
                                - 90
                      - type: custom:mushroom-entity-card
                        entity: sensor.bambu_p1s_print_progress
                        primary_info: state
                        secondary_info: name
                        name: Job Progress
                        icon_color: light-blue
                        layout: vertical
                        card_mod:
                          style: "ha-card {\n  border-radius: 50% !important;\n  background:\
                            \ none;\n  margin-top: -175px;\n  width: 110px;\n  margin-left:\
                            \ auto;\n  margin-right: auto;\n}\n"
                    card_mod:
                      style: "ha-card {\n  height: 238px;\n}\n"
            card_mod:
              style: "ha-card > div {\n  --ha-card-border-width: 0;\n}\n"
      - type: vertical-stack
        cards:
          - type: custom:decluttering-card
            template: title_chips
            variables:
              - title: Fans
              - chips:
                  - type: template
                    entity: sensor.bambu_p1s_heatbreak_fan_speed
                    icon: mdi:fan
                    icon_color: '{{ iif(is_state(entity, "100"), "green", "disabled")
                      }}'
                    tap_action:
                      action: more-info
                    card_mod:
                      style:
                        .: ".content {\n  {% if is_state(config.entity, '100') %}\n\
                          \    animation: rotation linear infinite;\n    animation-duration:\
                          \ 1s;\n  {% endif %}\n}\n@keyframes rotation {\n  100% {\n\
                          \    transform: rotate(360deg);\n  }\n}\n"
          - type: conditional
            conditions:
              - condition: state
                entity: fan.bambu_p1s_aux_fan
                state_not: unavailable
              - condition: state
                entity: sensor.bambu_p1s_aux_fan
                state_not: unknown
            card:
              type: custom:mushroom-fan-card
              entity: fan.bambu_p1s_aux_fan
              name: Aux Fan
              icon_animation: true
              show_percentage_control: true
              fill_container: false
              layout: horizontal
          - type: conditional
            card:
              type: custom:mushroom-fan-card
              entity: fan.bambu_p1s_chamber_fan
              name: Chamber Fan
              icon_animation: true
              show_percentage_control: true
              fill_container: false
              layout: horizontal
            conditions:
              - condition: state
                entity: fan.bambu_p1s_chamber_fan
                state_not: unavailable
              - condition: state
                entity: sensor.bambu_p1s_chamber_fan
                state_not: unknown
          - type: conditional
            card:
              type: custom:mushroom-fan-card
              entity: fan.bambu_p1s_cooling_fan
              name: Part Cooling Fan
              icon_animation: true
              show_percentage_control: true
              fill_container: false
              layout: horizontal
            conditions:
              - condition: state
                entity: fan.bambu_p1s_cooling_fan
                state_not: unavailable
              - condition: state
                entity: sensor.bambu_p1s_cooling_fan
                state_not: unknown
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Temperature
          - type: custom:apexcharts-card
            card_mod:
              style: "ha-card {\n  padding: 0px;\n  border: none;\n  box-shadow: none;\n\
                \  margin-bottom: -15px;\n}\n.apexcharts-tooltip-series-group {\n\
                \  padding-top: 0px !important;\n  padding-bottom: 0px !important;\n\
                \  margin-top: 0px !important;\n  margin-bottom: 0px !important;\n\
                \  display: none;\n  text-align: left;\n  justify-content: left;\n\
                \  align-items: center;\n}\n"
            apex_config:
              chart:
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              legend:
                show: false
              tooltip:
                shared: true
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            all_series_config:
              stroke_width: 3
              extend_to: now
              float_precision: 2
              curve: stepline
            brush:
              selection_span: 1h
              apex_config:
                chart:
                  foreColor: '#7B7B7B'
                  toolbar:
                    show: false
                grid:
                  borderColor: '#7B7B7B'
                xaxis:
                  tooltip:
                    enabled: false
            series:
              - entity: sensor.bambu_p1s_nozzle_temperature
                name: Nozzle
                color: rgb(244,67,54)
                show:
                  in_brush: true
              - entity: sensor.bambu_p1s_nozzle_target_temperature
                name: Nozzle Target
                type: area
                opacity: 0.2
                stroke_width: 1
                color: rgb(255,235,59)
              - entity: sensor.bambu_p1s_bed_temperature
                name: Bed
                color: rgb(3,169,244)
                show:
                  in_brush: true
              - entity: sensor.bambu_p1s_target_bed_temperature
                name: Bed Target
                type: area
                opacity: 0.2
                stroke_width: 1
                color: rgb(233,30,99)
    type: custom:masonry-layout
    sections: []
    layout:
      max_cols: 2
  - title: Power
    theme: Backend-selected
    path: power
    type: custom:masonry-layout
    layout:
      max_cols: 2
    icon: mdi:power-plug
    badges: []
    cards:
      - type: custom:decluttering-card
        template: chip_header
        variables:
          - primary: Power
          - icon: mdi:power-plug
          - icon_color: red
          - chips:
              - type: template
                entity: sensor.sol_ark_grid_net_monthly
                content: '{{ int(states(entity), 0) }} kWh'
                icon: mdi:power-plug
                tap_action:
                  action: more-info
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Cost
          - type: grid
            square: false
            columns: 3
            cards:
              - type: custom:mushroom-template-card
                entity: sensor.minute_power_cost
                primary: '{{ "${:.2f}".format(float(states(entity), 0)) }}'
                secondary: Minute
                tap_action:
                  action: more-info
                card_mod:
                  style:
                    mushroom-state-info$: ".container {\n  --card-primary-line-height:\
                      \ 1em;\n  --card-primary-font-size: 30px;\n}\n.primary {\n \
                      \ font-family: \"Segoe UI Variable Static Text\", \"Segoe UI\"\
                      , SegoeUI, -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\n\
                      \  font-weight: 100 !important;\n}\n"
              - type: custom:mushroom-template-card
                entity: sensor.day_power_cost
                primary: '{{ "${:.2f}".format(float(states(entity), 0)) }}'
                secondary: Day
                tap_action:
                  action: more-info
                card_mod:
                  style:
                    mushroom-state-info$: ".container {\n  --card-primary-line-height:\
                      \ 1em;\n  --card-primary-font-size: 30px;\n}\n.primary {\n \
                      \ font-family: \"Segoe UI Variable Static Text\", \"Segoe UI\"\
                      , SegoeUI, -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\n\
                      \  font-weight: 100 !important;\n}\n"
              - type: custom:mushroom-template-card
                entity: sensor.month_power_cost
                primary: '{{ "${:.2f}".format(float(states(entity), 0)) }}'
                secondary: Month
                tap_action:
                  action: more-info
                card_mod:
                  style:
                    mushroom-state-info$: ".container {\n  --card-primary-line-height:\
                      \ 1em;\n  --card-primary-font-size: 30px;\n}\n.primary {\n \
                      \ font-family: \"Segoe UI Variable Static Text\", \"Segoe UI\"\
                      , SegoeUI, -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\n\
                      \  font-weight: 100 !important;\n}\n"
          - type: custom:mushroom-template-card
            entity: select.monthly_energy
            primary: "{%- if is_state(entity, \"summer_off_peak\") -%}\n  Summer Off-Peak\n\
              {%- elif is_state(entity, \"summer_peak\") -%}\n  Summer Peak\n{%- elif\
              \ is_state(entity, \"winter_off_peak\") -%}\n  Winter Off-Peak\n{%-\
              \ elif is_state(entity, \"winter_peak\") -%}\n  Winter Peak\n{%- else\
              \ -%}\n  Unknown\n{%- endif -%}"
            secondary: '{{ states("sensor.tariff_price", with_unit=True) }}'
            icon: mdi:transmission-tower
            icon_color: "{%- if is_state(entity, \"summer_off_peak\") -%}\n  yellow\n\
              {%- elif is_state(entity, \"summer_peak\") -%}\n  red\n{%- elif is_state(entity,\
              \ \"winter_off_peak\") -%}\n  blue\n{%- elif is_state(entity, \"winter_peak\"\
              ) -%}\n  deep-orange\n{%- else -%}\n  grey\n{%- endif -%}"
            tap_action:
              action: more-info
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Energy Distribution
          - type: custom:power-flow-card-plus
            entities:
              grid:
                entity: sensor.sol_ark_grid_power
              home:
                entity: sensor.sol_ark_load_power
            clickable_entities: true
            display_zero_lines:
              mode: transparency
              transparency: 80
            dashboard_link: /energy
            dashboard_link_label: Energy Dashboard
            use_new_flow_rate_model: true
            w_decimals: 0
            kw_decimals: 1
            min_flow_rate: 0.75
            max_flow_rate: 6
            max_expected_power: 2000
            watt_threshold: 1000
