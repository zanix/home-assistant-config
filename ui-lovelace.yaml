title: Mechanix
kiosk_mode:
  mobile_settings:
    hide_header: true
    ignore_entity_settings: true
button_card_templates:
  badge:
    show_label: true
    styles:
      grid:
        - grid-template-areas: '"i n" "i l"'
        - grid-template-columns: min-content min-content
        - grid-template-rows: min-content
      card:
        - padding: 0px 8px
        - height: 36px
        - border-radius: var(--ha-badge-border-radius, calc(var(--ha-badge-size, 36px)
            / 2))
      img_cell:
        - justify-content: start
        - width: 26px
        - height: 26px
        - border-radius: 100%
      icon:
        - position: relative
        - width: 18px
        - height: 18px
        - color: var(--grey-color)
      name:
        - justify-self: start
        - align-self: start
        - margin-left: 4px
        - margin-top: 3px
        - padding-right: 4px
        - font-size: 10px
        - font-weight: 500
        - letter-spacing: 0.1px;
        - color: var(--secondary-text-color)
      label:
        - justify-self: start
        - align-self: start
        - margin-left: 4px
        - padding-right: 4px
        - font-size: 12px
        - font-weight: 500
        - letter-spacing: 0.1px;
        - color: var(--primary-text-color)
  computer_tile:
    show_state: true
    custom_fields:
      stat1: "[[[\n  return `<ha-icon icon=\"mdi:motion-play-outline\" style=\"width:\
        \ 24px; height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
        \ Media: <span style=\"color: var(--text-color-sensor);\">${states[variables.media].state\
        \ !== 'unavailable' ? helpers.localize(states[variables.media]) : '?'}</span></span>`\n\
        ]]]"
      stat2: "[[[\n  return `<ha-icon icon=\"mdi:cpu-64-bit\" style=\"width: 24px;\
        \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span> CPU: <span\
        \ style=\"color: var(--text-color-sensor);\">${states[variables.cpu].state\
        \ !== 'unavailable' ? helpers.localize(states[variables.cpu], undefined, 0)\
        \ : '?'}</span></span>`\n]]]"
      stat3: "[[[\n  return `<ha-icon icon=\"mdi:memory\" style=\"width: 24px; height:\
        \ 24px; color: var(--green-color);\"></ha-icon>\n    <span> RAM: <span style=\"\
        color: var(--text-color-sensor);\">${states[variables.ram].state !== 'unavailable'\
        \ ? helpers.localize(states[variables.ram], undefined, 0) : '?'}</span></span>`\n\
        ]]]"
      stat4: "[[[\n  return `<ha-icon icon=\"mdi:expansion-card\" style=\"width: 24px;\
        \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span> GPU: <span\
        \ style=\"color: var(--text-color-sensor);\">${states[variables.gpu].state\
        \ !== 'unavailable' ? helpers.localize(states[variables.gpu], undefined, 0)\
        \ : '?'}</span></span>`\n]]]"
      info: ''
      chips: ''
    styles:
      grid:
        - grid-template-columns: 1fr min-content
        - grid-template-rows: min-content min-content min-content min-content min-content
            min-content min-content;
        - grid-template-areas: '"n i" "s chips" "info chips" "stat1 chips" "stat2
            chips" "stat3 chips" "stat4 chips"'
      card:
        - padding: 22px 8px 22px 22px
      img_cell:
        - justify-content: start
        - align-self: start
        - position: absolute
        - width: 100px
        - height: 100px
        - right: -20px
        - top: -20px
        - border-radius: 50%
        - background: '[[[ if (states[variables.connected].state == ''off'') return
            ''var(--red-color)''; else return ''var(--green-color)'' ]]]'
      icon:
        - width: 60px
        - color: rgba(0, 0, 0, 0.6)
      name:
        - justify-self: start
        - align-self: start
        - font-size: 20px
        - font-weight: 500
        - color: var(--primary-text-color)
      state:
        - min-height: 30px
        - justify-self: start
        - align-self: start
        - font-size: 14px
        - opacity: '0.7'
      custom_fields:
        stat1:
          - padding-bottom: 2px
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.media].state != ''playing'')
              return ''var(--yellow-color)''; ]]]'
        stat2:
          - padding-bottom: 2px
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.cpu].state > 80) return
              ''var(--red-color)''; ]]]'
        stat3:
          - padding-bottom: 2px
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.ram].state > 80) return
              ''var(--red-color)''; ]]]'
        stat4:
          - align-self: start
          - justify-self: start
          - font-size: 14px
          - --text-color-sensor: '[[[ if (states[variables.gpu].state > 80) return
              ''var(--red-color)''; ]]]'
        info:
          - align-self: end
          - justify-self: start
          - text-align: left
        chips:
          - justify-content: end
          - align-self: end
  remote_button_base:
    show_name: false
    styles:
      grid:
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr
        - grid-template-areas: '"i" "n"'
      card:
        - padding: 20px 8px 20px 8px
        - min-height: 102px
        - max-height: 125px
        - max-width: 130px
        - background-color: var(--secondary-background-color)
      img_cell:
        - justify-content: start
        - align-self: start
      icon:
        - --mdc-icon-size: 50px
        - width: 100%
        - color: var(--primary-text-color)
  remote_button_command:
    template: remote_button_base
    variables:
      - command
    tap_action:
      action: call-service
      service: remote.send_command
      target:
        entity_id: '[[[ return entity.entity_id ]]]'
      data:
        command: '[[[ return variables.command ]]]'
  remote_button_media:
    styles:
      grid:
        - grid-template-columns: 1fr
        - grid-template-rows: min-content
        - grid-template-areas: '"i" "n"'
        - align-content: center
      card:
        - padding: 12px 8px 12px 8px
        - height: 90px
        - max-height: 90px
        - max-width: 160px
        - background-color: var(--secondary-background-color)
      img_cell:
        - justify-content: start
        - align-self: start
        - height: 40px
        - width: 40px
        - place-self: start
      icon:
        - width: 100%
        - color: var(--primary-text-color)
      name:
        - margin-top: 8px
        - justify-self: start
        - align-self: start
        - font-size: 14px
        - font-weight: 500
        - color: var(--primary-text-color)
  remote_button_status:
    styles:
      grid:
        - grid-template-columns: 1fr min-content
        - grid-template-rows: min-content 1fr
        - grid-template-areas: '"i status" "n n"'
      card:
        - padding: 26px 8px 20px 8px
        - min-height: 145px
        - max-height: 145px
        - background-color: var(--secondary-background-color)
      img_cell:
        - justify-content: start
        - align-self: start
      icon:
        - --mdc-icon-size: 60px
        - width: 100%
        - color: var(--primary-text-color)
      name:
        - margin-top: 8px
        - justify-self: start
        - align-self: start
        - font-size: 16px
        - font-weight: 500
        - color: var(--primary-text-color)
      custom_fields:
        status:
          - position: absolute
          - right: calc(var(--ha-card-border-radius, 12px) / 2)
          - top: 10px
          - align-self: start
          - justify-self: start
  remote_source:
    template: remote_button_status
    variables:
      - source
      - badge_icon_color
    tap_action:
      action: call-service
      service: media_player.select_source
      target:
        entity_id: '[[[ return entity.entity_id ]]]'
      data:
        source: '[[[ return variables.source ]]]'
    custom_fields:
      status: "[[[\n  if (entity.attributes.source === variables.source)\n    return\
        \ `<ha-icon icon=\"mdi:circle\" style=\"width: 20px; height: 20px; color:\
        \ ${variables.badge_icon_color || 'var(--white-color)'};\"></ha-icon>`;\n\
        ]]]"
  remote_harmony_source:
    template: remote_button_status
    variables:
      - activity
      - badge_icon_color
    tap_action:
      action: call-service
      service: remote.turn_on
      target:
        entity_id: '[[[ return entity.entity_id ]]]'
      data:
        activity: '[[[ return variables.activity ]]]'
    custom_fields:
      status: "[[[\n  if (entity.attributes.current_activity === variables.activity)\n\
        \    return `<ha-icon icon=\"mdi:circle\" style=\"width: 20px; height: 20px;\
        \ color: ${variables.badge_icon_color || 'var(--cyan-color)'};\"></ha-icon>`;\n\
        ]]]"
  remote_sound_mode:
    template: remote_button_status
    variables:
      - sound_mode
      - badge_icon_color
    tap_action:
      action: call-service
      service: media_player.select_sound_mode
      target:
        entity_id: '[[[ return entity.entity_id ]]]'
      data:
        sound_mode: '[[[ return variables.sound_mode ]]]'
    custom_fields:
      status: "[[[\n  if (entity.attributes.sound_mode === variables.sound_mode)\n\
        \    return `<ha-icon icon=\"mdi:circle\" style=\"width: 20px; height: 20px;\
        \ color: ${variables.badge_icon_color || 'var(--cyan-color)'};\"></ha-icon>`;\n\
        ]]]"
  person:
    template: room
    show_entity_picture: true
    variables:
      - icon_color
    custom_fields:
      stat: "[[[\n  if (entity.state) return helpers.localize(entity)\n]]]\n"
    state:
      - value: not_home
        styles:
          card:
            - background-color: rgba(244, 67, 54, 0.2)
      - value: "[[[\n  if (['unknown', 'unavailable'].includes(entity.state)) return\
          \ true; else return false\n]]]\n"
        styles:
          card:
            - background-color: rgba(189, 189, 189, 0.2)
      - value: home
        operator: '!='
        styles:
          card:
            - background-color: rgba(33, 150, 243, 0.2)
    styles:
      img_cell:
        - top: 1px
        - left: 1px
        - width: 65px
        - height: 65px
      icon:
        - position: relative
        - width: 65px
        - height: 65px
  room:
    variables:
      - icon_color
    custom_fields:
      stat: "[[[\n  if (variables.temperature) return helpers.localize(states[variables.temperature],\
        \ undefined, 0, true)\n]]]\n"
      chips-top:
        card:
          type: custom:mushroom-chips-card
          alignment: end
          card_mod:
            style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background: rgba(var(--rgb-disabled),\
              \ 0.1);\n  --chip-border-width: 0;\n  --chip-spacing: 1px;\n}\n"
          chips: '[[[ return variables.chips_top ]]]'
      chips:
        card:
          type: custom:mushroom-chips-card
          alignment: end
          card_mod:
            style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background: rgba(var(--rgb-disabled),\
              \ 0.1);\n  --chip-border-width: 0;\n  --chip-spacing: 1px;\n}\n"
          chips: '[[[ return variables.chips ]]]'
    state:
      - value: 'on'
        styles:
          card:
            - background-color: "[[[\n  return 'rgba(' + variables.icon_color + ',\
                \ 0.2)'\n]]]\n"
    styles:
      grid:
        - grid-template-areas: '"i n chips-top" "i stat stat" "chips chips chips"'
        - grid-template-columns: 65px min-content min-content
        - grid-template-rows: min-content min-content min-content
      card:
        - padding: 10px 0 36px 0
        - height: 100px
      img_cell:
        - justify-content: start
        - position: absolute
        - width: 100px
        - height: 100px
        - left: -20px
        - top: -20px
        - background: "[[[\n  return 'rgba(' + variables.icon_color + ', 0.2)';\n\
            ]]]\n"
        - border-radius: 50%
      icon:
        - position: relative
        - width: 50px
        - height: 50px
        - color: "[[[\n  return 'rgb(' + variables.icon_color + ')';\n]]]\n"
      name:
        - justify-self: start
        - align-self: start
        - font-size: 16px
        - font-weight: 500
        - color: var(--primary-text-color)
        - z-index: 1
      custom_fields:
        stat:
          - justify-self: start
          - font-size: 12px
          - color: var(--primary-text-color)
          - z-index: 1
        chips-top:
          - justify-content: end
          - align-self: start
          - position: absolute
          - top: 2px
          - right: calc(var(--ha-card-border-radius, 12px) / 2)
          - --chip-box-shadow: none
          - --chip-border-width: 0
          - --chip-spacing: 1px
          - z-index: 1
        chips:
          - background: color-mix(in srgb, var(--ha-card-background), transparent
              80%);
          - width: 100%
          - justify-content: end
          - align-self: start
          - position: absolute
          - bottom: 0
          - right: 0
          - padding-right: calc(var(--ha-card-border-radius, 12px) / 2)
          - padding-top: 1px
          - padding-bottom: 1px
          - --chip-box-shadow: none
          - --chip-border-width: 0
          - --chip-spacing: 1px
  vehicle:
    template: room
    show_entity_picture: true
    variables:
      - icon_color
    tap_action:
      action: navigate
      navigation_path: '[[[ return variables?.path ]]]'
    custom_fields:
      stat: "[[[\n  if (variables.odometer) return helpers.localize(states[variables.odometer],\
        \ undefined, 0, true)\n]]]\n"
      timer:
        card:
          type: custom:timer-bar-card
          entity: '[[[ return variables.timer ]]]'
          layout: full_row
          text_width: 0px
          filter: true
          invert: true
          state_color: true
          bar_height: 4px
          bar_direction: rtl
          bar_foreground: var(--lime-color)
          bar_background: var(--disabled-color)
          compressed: true
          tap_action:
            action: navigate
            navigation_path: '[[[ return variables?.path ]]]'
          modifications:
            - remaining: 00:03:00
              bar_foreground: var(--amber-color)
            - remaining: 00:02:00
              bar_foreground: var(--orange-color)
            - remaining: 00:01:00
              bar_foreground: var(--red-color)
    state:
      - value: not_home
        styles:
          card:
            - background-color: rgba(244, 67, 54, 0.2)
      - value: "[[[\n  if (['unknown', 'unavailable'].includes(entity.state)) return\
          \ true; else return false\n]]]\n"
        styles:
          card:
            - background-color: rgba(189, 189, 189, 0.2)
      - value: home
        operator: '!='
        styles:
          card:
            - background-color: rgba(33, 150, 243, 0.2)
    styles:
      grid:
        - grid-template-areas: '"i n chips-top" "i stat stat" "chips chips chips"
            "timer timer timer"'
        - grid-template-columns: 90px min-content min-content
        - grid-template-rows: min-content min-content min-content min-content
      img_cell:
        - top: 1px
        - left: 1px
        - width: 65px
        - height: 65px
        - background: none
      icon:
        - width: 65px
        - height: 65px
      custom_fields:
        timer:
          - justify-content: start
          - align-self: start
          - position: absolute
          - bottom: 20px
          - width: 100%
streamline_templates:
  remote:
    default:
      - sources: []
      - harmony_sources: []
      - sound_buttons: []
    card:
      type: vertical-stack
      cards:
        - type: custom:bubble-card
          card_type: media-player
          entity: '[[media]]'
          cover_background: true
          card_layout: large
          hide:
            volume_button: true
            previous_button: true
            power_button: true
            next_button: true
          styles: "${card.querySelector('.bubble-name').innerText = [\n    (hass.states[entity]?.attributes.media_title\
            \ || \"\"),\n    (hass.states[entity]?.attributes.media_artist || \"\"\
            ),\n    (typeof(hass.states[entity]?.attributes.media_season) !== \"undefined\"\
            \ ? \"S\" + hass.states[entity]?.attributes.media_season : \"\") +\n \
            \   (typeof(hass.states[entity]?.attributes.media_episode) !== \"undefined\"\
            \ ? \"E\" + hass.states[entity]?.attributes.media_episode : \"\"),\n \
            \   (hass.states[entity]?.attributes.media_series_title || \"\")\n  ].filter(n\
            \ => n).join(\" ⸱ \")\n} ${card.querySelector('.bubble-state').innerText\
            \ = [\n    (hass.formatEntityState(hass.states[entity]) || \"\"),\n  \
            \  (hass.states[entity]?.attributes.source || \"\")\n  ].filter(n => n).join(\"\
            \ ⸱ \")\n}"
        - type: custom:tabbed-card
          styles:
            --mdc-theme-primary: var(--state-active-color)
            --mdc-tab-color-default: var(--secondary-text-color)
          attributes:
            minWidth: true
          tabs:
            - attributes:
                icon: mdi:gamepad
              card:
                type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 1fr 1fr 1fr
                  grid-gap: 4px
                  grid-row-gap: 2px
                  margin: 8px 0 0
                  padding: 0
                cards:
                  - type: custom:button-card
                    entity: '[[remote]]'
                    template: remote_button_command
                    icon: '[[[ if(entity.state === "on") return "mdi:power"; else
                      return "mdi:power-off"; ]]]

                      '
                    variables:
                      command: POWER
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - background-color: var(--red-color)
                          icon:
                            - color: var(--black-color)
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:chevron-up
                    variables:
                      command: DPAD_UP
                    styles:
                      icon:
                        - --mdc-icon-size: 60px
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:home
                    variables:
                      command: HOME
                    styles:
                      card:
                        - background: var(--blue-color)
                      icon:
                        - color: var(--black-color)
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:chevron-left
                    variables:
                      command: DPAD_LEFT
                    styles:
                      icon:
                        - --mdc-icon-size: 60px
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:circle-slice-8
                    variables:
                      command: DPAD_CENTER
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:chevron-right
                    variables:
                      command: DPAD_RIGHT
                    styles:
                      icon:
                        - --mdc-icon-size: 60px
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:undo-variant
                    variables:
                      command: BACK
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:chevron-down
                    variables:
                      command: DPAD_DOWN
                    styles:
                      icon:
                        - --mdc-icon-size: 60px
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:menu
                    variables:
                      command: MENU
                  - type: custom:button-card
                    template: remote_button_base
                    entity: '[[remote]]'
                    icon: mdi:volume-mute
                    tap_action:
                      action: call-service
                      service: media_player.volume_mute
                      target:
                        entity_id: '[[media]]'
                  - type: custom:button-card
                    template: remote_button_base
                    entity: '[[media]]'
                    icon: mdi:volume-minus
                    tap_action:
                      action: call-service
                      service: media_player.volume_down
                      target:
                        entity_id: '[[media]]'
                  - type: custom:button-card
                    template: remote_button_base
                    entity: '[[media]]'
                    icon: mdi:volume-plus
                    tap_action:
                      action: call-service
                      service: media_player.volume_up
                      target:
                        entity_id: '[[media]]'
            - attributes:
                icon: mdi:play-circle-outline
              card:
                type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: auto auto
                  grid-gap: 20px
                  grid-row-gap: 2px
                  margin: 8px 0 0
                  padding: 0
                cards:
                  - type: custom:button-card
                    template: remote_button_media
                    entity: '[[media]]'
                    name: Volume Down
                    icon: mdi:volume-minus
                    tap_action:
                      action: call-service
                      service: media_player.volume_down
                      target:
                        entity_id: '[[media]]'
                  - type: custom:button-card
                    template: remote_button_media
                    entity: '[[media]]'
                    name: Volume Up
                    icon: mdi:volume-plus
                    tap_action:
                      action: call-service
                      service: media_player.volume_up
                      target:
                        entity_id: '[[media]]'
                  - type: custom:button-card
                    template: remote_button_media
                    entity: '[[media]]'
                    name: "[[[\n  if (entity.state === \"playing\")\n    return \"\
                      Pause\";\n  else if (entity.state === \"paused\")\n    return\
                      \ \"Play\";\n  else\n    return \"Play/Pause\";\n]]]"
                    icon: "[[[\n  if (entity.state === \"playing\")\n    return \"\
                      mdi:pause\";\n  else if (entity.state === \"paused\")\n    return\
                      \ \"mdi:play\";\n  else\n    return \"mdi:play-pause\";\n]]]"
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        command: MEDIA_PLAY_PAUSE
                    styles:
                      card:
                        - height: 180px
                        - max-height: 180px
                    state:
                      - value: playing
                        styles:
                          card:
                            - background-color: var(--green-color)
                          icon:
                            - color: var(--black-color)
                          name:
                            - color: var(--black-color)
                      - value: paused
                        styles:
                          card:
                            - background-color: var(--yellow-color)
                          icon:
                            - color: var(--black-color)
                          name:
                            - color: var(--black-color)
                  - type: vertical-stack
                    cards:
                      - type: custom:button-card
                        template: remote_button_media
                        entity: '[[media]]'
                        name: Channel Up
                        icon: mdi:arrow-up-drop-circle-outline
                        tap_action:
                          action: call-service
                          service: remote.send_command
                          target:
                            entity_id: '[[remote]]'
                          data:
                            command: CHANNEL_UP
                      - type: custom:button-card
                        template: remote_button_media
                        entity: '[[media]]'
                        name: Channel Down
                        icon: mdi:arrow-down-drop-circle-outline
                        tap_action:
                          action: call-service
                          service: remote.send_command
                          target:
                            entity_id: '[[remote]]'
                          data:
                            command: CHANNEL_DOWN
                  - type: custom:button-card
                    template: remote_button_media
                    entity: '[[media]]'
                    name: Previous
                    icon: mdi:skip-previous
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        command: MEDIA_PREVIOUS
                    hold_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        num_repeats: 1
                        command: MEDIA_REWIND
                  - type: custom:button-card
                    template: remote_button_media
                    entity: '[[media]]'
                    name: Next
                    icon: mdi:skip-next
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        command: MEDIA_NEXT
                    hold_action:
                      action: call-service
                      service: remote.send_command
                      target:
                        entity_id: '[[remote]]'
                      data:
                        num_repeats: 1
                        command: MEDIA_FAST_FORWARD
            - attributes:
                icon: mdi:dialpad
              card:
                type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 1fr 1fr 1fr
                  grid-gap: 4px
                  grid-row-gap: 2px
                  margin: 8px 0 0
                  padding: 0
                cards:
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-1
                    variables:
                      command: '1'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-2
                    variables:
                      command: '2'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-3
                    variables:
                      command: '3'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-4
                    variables:
                      command: '4'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-5
                    variables:
                      command: '5'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-6
                    variables:
                      command: '6'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-7
                    variables:
                      command: '7'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-8
                    variables:
                      command: '8'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-9
                    variables:
                      command: '9'
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:information-slab-symbol
                    variables:
                      command: INFO
                    styles:
                      icon:
                        - --mdc-icon-size: 60px
                  - type: custom:button-card
                    template: remote_button_command
                    entity: '[[remote]]'
                    icon: mdi:numeric-0
                    variables:
                      command: '0'
                  - type: custom:button-card
                    template: remote_button_command
                    icon: mdi:keyboard-return
                    entity: '[[remote]]'
                    variables:
                      command: ENTER
                    styles:
                      icon:
                        - --mdc-icon-size: 40px
            - attributes:
                icon: mdi:star
              card:
                type: vertical-stack
                cards:
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 1fr 1fr 1fr
                      grid-gap: 4px
                      grid-row-gap: 2px
                      margin: 8px 0 2px 0
                      padding: 0
                    cards: '[[harmony_sources]]'
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 1fr 1fr 1fr
                      grid-gap: 4px
                      grid-row-gap: 2px
                      margin: 8px 0 2px 0
                      padding: 0
                    cards: '[[sources]]'
                  - type: custom:button-card
                    template: remote_source
                    entity: '[[media]]'
                    name: Home
                    icon: mdi:apps
                    variables:
                      source: Home
            - attributes:
                icon: mdi:volume-high
              card:
                type: vertical-stack
                cards:
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 1fr 1fr 1fr
                      grid-gap: 4px
                      grid-row-gap: 2px
                      margin: 8px 0 2px 0
                      padding: 0
                    cards: '[[sound_buttons]]'
  remote_living:
    card:
      type: custom:streamline-card
      template: remote
      variables:
        - remote: remote.androidtv_living_room
        - media: media_player.universal_living_room
        - sources:
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: Plex
              icon: mdi:plex
              variables:
                source: Plex
                badge_icon_color: var(--black-color)
              styles:
                card:
                  - background: '#d5a004'
                icon:
                  - color: var(--black-color)
                name:
                  - color: var(--black-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: Prime Video
              icon: fapro:prime-video
              variables:
                source: Prime Video
              styles:
                card:
                  - background: '#202d3c'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: SmartTube
              icon: fapro:smarttube
              variables:
                source: SmartTube
              styles:
                card:
                  - background: '#bd2424'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: Crunchyroll
              icon: fapro:crunchyroll
              variables:
                source: Crunchyroll
                badge_icon_color: var(--black-color)
              styles:
                card:
                  - background: '#f47521'
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: Spotify
              icon: mdi:spotify
              variables:
                source: Spotify
              styles:
                card:
                  - background: '#1db954'
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: Cartoon Network
              icon: fapro:cartoon-network
              variables:
                source: Cartoon Network
              styles:
                card:
                  - background: '#000000'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: YouTube Kids
              icon: fapro:youtube-kids
              variables:
                source: YouTube Kids
              styles:
                card:
                  - background: '#bd2424'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_living_room
              name: PBS Kids
              icon: fapro:pbs-kids
              variables:
                source: PBS Kids
              styles:
                card:
                  - background: '#2838c2'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
        - sound_buttons:
            - type: custom:button-card
              template: remote_sound_mode
              entity: media_player.universal_living_room
              name: Surround
              icon: mdi:surround-sound
              variables:
                sound_mode: Surround
            - type: custom:button-card
              template: remote_sound_mode
              entity: media_player.universal_living_room
              name: Gaming
              icon: mdi:gamepad-variant
              variables:
                sound_mode: Gaming
            - type: custom:button-card
              template: remote_sound_mode
              entity: media_player.universal_living_room
              name: Adaptive
              icon: mdi:home-sound-in-outline
              variables:
                sound_mode: Adaptive Sound
            - type: custom:button-card
              template: remote_sound_mode
              entity: media_player.universal_living_room
              name: Standard
              icon: mdi:soundbar
              variables:
                sound_mode: Standard
            - type: custom:button-card
              template: remote_button_status
              entity: input_boolean.samsung_soundbar_night_mode
              name: Night Mode
              icon: mdi:weather-night
              custom_fields:
                status: "[[[\n  if (entity.state === \"on\")\n    return `<ha-icon\
                  \ icon=\"mdi:circle\" style=\"width: 20px; height: 20px; color:\
                  \ ${variables.badge_icon_color || 'var(--cyan-color)'};\"></ha-icon>`;\n\
                  ]]]"
              tap_action:
                action: call-service
                service: input_boolean.toggle
                target:
                  entity_id: '[[[ return entity.entity_id ]]]'
            - type: custom:button-card
              template: remote_button_status
              entity: input_boolean.samsung_soundbar_voice_enhancer
              name: Voice Enhancer
              icon: mdi:account-voice
              custom_fields:
                status: "[[[\n  if (entity.state === \"on\")\n    return `<ha-icon\
                  \ icon=\"mdi:circle\" style=\"width: 20px; height: 20px; color:\
                  \ ${variables.badge_icon_color || 'var(--cyan-color)'};\"></ha-icon>`;\n\
                  ]]]"
              tap_action:
                action: call-service
                service: input_boolean.toggle
                target:
                  entity_id: '[[[ return entity.entity_id ]]]'
  remote_family:
    card:
      type: custom:streamline-card
      template: remote
      variables:
        - remote: remote.androidtv_family_room
        - media: media_player.universal_family_room
        - sources:
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: Plex
              icon: mdi:plex
              variables:
                source: Plex
                badge_icon_color: var(--black-color)
              styles:
                card:
                  - background: '#d5a004'
                icon:
                  - color: var(--black-color)
                name:
                  - color: var(--black-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: Prime Video
              icon: fapro:prime-video
              variables:
                source: Prime Video
              styles:
                card:
                  - background: '#202d3c'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: SmartTube
              icon: fapro:smarttube
              variables:
                source: SmartTube
              styles:
                card:
                  - background: '#bd2424'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: Crunchyroll
              icon: fapro:crunchyroll
              variables:
                source: Crunchyroll
                badge_icon_color: var(--black-color)
              styles:
                card:
                  - background: '#f47521'
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: Spotify
              icon: mdi:spotify
              variables:
                source: Spotify
              styles:
                card:
                  - background: '#1db954'
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: Cartoon Network
              icon: fapro:cartoon-network
              variables:
                source: Cartoon Network
              styles:
                card:
                  - background: '#000000'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: YouTube Kids
              icon: fapro:youtube-kids
              variables:
                source: YouTube Kids
              styles:
                card:
                  - background: '#bd2424'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_family_room
              name: PBS Kids
              icon: fapro:pbs-kids
              variables:
                source: PBS Kids
              styles:
                card:
                  - background: '#2838c2'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
        - harmony_sources:
            - type: custom:button-card
              template: remote_harmony_source
              entity: remote.harmony_family_room
              name: Shield
              icon: mdi:motion-play-outline
              variables:
                activity: Shield TV
            - type: custom:button-card
              template: remote_harmony_source
              entity: remote.harmony_family_room
              name: PC
              icon: mdi:desktop-tower
              variables:
                activity: Computer
            - type: custom:button-card
              template: remote_harmony_source
              entity: remote.harmony_family_room
              name: PS4
              icon: fapro:ps4
              variables:
                activity: PS4
            - type: custom:button-card
              template: remote_harmony_source
              entity: remote.harmony_family_room
              name: PS3
              icon: fapro:ps3
              variables:
                activity: PS3
            - type: custom:button-card
              template: remote_harmony_source
              entity: remote.harmony_family_room
              name: XBox
              icon: mdi:microsoft-xbox
              variables:
                activity: XBox
            - type: custom:button-card
              template: remote_harmony_source
              entity: remote.harmony_family_room
              name: Switch
              icon: mdi:nintendo-switch
              variables:
                activity: Switch
        - sound_buttons:
            - type: custom:button-card
              template: remote_sound_mode
              entity: media_player.universal_family_room
              name: Direct
              icon: mdi:surround-sound-5-1
              variables:
                sound_mode: Direct
            - type: custom:button-card
              template: remote_sound_mode
              entity: media_player.universal_family_room
              name: Surround
              icon: mdi:surround-sound-2-1
              variables:
                sound_mode: Dolby Digital
            - type: custom:button-card
              template: remote_sound_mode
              entity: media_player.universal_family_room
              name: Multi-Channel
              icon: mdi:surround-sound
              variables:
                sound_mode: All Zone Stereo
  remote_main:
    card:
      type: custom:streamline-card
      template: remote
      variables:
        - remote: remote.androidtv_main_bedroom
        - media: media_player.universal_main_bedroom
        - sources:
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_main_bedroom
              name: Plex
              icon: mdi:plex
              variables:
                source: Plex
                badge_icon_color: var(--black-color)
              styles:
                card:
                  - background: '#d5a004'
                icon:
                  - color: var(--black-color)
                name:
                  - color: var(--black-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_main_bedroom
              name: Prime Video
              icon: fapro:prime-video
              variables:
                source: Prime Video
              styles:
                card:
                  - background: '#202d3c'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_main_bedroom
              name: SmartTube
              icon: fapro:smarttube
              variables:
                source: SmartTube
              styles:
                card:
                  - background: '#bd2424'
                icon:
                  - color: var(--white-color)
                name:
                  - color: var(--white-color)
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_main_bedroom
              name: Crunchyroll
              icon: fapro:crunchyroll
              variables:
                source: Crunchyroll
                badge_icon_color: var(--black-color)
              styles:
                card:
                  - background: '#f47521'
            - type: custom:button-card
              template: remote_source
              entity: media_player.universal_main_bedroom
              name: Spotify
              icon: mdi:spotify
              variables:
                source: Spotify
              styles:
                card:
                  - background: '#1db954'
  camera_popup:
    default:
      - ptz: 'off'
    card:
      type: custom:frigate-card
      cameras:
        - camera_entity: '[[camera]]'
          live_provider: go2rtc
          go2rtc:
            modes:
              - webrtc
              - mse
            stream: '[[stream]]'
      menu:
        style: outside
        buttons:
          frigate:
            enabled: false
          cameras:
            enabled: false
          media_player:
            enabled: false
          download:
            enabled: false
          microphone:
            enabled: true
            type: toggle
            alignment: opposing
          mute:
            enabled: true
            alignment: opposing
          play:
            enabled: true
            alignment: opposing
            priority: 45
          fullscreen:
            alignment: opposing
            priority: 40
      live:
        draggable: false
        preload: true
        controls:
          builtin: false
          ptz:
            mode: '[[ptz]]'
            orientation: vertical
            hide_zoom: true
        lazy_load: false
      media_viewer:
        transition_effect: slide
      timeline:
        controls:
          thumbnails:
            mode: below
      dimensions:
        aspect_ratio_mode: dynamic
      performance: {}
      view: {}
  computer_apps:
    card:
      type: custom:vertical-stack-in-card
      horizontal: true
      cards:
        - type: conditional
          conditions:
            - condition: state
              entity: sensor.[[computer]]_app_bigbox
              state_not: unavailable
            - condition: state
              entity: sensor.[[computer]]_app_bigbox
              state_not: unknown
          card:
            type: custom:mushroom-template-card
            entity: sensor.[[computer]]_app_bigbox
            layout: vertical
            icon: fapro:bigbox
            icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: script.hass_agent_launch
              data:
                entity:
                  - media_player.[[computer]]
                command: '"C:\Users\PC\AppData\Local\Programs\LaunchBox\Core\BigBox.exe"'
        - type: conditional
          conditions:
            - condition: state
              entity: sensor.[[computer]]_app_steam
              state_not: unavailable
            - condition: state
              entity: sensor.[[computer]]_app_steam
              state_not: unknown
          card:
            type: custom:mushroom-template-card
            entity: sensor.[[computer]]_app_steam
            layout: vertical
            icon: mdi:steam
            icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: script.hass_agent_launch
              data:
                entity:
                  - media_player.[[computer]]
                command: '"C:\Program Files (x86)\Steam\Steam.exe"'
        - type: conditional
          conditions:
            - condition: state
              entity: sensor.[[computer]]_app_eadesktop
              state_not: unavailable
            - condition: state
              entity: sensor.[[computer]]_app_eadesktop
              state_not: unknown
          card:
            type: custom:mushroom-template-card
            entity: sensor.[[computer]]_app_eadesktop
            layout: vertical
            icon: mdi:origin
            icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: script.hass_agent_launch
              data:
                entity:
                  - media_player.[[computer]]
                command: '"C:\Program Files\Electronic Arts\EA Desktop\EA Desktop\EALauncher.exe"'
        - type: conditional
          conditions:
            - condition: state
              entity: sensor.[[computer]]_app_epicgames
              state_not: unavailable
            - condition: state
              entity: sensor.[[computer]]_app_epicgames
              state_not: unknown
          card:
            type: custom:mushroom-template-card
            entity: sensor.[[computer]]_app_epicgames
            layout: vertical
            icon: fapro:epic-games
            icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: script.hass_agent_launch
              data:
                entity:
                  - media_player.[[computer]]
                command: '"C:\Program Files (x86)\Epic Games\Launcher\Portal\Binaries\Win32\EpicGamesLauncher.exe"'
        - type: conditional
          conditions:
            - condition: state
              entity: sensor.[[computer]]_app_chrome
              state_not: unavailable
            - condition: state
              entity: sensor.[[computer]]_app_chrome
              state_not: unknown
          card:
            type: custom:mushroom-template-card
            entity: sensor.[[computer]]_app_chrome
            layout: vertical
            icon: mdi:google-chrome
            icon_color: '{{ iif(int(states(entity), 0) > 0, "green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: script.hass_agent_launch
              data:
                entity:
                  - media_player.[[computer]]
                command: '"C:\Program Files\Google\Chrome\Application\chrome.exe"'
  computer_power:
    card:
      type: custom:vertical-stack-in-card
      horizontal: true
      cards:
        - type: custom:mushroom-template-card
          entity: switch.[[computer]]
          primary: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"off\"\
            ) %}\n  Power\n{% endif %}"
          icon: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"on\")\
            \ %}\n  mdi:power\n{% else %}\n  mdi:power-off\n{% endif %}"
          icon_color: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"\
            on\") %}\n  green\n{% else %}\n  red\n{% endif %}"
          tap_action:
            action: none
          hold_action:
            action: call-service
            service: switch.toggle
            target:
              entity_id: switch.[[computer]]
          card_mod:
            style: "{% if is_state(\"binary_sensor.[[computer]]_connected\", \"on\"\
              ) %}\nha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n{%\
              \ endif %}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_lock
            layout: vertical
            icon: "{% if is_state(\"sensor.[[computer]]_session_state\", \"Locked\"\
              ) %}\n  mdi:lock\n{% else %}\n  mdi:lock-open\n{% endif %}"
            icon_color: "{% if is_state(\"sensor.[[computer]]_session_state\", \"\
              Locked\") %}\n  red\n{% elif is_state(\"sensor.[[computer]]_session_state\"\
              , \"Unlocked\") %}\n  green\n{% else %}\n  grey\n{% endif %}"
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_lock
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_logoff
            layout: vertical
            icon: mdi:logout
            icon_color: grey
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_logoff
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_sleep
            layout: vertical
            icon: mdi:sleep
            icon_color: '{{ is_state(entity, "on") | iif("green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_sleep
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
        - type: conditional
          conditions:
            - entity: binary_sensor.[[computer]]_connected
              state: 'on'
          card:
            type: custom:mushroom-template-card
            entity: button.[[computer]]_restart
            layout: vertical
            icon: mdi:reload
            icon_color: '{{ is_state(entity, "on") | iif("green", "grey") }}'
            tap_action:
              action: none
            hold_action:
              action: call-service
              service: button.press
              target:
                entity_id: button.[[computer]]_restart
            card_mod:
              style: "ha-card {\n  margin-left: auto;\n  margin-right: auto;\n}\n"
  door_card:
    card:
      type: custom:mushroom-template-card
      entity: '[[entity]]'
      primary: '[[name]]'
      secondary: '{% from "util.jinja" import nominal_change_history %} {{ state_translated(entity)
        }} ⸱ {{ nominal_change_history(entity) }}'
      icon: '[[icon]]{{ iif(is_state(entity, "on"), "-open", "") }}'
      icon_color: '{{ iif(is_state(entity, "on"), "red", "green") }}'
      tap_action:
        action: more-info
      hold_action:
        action: fire-dom-event
        browser_mod:
          service: browser_mod.more_info
          data:
            entity: '[[battery_entity]]'
      card_mod:
        style:
          mushroom-shape-icon$: "{% if int(states(\"[[battery_entity]]\"), 0) <= 60\
            \ %}\n{% from \"util.jinja\" import battery_color %}\n.shape {\n  /* Radial\
            \ progress bar */\n  background:\n    radial-gradient(var(--card-background-color)\
            \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{ battery_color(\"\
            [[battery_entity]]\") }}-color) {{ states(\"[[battery_entity]]\") }}%\
            \ 0%, var(--card-background-color) 0% 100%\n  );\n}\n.shape:after {\n\
            \  /* Add back icon shape */\n  content: \"\";\n  height: 100%;\n  width:\
            \ 100%;\n  position: absolute;\n  border-radius: var(--icon-border-radius);\n\
            \  background: var(--shape-color);\n}\n{% endif %}\n"
  four_graphs:
    default:
      - graph_1_name: None
      - graph_1_icon: None
      - graph_1_entities: []
      - graph_2_name: None
      - graph_2_icon: None
      - graph_2_entities: []
      - graph_3_name: None
      - graph_3_icon: None
      - graph_3_entities: []
      - graph_4_name: None
      - graph_4_icon: None
      - graph_4_entities: []
    card:
      type: grid
      square: false
      columns: 2
      cards:
        - type: custom:mini-graph-card
          name: '[[graph_1_name]]'
          icon: '[[graph_1_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_1_entities]]'
          line_width: 8
          font_size: 75
          hours_to_show: 1
          points_per_hour: 30
          animate: true
        - type: custom:mini-graph-card
          name: '[[graph_2_name]]'
          icon: '[[graph_2_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_2_entities]]'
          line_width: 8
          font_size: 75
          hours_to_show: 1
          points_per_hour: 30
          animate: true
        - type: custom:mini-graph-card
          name: '[[graph_3_name]]'
          icon: '[[graph_3_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_3_entities]]'
          line_width: 8
          font_size: 75
          hours_to_show: 1
          points_per_hour: 30
          animate: true
        - type: custom:mini-graph-card
          name: '[[graph_4_name]]'
          icon: '[[graph_4_icon]]'
          show:
            labels: false
            labels_secondary: false
          entities: '[[graph_4_entities]]'
          line_width: 8
          font_size: 75
          hours_to_show: 1
          points_per_hour: 30
          animate: true
  light_group:
    default:
      - style: '--ha-card-background: none;'
    card:
      type: custom:vertical-stack-in-card
      card_mod:
        style: "ha-card {\n  [[style]]\n  --ha-card-border-width: 0;\n}\n"
      cards:
        - type: custom:mushroom-light-card
          entity: '[[entity]]'
          secondary_info: none
          tap_action:
            action: toggle
          card_mod:
            style: "ha-card {\n  {% if is_state(config.entity, \"on\") %}\n  background:\
              \ rgba(var(--rgb-state-light), 0.2);\n  {% endif %}\n}\n"
        - type: custom:auto-entities
          card:
            type: custom:layout-card
            cards: []
            layout_type: masonry
          sort:
            attribute: friendly_name
          filter:
            include:
              - group: '[[entity]]'
                options:
                  type: custom:mushroom-light-card
                  show_brightness_control: true
                  show_color_temp_control: true
                  show_color_control: true
                  layout: horizontal
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  padding: 4px 12px\
                      \ !important;\n  border-width: 0;\n}\n"
  media_card:
    default:
      - expanded: false
      - buttons: []
    card:
      type: custom:vertical-stack-in-card
      cards:
        - type: custom:expander-card
          expanded: '[[expanded]]'
          gap: 0em
          padding: 0em
          child-padding: 0.5em
          title-card-padding: 0em
          title-card-button-overlay: true
          expander-card-background: none
          overlay-margin: 0
          title-card:
            type: grid
            columns: 2
            square: false
            cards:
              - type: conditional
                conditions:
                  - entity: '[[entity]]'
                    state_not: unavailable
                  - entity: '[[entity]]'
                    state_not: unknown
                card:
                  type: custom:mushroom-media-player-card
                  entity: '[[entity]]'
                  primary_info: none
                  secondary_info: none
                  icon_type: none
                  use_media_info: false
                  use_media_artwork: false
                  show_volume_level: false
                  fill_container: false
                  card_mod:
                    style: "ha-card:before {\n  transform: translate3d(0,0,0);\n \
                      \ -webkit-transform: translate3d(0,0,0);\n  content: \"\";\n\
                      \n  {%- set app_name = state_attr(\"[[entity]]\", \"source\"\
                      ) | lower -%}\n  {%- set app_list = [\n    \"cartoon network\"\
                      ,\n    \"crunchyroll\",\n    \"netflix\",\n    \"pbs kids\"\
                      ,\n    \"prime video\",\n    \"smarttube\",\n    \"spotify\"\
                      ,\n    \"youtube\",\n    \"youtube kids\"\n  ] %}\n\n  background:\n\
                      \  {%- if app_name in app_list -%}\n    url('/local/logos/{{\
                      \ app_name | lower | replace(\" \", \"-\") }}.png') center no-repeat\n\
                      \  {%- elif not states(config.entity) in [\"off\", \"unknown\"\
                      , \"unavailable\", \"idle\"] and state_attr(config.entity, \"\
                      entity_picture\") -%}\n    url('{{ state_attr(config.entity,\
                      \ \"entity_picture\") }}') center no-repeat\n  {%- elif \"spotify\"\
                      \ in config.entity -%}\n    url('/local/logos/spotify.png')\
                      \ center no-repeat\n  {%- else -%}\n    url('/local/logos/idle-media-player.png')\
                      \ center no-repeat\n  {%- endif -%};\n  background-size: contain;\n\
                      \n  border-radius: var(--control-border-radius);\n  {% set media_type\
                      \ = state_attr(config.entity, 'media_content_type') %}\n  {%\
                      \ if media_type in ['tvshow'] %}\n    aspect-ratio: 16 / 9;\n\
                      \    margin: 0px 0px 0px -45px;\n    margin-top: 1px;\n  {%\
                      \ elif media_type == 'movie' %}\n    aspect-ratio: 2 / 3;\n\
                      \  {% else %}\n    aspect-ratio: 1 / 1;\n    width: 99%;\n \
                      \ {% endif %}\n}\nha-card {\n  transform: translate3d(0,0,0);\n\
                      \  -webkit-transform: translate3d(0,0,0);\n  border-radius:\
                      \ 30px;\n  overflow: visible !important;\n  box-shadow: none\
                      \ !important;\n  background-color: transparent;\n  border: none\
                      \ !important;\n}\n"
              - type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    alignment: center
                    title: "{% set entity = \"[[entity]]\" %} {% if states(entity)\
                      \ in [\"playing\", \"paused\", \"standby\"] %}\n  {{ state_translated(entity)\
                      \ }}\n{% endif %}"
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-box-shadow: none;\n}\nh1 {\n  text-shadow:\
                          \ 0 0 5px rgba(17,35,52,1);\n}\nh2 {\n  color: var(--primary-text-color)\
                          \ !important;\n  text-shadow: 0 0 5px rgba(17,35,52,1);\n\
                          }\n"
                  - type: conditional
                    conditions:
                      - entity: '[[entity]]'
                        state_not: unavailable
                      - entity: '[[entity]]'
                        state_not: 'off'
                      - entity: '[[entity]]'
                        state_not: standby
                    card:
                      type: custom:mushroom-chips-card
                      alignment: center
                      chips:
                        - type: template
                          icon: mdi:skip-backward
                          entity: '[[entity]]'
                          tap_action:
                            action: call-service
                            service: media_player.media_previous_track
                            target:
                              entity_id: '[[entity]]'
                        - type: template
                          entity: '[[entity]]'
                          icon: '{{ is_state(entity, "playing") | iif("mdi:pause",
                            "mdi:play") }}'
                          tap_action:
                            action: call-service
                            service: media_player.media_play_pause
                            target:
                              entity_id: '[[entity]]'
                        - type: template
                          entity: '[[entity]]'
                          icon: mdi:skip-forward
                          tap_action:
                            action: call-service
                            service: media_player.media_next_track
                            target:
                              entity_id: '[[entity]]'
                      card_mod:
                        style:
                          .: "ha-card {\n  --chip-background: rgba(var(--rgb-disabled-color),\
                            \ 0.25);\n  --ha-card-box-shadow: none;\n  --chip-box-shadow:\
                            \ 0 0 13px -4px rgba(17,35,52,1);\n  --chip-border-radius:\
                            \ 12px;\n  --chip-height: 35px;\n  --chip-padding: 10px;\n\
                            \  --chip-spacing: 18px;\n}\n.chip-container * {\n  margin-bottom:\
                            \ var(--chip-spacing) !important;\n}\n"
                  - type: conditional
                    conditions:
                      - entity: '[[entity]]'
                        state_not: unavailable
                      - entity: '[[entity]]'
                        state_not: idle
                    card:
                      type: custom:mushroom-title-card
                      alignment: center
                      subtitle: "{%- set episode = \"\" -%}\n{%- if state_attr(\"\
                        [[entity]]\", \"media_season\")\n  and state_attr(\"[[entity]]\"\
                        , \"media_episode\") -%}\n  {%- set episode =  \"S\" ~ state_attr(\"\
                        [[entity]]\", \"media_season\") | default(\"\", true)\n  \
                        \  ~ \"E\" ~ state_attr(\"[[entity]]\", \"media_episode\"\
                        ) | default(\"\", true) -%}\n{%- endif -%}\n{{ [\n  state_attr(\"\
                        [[entity]]\", \"media_title\") | default(\"\", true) | trim,\n\
                        \  state_attr(\"[[entity]]\", \"media_artist\") | default(\"\
                        \", true) | trim,\n  episode,\n  state_attr(\"[[entity]]\"\
                        , \"media_series_title\") | default(\"\", true) | trim\n \
                        \ ] | reject(\"==\", \"\") | list | join(\" - \")\n}}"
                      card_mod:
                        style:
                          .: "ha-card {\n  --ha-card-box-shadow: none;\n}\nh1 {\n\
                            \  text-shadow: 0 0 5px rgba(17,35,52,1);\n}\nh2 {\n \
                            \ color: var(--primary-text-color) !important;\n  text-shadow:\
                            \ 0 0 5px rgba(17,35,52,1);\n}\n"
          cards:
            - type: conditional
              conditions:
                - entity: '[[entity]]'
                  state_not: unavailable
                - entity: '[[entity]]'
                  state_not: unknown
                - entity: '[[entity]]'
                  state_not: 'off'
              card:
                type: custom:mushroom-media-player-card
                entity: '[[entity]]'
                primary_info: none
                secondary_info: none
                icon_type: none
                volume_controls:
                  - volume_set
                  - volume_mute
                  - volume_buttons
                card_mod:
                  style:
                    .: ":host {\n  --mush-rgb-state-media-player: var(--rgb-accent-color);\n\
                      }\nha-card {\n  transform: translate3d(0,0,0);\n  -webkit-transform:\
                      \ translate3d(0,0,0);\n  background: transparent;\n  box-shadow:\
                      \ none;\n  border: none !important;\n}\n"
                    mushroom-media-player-volume-control$:
                      mushroom-button$: ".button {\n  background: rgba(var(--rgb-disabled-color),\
                        \ 0.25) !important;\n  box-shadow: 0 0 13px -4px rgba(17,35,52,1)\
                        \ !important;\n  border-radius: 12px !important;\n}\n"
            - type: conditional
              conditions:
                - entity: '[[entity]]'
                  state_not: unavailable
                - entity: '[[entity]]'
                  state_not: unknown
              card:
                type: custom:mini-media-player
                entity: '[[entity]]'
                card_mod:
                  style:
                    mmp-shortcuts$: ".mmp-shortcuts__button {\n  --mmp-button-color:\
                      \ rgba(var(--rgb-disabled-color), 0.25);\n  box-shadow: 0 0\
                      \ 13px -4px rgba(17,35,52,1);\n  border-radius: 12px;\n}\n"
                artwork: none
                group: true
                hide:
                  controls: true
                  icon: true
                  info: true
                  name: true
                  power: true
                  progress: true
                  source: true
                  volume: true
                shortcuts:
                  columns: 3
                  attribute: source
                  buttons: '[[buttons]]'
          card_mod:
            style: "ha_card {\n  --ha-card-border-width: 0;\n}\n"
        - type: custom:mini-media-player
          entity: '[[entity]]'
          group: true
          hide:
            controls: true
            icon: true
            info: true
            name: true
            power: true
            source: true
            state_label: true
            volume: true
          card_mod:
            style:
              .: "ha-card {\n  --mmp-accent-color: rgb(var(--rgb-accent-color));\n\
                \  --mmp-progress-height: 12px !important;\n  --paper-progress-container-color:\
                \ transparent;\n  --ha-card-border-width: 0;\n  height: var(--mmp-progress-height);\n\
                }\n"
      card_mod:
        style:
          .: "ha-card {\n  background: none;\n  transform: translate3d(0,0,0);\n \
            \ -webkit-transform: translate3d(0,0,0);\n}\nha-card:before {\n  transform:\
            \ translate3d(0,0,0);\n  -webkit-transform: translate3d(0,0,0);\n  content:\
            \ \"\";\n  position: absolute;\n  height: 100%;\n  width: 100%;\n\n  animation:\
            \ gradient 40s ease infinite;\n\n  {%- if not states(\"[[entity]]\") in\
            \ [\"off\", \"unknown\", \"unavailable\", \"idle\"] and state_attr(\"\
            [[entity]]\", \"entity_picture\") -%}\n    background: url( '{{ state_attr('[[entity]]',\
            \ \"entity_picture\") }}') center no-repeat;\n    background-size: 500%\
            \ 500%;\n    filter: blur(100px) saturate(200%);\n  {%- elif not states('[[entity]]')\
            \ in [\"off\", \"unknown\", \"unavailable\"] -%}\n    background: url('/local/backgrounds/waveform2.jpg')\
            \ center no-repeat;\n    background-size: 500% 500%;\n    filter: blur(100px)\
            \ saturate(200%);\n  {%- else -%}\n    background: var(--ha-card-background,\
            \ var(--card-background-color, #fff))\n  {%- endif -%}\n}\n@keyframes\
            \ gradient {\n  0% { background-position: 0% 50%; }\n  25% { background-position:\
            \ 50% 0%; }\n  50% { background-position: 100% 50%; }\n  75% { background-position:\
            \ 50% 100%; }\n  100% { background-position: 0% 50%; }\n"
          expander-card$: "ha-card {\n  --ha-card-border-width: 0;\n}\n.ripple {\n\
            \  border-radius: var(--ha-dialog-border-radius);\n}\n"
  motion_card:
    card:
      type: custom:mushroom-template-card
      entity: '[[entity]]'
      primary: '[[name]]'
      secondary: "{%- if is_state(entity, \"on\") -%}\n  Motion\n{%- elif is_state(entity,\
        \ \"on\") -%}\n  Detected\n{%- else -%}\n  Clear\n{%- endif -%}"
      icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
        \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%- endif\
        \ -%}"
      icon_color: "{%- if is_state(entity, \"on\") -%}\n  orange\n{%- elif is_state(entity,\
        \ \"on\") -%}\n  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
      tap_action:
        action: more-info
  package_delivery:
    card:
      type: custom:mushroom-template-badge
      entity: '[[entity]]'
      label: '[[name]]'
      content: '{{ states(entity) }} {{ iif(int(states(entity), 0) == 1, "package",
        "packages") }}'
      icon: '[[icon]]'
      color: '[[icon_color]]'
      tap_action:
        action: fire-dom-event
        browser_mod:
          service: browser_mod.popup
          data:
            title: '[[name]] Tracking'
            content:
              type: custom:vertical-stack-in-card
              card_mod:
                style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                  \ 0;\n}\n"
              cards:
                - type: custom:mushroom-template-card
                  entity: '[[entity]]'
                  primary: '[[name]]'
                  secondary: '{{ states(entity) }} {{ iif(int(states(entity), 0) ==
                    1, "package", "packages") }}'
                  icon: '[[icon]]'
                  icon_color: '[[icon_color]]'
                  tap_action:
                    action: more-info
                - type: custom:mushroom-title-card
                  subtitle: Tracking Numbers
                - type: markdown
                  content: "{%- set orders = state_attr(\"[[entity]]\", \"tracking_#\"\
                    ) -%} {%- if state_attr(\"[[entity]]\", \"order\") -%}\n  {%-\
                    \ set orders = state_attr(\"[[entity]]\", \"order\") -%}\n{%-\
                    \ endif -%} {% for number in orders -%}\n  <ha-icon icon=\"mdi:package-variant-closed\"\
                    ></ha-icon> [{{ number }}]({{ \"[[url]]\" | replace(\"##TRACK_ID##\"\
                    , number) }})\n{% endfor %}"
  person_card:
    default:
      - phone_base: pixel_8
    card:
      type: custom:button-card
      template: person
      name: '[[name]]'
      entity: person.[[person]]
      tap_action:
        action: navigate
        navigation_path: '#person-[[person]]'
      variables:
        chips_top:
          - type: template
            entity: sensor.[[phone_base]]_[[person]]_wifi_signal_strength
            icon_color: blue
            icon: '{% from "util.jinja" import wifi_icon %}

              {{ wifi_icon(entity, "sensor.[[phone_base]]_[[person]]_wifi_connection")
              }}'
            tap_action:
              action: more-info
          - type: template
            entity: sensor.[[phone_base]]_[[person]]_battery_level
            icon: '{% from "util.jinja" import cell_battery_icon %}

              {{ cell_battery_icon(entity, "sensor.[[phone_base]]_[[person]]_battery_state",
              "sensor.[[phone_base]]_[[person]]_charger_type") }}'
            icon_color: "{% from \"util.jinja\" import battery_color %} {% if is_state(\"\
              sensor.[[phone_base]]_[[person]]_battery_state\", \"charging\") %}\n\
              \  light-blue\n{% else %}\n  {{ battery_color(entity) }}\n{% endif %}"
            tap_action:
              action: more-info
        chips:
          - type: conditional
            conditions:
              - entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
                state_not: unavailable
              - entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
                state_not: unknown
              - entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
                state_not: 'off'
            chip:
              type: template
              entity: sensor.[[phone_base]]_[[person]]_do_not_disturb_sensor
              icon: mdi:minus-circle
              icon_color: amber
              tap_action:
                action: none
          - type: conditional
            conditions:
              - entity: person.[[person]]
                state_not: home
              - entity: person.[[person]]
                state_not: unavailable
              - entity: person.[[person]]
                state_not: unknown
            chip:
              type: template
              entity: sensor.home_[[person]]_direction_of_travel
              icon: "{% if int(states(\"sensor.home_[[person]]_distance\"), 0) >=\
                \ 400 %}\n  {% if is_state(entity, \"towards\") %}\n    mdi:map-marker-left\n\
                \  {% elif is_state(entity, \"away_from\") %}\n    mdi:map-marker-right\n\
                \  {% else %}\n    mdi:map-marker-distance\n  {% endif %}\n{% endif\
                \ %}"
              icon_color: "{% if is_state(entity, \"towards\") %}\n  green\n{% elif\
                \ is_state(entity, \"away_from\") %}\n  orange\n{% else %}\n  grey\n\
                {% endif %}"
              layout: vertical
              tap_action:
                action: none
              hold_action:
                action: none
              double_tap_action:
                action: none
          - type: conditional
            conditions:
              - entity: media_player.spotify_[[person]]
                state_not: unavailable
              - entity: media_player.spotify_[[person]]
                state_not: unknown
            chip:
              type: template
              entity: media_player.spotify_[[person]]
              icon_color: "{% set state = states(entity) %}\n{% if state == \"playing\"\
                \ %}\n  green\n{% elif state == \"paused\" %}\n  amber\n{% elif state\
                \ == \"idle\" %}\n  light-blue\n{% elif state in [\"standby\", \"\
                on\"] %}\n  blue-grey\n{% else %}\n  disabled\n{% endif %}"
              icon: mdi:spotify
              tap_action:
                action: fire-dom-event
                browser_mod:
                  service: browser_mod.popup
                  data:
                    title: Spotify ([[name]])
                    content:
                      type: custom:streamline-card
                      template: media_card
                      variables:
                        - entity: media_player.spotify_[[person]]
                        - buttons: []
  person_popup:
    default:
      - phone_base: pixel_8
      - watch_base: pixel_watch
    card:
      type: vertical-stack
      cards:
        - type: custom:mushroom-entity-card
          entity: person.[[person]]
          layout: horizontal
          icon_type: entity-picture
          primary_info: state
          secondary_info: last-changed
          tap_action:
            action: none
          hold_action:
            action: none
          card_mod:
            style:
              .: ":host {\n  /* Define Person State colors. Can be added to theme\
                \ */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n \
                \ --state-person-unknown: var(--grey-color);\n\n  /* Set Person State\
                \ color */\n  --state-person:\n  {% if is_state(config.entity, ['home',\
                \ 'not_home', 'unknown']) %}\n    var(--state-person-{{ states(config.entity)\
                \ | replace('_', '-') }})\n  {% else %}\n    var(--state-person-zone)\n\
                \  {% endif %};\n\n  /* Match styling to Mushroom Title */\n  --mush-card-primary-font-size:\
                \ var(--mush-title-font-size, 24px);\n  --mush-card-primary-font-weight:\
                \ var(--mush-title-font-weight, normal);\n  --mush-card-primary-line-height:\
                \ var(--ush-title-line-height, 1.2);\n  --mush-card-secondary-font-size:\
                \ var(--mush-title-font-size, 16px);\n  --mush-card-secondary-font-weight:\
                \ var(--mush-title-font-weight, normal);\n  --mush-card-secondary-line-height:\
                \ var(--mush-title-line-height, 1.2);\n}\nha-card {\n  /* Remove default\
                \ card styling */\n  --ha-card-background: none;\n  box-shadow: none;\n\
                \  --ha-card-border-width: 0;\n\n  /* Increase icon size */\n  --icon-size:\
                \ 72px;\n\n  /* Center card */\n  margin: auto;\n  width: fit-content;\n\
                \n  /* Add padding to bottom of card */\n  padding: 0px 0px var(--mush-title-spacing,\
                \ 12px) 0px !important;\n\n  /* Make card non-responsive to select\
                \ and pointer */\n  user-select: none;\n  pointer-events: none;\n\n\
                \  transition: all 0s;\n}\n"
              mushroom-shape-avatar$: ".picture {\n  /* Style shadow around avatar\
                \ */\n  background-color: var(--state-person);\n  box-shadow: 0 0\
                \ 4px 2px var(--state-person);\n  margin-right: var(--mush-title-spacing,\
                \ 12px);\n}\n"
        - type: custom:history-explorer-card
          cardName: historycard-person.[[person]]
          header: hide
          uiLayout:
            selector: hide
          labelsVisible: false
          labelAreaWidth: 0
          tooltipShowDuration: true
          tooltipSize: slim
          stateTextMode: auto
          graphs:
            - type: timeline
              title: Timeline
              entities:
                - entity: person.[[person]]
                  process: "( state == \"home\" ) ? \"Home\"\n  : ( state == \"not_home\"\
                    \ ) ? \"Away\"\n  : state"
          stateColors:
            Home: rgb(0,138,23)
            Away: rgb(57,64,70)
          card_mod:
            style:
              .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                \ none;\n  box-shadow: none;\n}\n"
        - type: horizontal-stack
          cards:
            - type: custom:mushroom-template-card
              entity: sensor.home_[[person]]_direction_of_travel
              primary: "{% if is_state(\"person.[[person]]\", \"home\") %}\n  Home\n\
                {% elif is_state(\"person.[[person]]\", \"not_home\") %}\n  Away\n\
                {% else %}\n  {{ states(\"person.[[person]]\") }}\n{% endif %}"
              secondary: '{{ ((states("sensor.home_[[person]]_distance") | float)
                / 5280) | round(1) }} mi'
              icon: "{% if is_state(entity, \"towards\") %}\n  mdi:map-marker-left\n\
                {% elif is_state(entity, \"away_from\") %}\n  mdi:map-marker-right\n\
                {% else %}\n  mdi:map-marker-path\n{% endif %}"
              icon_color: "{% if is_state(entity, \"towards\") %}\n  green\n{% elif\
                \ is_state(entity, \"away_from\") %}\n  orange\n{% else %}\n  grey\n\
                {% endif %}"
              layout: vertical
              tap_action:
                action: none
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                    \ auto;\n\n  /* Make card non-responsive to select and pointer\
                    \ */\n  user-select: none;\n  pointer-events: none;\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[phone_base]]_[[person]]_battery_level
              layout: vertical
              primary: '{{ states(entity) }}%'
              secondary: '{{ states("sensor.[[phone_base]]_[[person]]_battery_state")
                | replace(''_'', '' '') | title }}

                '
              icon: '{% from "util.jinja" import battery_icon %} {{ battery_icon(entity)
                }}'
              icon_color: "{% from \"util.jinja\" import battery_color %} {% if is_state(\"\
                sensor.[[phone_base]]_[[person]]_battery_state\", \"charging\") %}\n\
                \  light-blue\n{% else %}\n  {{ battery_color(entity) }}\n{% endif\
                \ %}"
              badge_icon: "{% set charge = \"sensor.[[phone_base]]_[[person]]_battery_state\"\
                \ %} {% set type = \"sensor.[[phone_base]]_[[person]]_charger_type\"\
                \ %} {% if is_state(charge, \"charging\") and is_state(type, \"wireless\"\
                ) %}\n  mdi:access-point\n{% elif is_state(charge, \"charging\") %}\n\
                \  mdi:lightning-bolt\n{% elif int(states(entity), 0) < 10 %}\n  mdi:exclamation-thick\n\
                {% endif %}"
              badge_color: '{{ ''red'' if int(states(entity), 0) < 10 else ''light-blue''
                }}'
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                    \ auto;\n}\nha-state-icon {\n  /* Icon charging animation */\n\
                    \  {{ 'animation: charge 3s linear infinite;' if is_state(\"sensor.[[phone_base]]_[[person]]_battery_state\"\
                    , \"charging\") }}\n}\n@keyframes charge {\n  0%, 80% { clip-path:\
                    \ inset(0 0 0 0); }\n  10% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 84%, 34% 84%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  20% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 74%, 34% 74%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  30% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 64%, 34% 64%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  40% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 54%, 34% 54%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  50% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 44%, 34% 44%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  60% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 34%, 34% 34%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n  70% { clip-path: polygon(0% 0%, 0% 100%,\
                    \ 34% 100%, 34% 26%, 67% 26%, 67% 24%, 34% 24%, 34% 100%, 100%\
                    \ 100%, 100% 0%); }\n}\n"
                  mushroom-shape-icon$: ".shape {\n  /* Radial progress bar */\n \
                    \ background:\n    radial-gradient(var(--card-background-color)\
                    \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--icon-color)\
                    \ {{ states(config.entity) }}% 0%, var(--card-background-color)\
                    \ 0% 100%\n  );\n}\n.shape:after {\n  /* Add back icon shape */\n\
                    \  content: \"\";\n  height: 100%;\n  width: 100%;\n  position:\
                    \ absolute;\n  border-radius: var(--icon-border-radius);\n  background:\
                    \ var(--shape-color);\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_battery_level
              layout: vertical
              primary: '{{ states(entity) }}%'
              secondary: '{{ states("sensor.[[watch_base]]_[[person]]_battery_state")
                | replace(''_'', '' '') | title }}

                '
              icon: mdi:watch
              icon_color: "{% from \"util.jinja\" import battery_color %} {% if is_state(\"\
                sensor.[[watch_base]]_[[person]]_battery_state\", \"charging\") %}\n\
                \  light-blue\n{% else %}\n  {{ battery_color(entity) }}\n{% endif\
                \ %}"
              badge_icon: "{% set charge = \"sensor.[[watch_base]]_[[person]]_battery_state\"\
                \ %} {% set type = \"sensor.[[watch_base]]_[[person]]_charger_type\"\
                \ %} {% if is_state(charge, \"charging\") and is_state(type, \"wireless\"\
                ) %}\n  mdi:access-point\n{% elif int(states(entity), 0) < 10 %}\n\
                \  mdi:exclamation-thick\n{% endif %}"
              badge_color: '{{ ''red'' if int(states(entity), 0) < 10 else ''light-blue''
                }}'
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style:
                  .: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                    \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                    \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                    \ auto;\n}\n"
                  mushroom-shape-icon$: ".shape {\n  /* Radial progress bar */\n \
                    \ background:\n    radial-gradient(var(--card-background-color)\
                    \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--icon-color)\
                    \ {{ states(config.entity) }}% 0%, var(--card-background-color)\
                    \ 0% 100%\n  );\n}\n.shape:after {\n  /* Add back icon shape */\n\
                    \  content: \"\";\n  height: 100%;\n  width: 100%;\n  position:\
                    \ absolute;\n  border-radius: var(--icon-border-radius);\n  background:\
                    \ var(--shape-color);\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[phone_base]]_[[person]]_wifi_signal_strength
              layout: vertical
              primary: '{{ states("sensor.[[phone_base]]_[[person]]_wifi_connection")
                }}'
              secondary: "{% set signal_level = int(states(entity), 0) %} {% if signal_level\
                \ != -1 %}\n  {{ signal_level }} dBm\n{% endif %}"
              icon: '{% from "util.jinja" import wifi_icon %} {{ wifi_icon(entity,
                "sensor.[[phone_base]]_[[person]]_wifi_connection") }}'
              icon_color: cyan
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
        - type: horizontal-stack
          cards:
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_activity_state
              layout: vertical
              primary: Activity
              secondary: '{{ states(entity) | title }}'
              icon: mdi:account-reactivate
              icon_color: pink
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_daily_steps
              layout: vertical
              primary: Steps
              secondary: '{{ states(entity, with_unit=True) }}'
              icon: mdi:walk
              icon_color: lime
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
            - type: custom:mushroom-template-card
              entity: sensor.[[watch_base]]_[[person]]_daily_calories
              layout: vertical
              primary: Calories
              secondary: '{{ states(entity, with_unit=True) }}'
              icon: mdi:food
              icon_color: brown
              tap_action:
                action: more-info
              hold_action:
                action: none
              double_tap_action:
                action: none
              card_mod:
                style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
                  \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                  \ 0;\n\n  /* Center card on row */\n  width: fit-content;\n  margin:\
                  \ auto;\n}\n"
        - type: custom:mushroom-chips-card
          alignment: center
          chips:
            - type: template
              content: Find Phone
              icon: mdi:target
              icon_color: red
              tap_action:
                action: call-service
                service: script.notify_mobile
                confirmation:
                  text: Are you sure you want to ring this device?
                data:
                  who: '{{ "[[person]]" }}'
                  title: Find Phone
                  message: Ringing phone...
                  channel: alarm_stream
                  tag: find-phone
                  importance: high
                target: {}
              hold_action:
                action: call-service
                service: script.notify_mobile
                confirmation:
                  text: Cancel find phone?
                data:
                  who: '{{ "[[person]]" }}'
                  message: clear_notification
                  tag: find-phone
          card_mod:
            style: "ha-card {\n  /* Style Chip like Mushroom button */\n  --chip-background:\
              \ rgba(var(--rgb-red), 0.2);\n  --chip-border-radius: var(--mush-control-border-radius,\
              \ 12px);\n  --chip-height: var(--mush-control-height, 42px);\n  --chip-box-shadow:\
              \ none;\n  user-select: none;\n}\nha-card:active {\n  /* Add effect\
              \ to give feedback on button press */\n  --chip-background: rgba(var(--rgb-red),\
              \ 0.4);\n}\n"
        - type: custom:mushroom-entity-card
          entity: sensor.[[phone_base]]_[[person]]_geocoded_location
          name: Location
          hold_action:
            action: none
          double_tap_action:
            action: none
          tap_action:
            action: none
          card_mod:
            style: "ha-card {\n  /* Remove default card styling */\n  --ha-card-background:\
              \ none;\n  --ha-card-box-shadow: none;\n  --ha-card-border-width: 0;\n\
              \n  /* Make card non-responsive to select and pointer */\n  user-select:\
              \ none;\n  pointer-events: none;\n}\n"
        - type: map
          entities:
            - entity: person.[[person]]
          aspect_ratio: '4:3'
          hours_to_show: 1
          auto_fit: true
          card_mod:
            style:
              .: ":host {\n  /* Define Person State colors. Can be added to theme\
                \ */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n \
                \ --state-person-unknown: var(--grey-color);\n\n  /* Set person state\
                \ color */\n  --state-person:\n  {% if is_state(config.entities[0].entity,\
                \ ['home', 'not_home', 'unknown']) %}\n    var(--state-person-{{ states(config.entities[0].entity)\
                \ | replace('_', '-') }})\n  {% else %}\n    var(--state-person-zone)\n\
                \  {% endif %};\n}\nha-card {\n  /* Remove default card styling without\
                \ affecting child elements */\n  box-shadow: none;\n  border-width:\
                \ 0;\n  /*border-radius: 0px 0px var(--ha-card-border-radius, 12px)\
                \ var(--ha-card-border-radius, 12px);*/\n  transition: all 0s;\n}\n\
                ha-icon-button {\n  /* Position center button */\n  bottom: 12px;\n\
                \  left: 12px !important;\n  top: auto !important;\n\n  /* Style center\
                \ button to match Chip */\n  color: var(--deep-orange-color) !important;\n\
                \  background: color-mix(in srgb, var(--deep-orange-color) 20%, transparent);\n\
                \  border-radius: var(--mush-chip-border-radius, 19px);\n  border:\
                \ var(--ha-card-border-width, 1px) solid var(--ha-card-border-color,\
                \ var(--divider-color, #e0e0e0)) !important;\n}\n"
              ha-map $ ha-entity-marker $: ".marker {\n  /* Style person marker &\
                \ adjust position to avoid blocking waypoints */\n  border: 3px solid\
                \ var(--state-person) !important;\n  border-radius: 50% 50% 50% 0px\
                \ !important;\n  transform: rotate(-45deg) translate(50%, -50%);\n\
                \  overflow: visible !important;\n  background: var(--state-person)\
                \ !important;\n}\n.entity-picture {\n  /* Correct orientation of person\
                \ avatar */\n  transform: rotate(45deg);\n  border-radius: 50%;\n\
                }\n"
              ha-map $: "path:first-child {\n  /* Style accuracy radius */\n  fill:\
                \ color-mix(in srgb, var(--state-person) 50%, transparent);\n  stroke-width:\
                \ 0px;\n}\npath:nth-child(even) {\n  /* Styling for waypoints */\n\
                \  stroke: var(--primary-color);\n  fill: var(--primary-color);\n\
                \  stroke-width: 4px;\n}\npath:nth-child(odd):not(:first-child) {\n\
                \  /* Styling for lines */\n  stroke: var(--primary-color);\n  stroke-width:\
                \ 4px;\n}\n.leaflet-control-attribution {\n  /* Style attribution\
                \ text */\n  background: rgba(var(--rgb-card-background-color), 0.2)\
                \ !important;\n  font-size: 8px;\n}\n.leaflet-container a {\n  /*\
                \ Set color of zoom icons & attribution text */\n  color: var(--secondary-text-color);\n\
                }\n.leaflet-control-zoom-in,\n.leaflet-control-zoom-out {\n  /* Style\
                \ zoom buttons like Chips */\n  border-radius: var(--mush-chip-border-radius,\
                \ 19px) !important;\n  padding: 3px;\n  background: rgb(var(--rgb-secondary-text-color),\
                \ 0.2) !important;\n  margin: 8px 12px 0px;\n  border: var(--ha-card-border-width,\
                \ 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0))\
                \ !important;\n}\n.leaflet-top {\n  /* Move zoom buttons to bottom\
                \ of map */\n  bottom: 0px !important;\n}\n.leaflet-control-zoom {\n\
                \  /* Allow buttons to be moved */\n  position: absolute !important;\n\
                \n  /* Adjust spacing for border */\n  bottom: calc(2 * var(--ha-card-border-width,\
                \ 1px) + 56px);\n\n  /* Remove extra margin */\n  margin: 0px !important;\n\
                \n  /* Remove zoom control border */\n  border: none !important;\n\
                }\n"
              ha-icon-button $ mwc-icon-button $: "button {\n  /* Size center button\
                \ to match Chip */\n  height: var(--mush-chip-height, 36px) !important;\n\
                \  width: var(--mush-chip-height, 36px) !important;\n  --mdc-icon-size:\
                \ 22px;\n}\n"
  uptime_card:
    default:
      - name: Uptime
      - icon: mdi:cloud-arrow-up-outline
      - ko_icon: mdi:exclamation-thick
      - ok: 'on'
      - ko: 'off'
      - hours: 72
      - amount: 72
      - alias_ok: Online
      - alias_ko: Offline
    card:
      type: custom:uptime-card
      entity: '[[entity]]'
      title_template: '[[name]]'
      icon: '[[icon]]'
      ko_icon: '[[ko_icon]]'
      ok: '[[ok]]'
      ko: '[[ko]]'
      hours_to_show: '[[hours]]'
      update_interval: 30
      init:
        animation: raise
      alias:
        ok: '[[alias_ok]]'
        ko: '[[alias_ko]]'
      icon_adaptive_color: true
      title_adaptive_color: true
      color:
        ok: var(--green-color)
        ko: var(--disabled-color)
        half: var(--blue-grey-color)
        none: var(--black-color)
      bar:
        spacing: 1
        height: 20
        round: 0
        amount: '[[amount]]'
      show:
        average: true
        status: true
        title: true
        header: true
        icon: true
        timeline: true
        footer: true
      alignment:
        status: spaced
        header: left
        icon_first: true
      tap_action:
        action: more-info
      tooltip:
        animation: true
        hour24: false
  windows_updates_list:
    card:
      type: markdown
      card_mod:
        style: "ha-card {\n  --ha-card-background: none\n}\n"
      content: '### {{ state_attr("[[entity]]", "friendly_name") }}: {{ states("[[entity]]")
        }}

        {% for item in state_attr("[[entity]]", "WindowsUpdates") %} __{{ item.Title
        }}__ <blockquote> {{ item.Description }}<br> <a href="{{ item.SupportUrl }}">Support
        Link</a>{% if item.KbArticleIDs %} | <a href="https://catalog.update.microsoft.com/Search.aspx?q={{
        item.KbArticleIDs[0] }}">KB Article</a>{% endif %} </blockquote> {% endfor
        %}'
  vacuum_mopman:
    card:
      type: vertical-stack
      cards:
        - type: custom:xiaomi-vacuum-map-card
          map_source:
            camera: camera.dustin_mopman_map
          calibration_source:
            camera: true
          entity: vacuum.dustin_mopman
          vacuum_platform: Tasshack/dreame-vacuum
          map_modes:
            - template: vacuum_clean_zone
            - template: vacuum_clean_point
            - template: vacuum_clean_segment
              predefined_selections:
                - id: '1'
                  icon:
                    name: mdi:home-outline
                    x: 750
                    y: 150
                  label:
                    text: Family Room
                    x: 750
                    y: 150
                    offset_y: 35
                  outline:
                    - - -3000
                      - -3200
                    - - 5650
                      - -3200
                    - - 5650
                      - 2800
                    - - -3000
                      - 2800
                - id: '2'
                  icon:
                    name: mdi:home-outline
                    x: -7050
                    y: -5950
                  label:
                    text: Josh Office
                    x: -7050
                    y: -5950
                    offset_y: 35
                  outline:
                    - - -8400
                      - -7900
                    - - -4800
                      - -7900
                    - - -4800
                      - -4000
                    - - -8400
                      - -4000
                - id: '3'
                  icon:
                    name: mdi:home-outline
                    x: -2600
                    y: -2250
                  label:
                    text: Under Stairs
                    x: -2600
                    y: -2250
                    offset_y: 35
                  outline:
                    - - -3000
                      - -3850
                    - - -2100
                      - -3850
                    - - -2100
                      - -700
                    - - -3000
                      - -700
                - id: '4'
                  icon:
                    name: mdi:foot-print
                    x: -2800
                    y: -4550
                  label:
                    text: Corridor
                    x: -2800
                    y: -4550
                    offset_y: 35
                  outline:
                    - - -4850
                      - -5250
                    - - -800
                      - -5250
                    - - -800
                      - -3200
                    - - -4850
                      - -3200
                - id: '5'
                  icon:
                    name: mdi:home-outline
                    x: -250
                    y: -6800
                  label:
                    text: Ethan's Bedroom
                    x: -250
                    y: -6800
                    offset_y: 35
                  outline:
                    - - -2100
                      - -8350
                    - - 1800
                      - -8350
                    - - 1800
                      - -4650
                    - - -2100
                      - -4650
                - id: '6'
                  icon:
                    name: mdi:toilet
                    x: -3450
                    y: -6400
                  label:
                    text: Bathroom
                    x: -3450
                    y: -6400
                    offset_y: 35
                  outline:
                    - - -4550
                      - -8300
                    - - -2250
                      - -8300
                    - - -2250
                      - -5200
                    - - -4550
                      - -5200
        - type: custom:mod-card
          style:
            hui-grid-card$: "#root {\n  display: flex !important;\n  flex-wrap: wrap;\n\
              \  justify-content: space-between;\n}\nmushroom-template-badge, hui-conditional-card\
              \ {\n  flex: 0 0 auto !important;\n}\n"
          card:
            type: grid
            square: false
            cards:
              - type: custom:button-card
                template: badge
                entity: sensor.dustin_mopman_filter_time_left
                name: Filter
                icon: mdi:air-filter
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.dustin_mopman_main_brush_time_left
                name: Main Brush
                icon: mdi:car-turbocharger
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.dustin_mopman_mop_pad_time_left
                name: Mop Pad
                icon: mdi:hydro-power
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.dustin_mopman_sensor_dirty_time_left
                name: Sensors
                icon: mdi:radar
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.dustin_mopman_side_brush_time_left
                name: Side Brush
                icon: mdi:pinwheel-outline
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
        - type: custom:mushroom-chips-card
          alignment: center
          chips:
            - type: template
              content: Clean Washboard
              icon: mdi:wiper-wash
              icon_color: red
              tap_action:
                action: none
              hold_action:
                action: perform-action
                perform_action: vacuum.send_command
                target:
                  entity_id: vacuum.dustin_mopman
                data:
                  command: action
                  params:
                    siid: 4
                    aiid: 4
                    in:
                      - value: 5,1
                        piid: 10
              card_mod:
                style: "ha-card {\n  /* Style Chip like Mushroom button */\n  --chip-background:\
                  \ rgba(var(--rgb-red), 0.2);\n  --chip-border-radius: var(--mush-control-border-radius,\
                  \ 12px);\n  --chip-height: var(--mush-control-height, 42px);\n \
                  \ --chip-box-shadow: none;\n  user-select: none;\n}\nha-card:active\
                  \ {\n  /* Add effect to give feedback on button press */\n  --chip-background:\
                  \ rgba(var(--rgb-red), 0.4);\n}\n"
  vacuum_r2dee2:
    card:
      type: vertical-stack
      cards:
        - type: custom:xiaomi-vacuum-map-card
          map_source:
            camera: camera.r2dee2_map
          calibration_source:
            camera: true
          entity: vacuum.r2dee2
          vacuum_platform: Tasshack/dreame-vacuum
          map_modes:
            - template: vacuum_clean_zone
            - template: vacuum_clean_point
            - template: vacuum_clean_segment
              predefined_selections:
                - id: '1'
                  icon:
                    name: mdi:toilet
                    x: -1050
                    y: 9150
                  label:
                    text: Main Bathroom
                    x: -1050
                    y: 9150
                    offset_y: 35
                  outline:
                    - - -2300
                      - 7900
                    - - 200
                      - 7900
                    - - 200
                      - 9600
                    - - -2300
                      - 9600
                - id: '2'
                  icon:
                    name: mdi:chair-rolling
                    x: -6150
                    y: 9250
                  label:
                    text: Amy's Office
                    x: -6150
                    y: 9250
                    offset_y: 35
                  outline:
                    - - -7650
                      - 7600
                    - - -4750
                      - 7600
                    - - -4350
                      - 8150
                    - - -4350
                      - 10650
                    - - -7650
                      - 10650
                - id: '3'
                  icon:
                    name: mdi:bed-double
                    x: 2400
                    y: 7850
                  label:
                    text: Main Bedroom
                    x: 2400
                    y: 7850
                    offset_y: 35
                  outline:
                    - - -800
                      - 6800
                    - - 4550
                      - 6800
                    - - 4550
                      - 10700
                    - - 200
                      - 10700
                    - - 200
                      - 7900
                    - - -800
                      - 7900
                - id: '4'
                  icon:
                    name: mdi:bed
                    x: -6200
                    y: 6500
                  label:
                    text: Emma's Bedroom
                    x: -6200
                    y: 6500
                    offset_y: 35
                  outline:
                    - - -8250
                      - 4900
                    - - -4100
                      - 4900
                    - - -4100
                      - 6600
                    - - -4750
                      - 7600
                    - - -8250
                      - 7600
                - id: '5'
                  icon:
                    name: mdi:toilet
                    x: -2700
                    y: 5850
                  label:
                    text: Bathroom
                    x: -2700
                    y: 5850
                    offset_y: 35
                  outline:
                    - - -3250
                      - 5000
                    - - -2250
                      - 5000
                    - - -2250
                      - 6600
                    - - -3250
                      - 6600
                - id: '6'
                  icon:
                    name: mdi:walk
                    x: -2750
                    y: 7200
                  label:
                    text: Hallway
                    x: -2750
                    y: 7200
                    offset_y: 35
                  outline:
                    - - -4100
                      - 6600
                    - - -800
                      - 6600
                    - - -800
                      - 7850
                    - - -3650
                      - 7850
                    - - -4350
                      - 8150
                    - - -4750
                      - 7600
                - id: '7'
                  icon:
                    name: mdi:home-outline
                    x: -4800
                    y: 3200
                  label:
                    text: Entryway
                    x: -4800
                    y: 3200
                    offset_y: 35
                  outline:
                    - - -5500
                      - 2250
                    - - -4050
                      - 2250
                    - - -4050
                      - 4050
                    - - -5500
                      - 4050
                - id: '8'
                  icon:
                    name: mdi:home-outline
                    x: -1700
                    y: 850
                  label:
                    text: Mud Room
                    x: -1700
                    y: 850
                    offset_y: 35
                  outline:
                    - - -2450
                      - -100
                    - - -850
                      - -100
                    - - -850
                      - 1650
                    - - -2450
                      - 1650
                - id: '9'
                  icon:
                    name: mdi:table-chair
                    x: 1650
                    y: 200
                  label:
                    text: Dining Room
                    x: 1650
                    y: 200
                    offset_y: 35
                  outline:
                    - - -850
                      - -1450
                    - - 4250
                      - -1450
                    - - 4250
                      - 1850
                    - - -850
                      - 1850
                - id: '10'
                  icon:
                    name: mdi:tshirt-v
                    x: -2800
                    y: 9000
                  label:
                    text: Main Closet
                    x: -2800
                    y: 9000
                    offset_y: 35
                  outline:
                    - - -3650
                      - 7850
                    - - -2300
                      - 7850
                    - - -2300
                      - 10300
                    - - -3650
                      - 10300
                - id: '11'
                  icon:
                    name: mdi:washing-machine
                    x: -1800
                    y: -600
                  label:
                    text: Laundry
                    x: -1800
                    y: -600
                    offset_y: 35
                  outline:
                    - - -2450
                      - -1100
                    - - -1050
                      - -1100
                    - - -1050
                      - -100
                    - - -2450
                      - -100
                - id: '12'
                  icon:
                    name: mdi:chef-hat
                    x: 1750
                    y: -2600
                  label:
                    text: Kitchen
                    x: 1750
                    y: -2600
                    offset_y: 35
                  outline:
                    - - 0
                      - -3150
                    - - 3350
                      - -3150
                    - - 3350
                      - -1450
                    - - 0
                      - -1450
                - id: '13'
                  icon:
                    name: mdi:sofa-outline
                    x: -850
                    y: 4250
                  label:
                    text: Living Room
                    x: -850
                    y: 4250
                    offset_y: 35
                  outline:
                    - - 4100
                      - 1850
                    - - -4000
                      - 1850
                    - - -4000
                      - 4200
                    - - -2150
                      - 4200
                    - - -2150
                      - 6700
                    - - 4100
                      - 6700
        - type: custom:mod-card
          style:
            hui-grid-card$: "#root {\n  display: flex !important;\n  flex-wrap: wrap;\n\
              \  justify-content: space-between;\n}\nmushroom-template-badge, hui-conditional-card\
              \ {\n  flex: 0 0 auto !important;\n}\n"
          card:
            type: grid
            square: false
            cards:
              - type: custom:button-card
                template: badge
                entity: sensor.r2dee2_filter_time_left
                name: Filter
                icon: mdi:air-filter
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.r2dee2_main_brush_time_left
                name: Main Brush
                icon: mdi:car-turbocharger
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.r2dee2_mop_pad_time_left
                name: Mop Pad
                icon: mdi:hydro-power
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.r2dee2_sensor_dirty_time_left
                name: Sensors
                icon: mdi:radar
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                template: badge
                entity: sensor.r2dee2_side_brush_time_left
                name: Side Brush
                icon: mdi:pinwheel-outline
                label: '[[[ return helpers.localize(entity); ]]]

                  '
                tap_action:
                  action: more-info
                variables:
                  color: "[[[\n  if (entity.state <= 10) return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 5
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--red-color) 40%, var(--card-background-color)
                            100%)
                      icon:
                        - color: var(--white-color)
                  - value: 10
                    operator: <=
                    styles:
                      card:
                        - background: color-mix(in srgb, var(--orange-color) 40%,
                            var(--card-background-color) 100%)
                      icon:
                        - color: var(--white-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
        - type: custom:mushroom-chips-card
          alignment: center
          chips:
            - type: template
              content: Clean Washboard
              icon: mdi:wiper-wash
              icon_color: red
              tap_action:
                action: none
              hold_action:
                action: perform-action
                perform_action: vacuum.send_command
                target:
                  entity_id: vacuum.r2dee2
                data:
                  command: action
                  params:
                    siid: 4
                    aiid: 4
                    in:
                      - value: 5,1
                        piid: 10
              card_mod:
                style: "ha-card {\n  /* Style Chip like Mushroom button */\n  --chip-background:\
                  \ rgba(var(--rgb-red), 0.2);\n  --chip-border-radius: var(--mush-control-border-radius,\
                  \ 12px);\n  --chip-height: var(--mush-control-height, 42px);\n \
                  \ --chip-box-shadow: none;\n  user-select: none;\n}\nha-card:active\
                  \ {\n  /* Add effect to give feedback on button press */\n  --chip-background:\
                  \ rgba(var(--rgb-red), 0.4);\n}\n"
views:
  - title: Main
    type: sections
    path: main
    max_columns: 1
    icon: mdi:home-assistant
    sections:
      - type: grid
        cards:
          - type: custom:mod-card
            style:
              hui-grid-card$: "#root {\n  display: flex !important;\n  flex-wrap:\
                \ wrap;\n  justify-content: space-between;\n}\nmushroom-template-badge,\
                \ hui-conditional-card {\n  flex: 0 0 auto !important;\n}\n"
            card:
              type: grid
              square: false
              cards:
                - type: custom:mushroom-template-badge
                  entity: weather.owm_daily
                  label: Weather
                  icon: '{% from "util.jinja" import weather_icon %} {{ weather_icon(entity)
                    }}'
                  content: '{{ state_translated(entity) }} / {{ states("sensor.ecowitt_outdoor_temperature")
                    | round() }} {{ state_attr("sensor.ecowitt_outdoor_temperature",
                    "unit_of_measurement") }}'
                  tap_action:
                    action: navigate
                    navigation_path: '#weather'
                - type: custom:mushroom-template-badge
                  entity: sensor.ecobee_mode
                  label: Climate
                  content: '{{ states("sensor.ecobee_current_temperature") | round(0)
                    }} {{ state_attr("sensor.ecobee_current_temperature", "unit_of_measurement")
                    }}'
                  icon: mdi:thermostat
                  color: "{% if is_state(entity, \"Heating\") %}\n  red\n{% elif is_state(entity,\
                    \ \"Cooling\") %}\n  light-blue\n{% elif is_state(entity, \"Fan\"\
                    ) %}\n  amber\n{% elif is_state(entity, \"Off\") %}\n  grey\n\
                    {% else %}\n  blue-grey\n{% endif %}"
                  tap_action:
                    action: navigate
                    navigation_path: climate
                - type: custom:mushroom-template-badge
                  entity: sensor.airgradient_kitchen_pm_2_5_aqi
                  label: AQI
                  content: '{{ states(entity) | int(default="?") }} / {{ states("sensor.airnow_air_quality_index")
                    | int(default="?") }}'
                  icon: '{{ iif(has_value(entity), "mdi:blur", "mdi:blur-off") }}'
                  color: "{% if has_value(entity) %}\n  {% set level = states(entity)\
                    \ | float(default=0) %}\n  {% if level >= 300 %}\n    red\n  {%\
                    \ elif level >= 200 %}\n    purple\n  {% elif level >= 150 %}\n\
                    \    pink\n  {% elif level >= 100 %}\n    orange\n  {% elif level\
                    \ >= 50 %}\n    yellow\n  {% elif level >= 0 %}\n    green\n \
                    \ {% endif %}\n{% else %}\n  grey\n{% endif %}"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Air Quality
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: vertical-stack
                              cards:
                                - type: custom:mushroom-title-card
                                  title: Inside
                                - type: custom:bar-card
                                  card_mod:
                                    style: "bar-card-name,\nbar-card-value {\n  font-weight:\
                                      \ 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                                      }\n"
                                  animation:
                                    state: 'on'
                                  positions:
                                    indicator: inside
                                  entities:
                                    - entity: sensor.airgradient_kitchen_pm_2_5_aqi
                                      name: AQI
                                      min: 0
                                      max: 400
                                      severity:
                                        - color: var(--green-color)
                                          from: '0'
                                          to: '50'
                                        - color: var(--yellow-color)
                                          from: '50'
                                          to: '100'
                                        - color: var(--orange-color)
                                          from: '100'
                                          to: '150'
                                        - color: var(--red-color)
                                          from: '150'
                                          to: '200'
                                        - color: var(--purple-color)
                                          from: '200'
                                          to: '300'
                                        - color: var(--pink-color)
                                          from: '300'
                                          to: '400'
                                    - entity: sensor.airgradient_kitchen_pm_2_5
                                      name: PM 2.5
                                      min: 0
                                      max: 100
                                      severity:
                                        - color: var(--green-color)
                                          from: '0'
                                          to: '12'
                                        - color: var(--yellow-color)
                                          from: '12'
                                          to: '35'
                                        - color: var(--orange-color)
                                          from: '35'
                                          to: '50'
                                        - color: var(--red-color)
                                          from: '50'
                                          to: '100'
                                    - entity: sensor.airgradient_kitchen_pm_10_0
                                      name: PM 10
                                      min: 0
                                      max: 100
                                      severity:
                                        - color: var(--green-color)
                                          from: '0'
                                          to: '12'
                                        - color: var(--yellow-color)
                                          from: '12'
                                          to: '35'
                                        - color: var(--orange-color)
                                          from: '35'
                                          to: '50'
                                        - color: var(--red-color)
                                          from: '50'
                                          to: '100'
                                    - entity: sensor.airgradient_kitchen_voc_index
                                      name: VOC
                                      min: 0
                                      max: 500
                                      severity:
                                        - color: var(--green-color)
                                          from: '0'
                                          to: '150'
                                        - color: var(--yellow-color)
                                          from: '150'
                                          to: '250'
                                        - color: var(--orange-color)
                                          from: '250'
                                          to: '400'
                                        - color: var(--red-color)
                                          from: '400'
                                          to: '500'
                                    - entity: sensor.airgradient_kitchen_nox_index
                                      name: NOx
                                      min: 0
                                      max: 500
                                      severity:
                                        - color: var(--green-color)
                                          from: '0'
                                          to: '30'
                                        - color: var(--yellow-color)
                                          from: '30'
                                          to: '150'
                                        - color: var(--orange-color)
                                          from: '150'
                                          to: '300'
                                        - color: var(--red-color)
                                          from: '300'
                                          to: '500'
                            - type: vertical-stack
                              cards:
                                - type: custom:mushroom-title-card
                                  title: Outside
                                - type: custom:mushroom-template-card
                                  entity: sensor.airnow_air_quality_index
                                  primary: 'AQI: {{ state_attr(entity, "description")
                                    }}'
                                  multiline_secondary: true
                                  fill_container: false
                                  tap_action:
                                    action: none
                                  hold_action:
                                    action: none
                                  double_tap_action:
                                    action: none
                                - type: custom:bar-card
                                  card_mod:
                                    style: "bar-card-name,\nbar-card-value {\n  font-weight:\
                                      \ 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                                      }\n"
                                  animation:
                                    state: 'on'
                                  positions:
                                    indicator: inside
                                  entities:
                                    - entity: sensor.airnow_air_quality_index
                                      name: AQI
                                      min: 0
                                      max: 400
                                      severity:
                                        - color: var(--green-color)
                                          from: '0'
                                          to: '50'
                                        - color: var(--yellow-color)
                                          from: '50'
                                          to: '100'
                                        - color: var(--orange-color)
                                          from: '100'
                                          to: '150'
                                        - color: var(--red-color)
                                          from: '150'
                                          to: '200'
                                        - color: var(--purple-color)
                                          from: '200'
                                          to: '300'
                                        - color: var(--pink-color)
                                          from: '300'
                                          to: '400'
                                    - entity: sensor.airnow_pm2_5
                                      name: PM 2.5
                                      min: 0
                                      max: 100
                                      severity:
                                        - color: var(--green-color)
                                          from: '0'
                                          to: '12'
                                        - color: var(--yellow-color)
                                          from: '12'
                                          to: '35'
                                        - color: var(--orange-color)
                                          from: '35'
                                          to: '50'
                                        - color: var(--red-color)
                                          from: '50'
                                          to: '100'
                            - type: custom:mini-graph-card
                              name: CO2 Levels
                              icon: mdi:molecule-co2
                              show:
                                labels: false
                              entities:
                                - entity: sensor.airgradient_kitchen_co2
                                  name: Kitchen
                                  color: var(--amber-color)
                                  show_state: true
                                  show_points: false
                                - entity: sensor.apollo_msr_1_office_co2
                                  name: Office
                                  color: var(--blue-color)
                                  show_state: true
                                  show_points: false
                              line_width: 3
                              font_size: 75
                              hours_to_show: 30
                              points_per_hour: 12
                              update_interval: 300
                              animate: true
                - type: custom:mushroom-template-badge
                  entity: sensor.allergy_index_today
                  content: '{{ states(entity) | float(default=0) }}'
                  icon: mdi:flower-pollen
                  color: "{% set level = states(entity) | float(default=0) %}\n{%\
                    \ if level >= 9.7 %}\n  red\n{% elif level >= 7.3 %}\n  orange\n\
                    {% elif level >= 4.9 %}\n  yellow\n{% elif level >= 2.5 %}\n \
                    \ lime\n{% else %}\n  green\n{% endif %}"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Allergy
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:mushroom-title-card
                              title: Allergens
                            - type: custom:mushroom-template-card
                              entity: sensor.allergy_index_today
                              secondary: "{%- set ns = namespace(allergens=[]) -%}\
                                \ {%- for id in range(1, 4) -%}\n  {%- set attr =\
                                \ \"allergen_name_\" ~ id -%}\n  {%- if not state_attr(entity,\
                                \ attr) in [\"unknown\", \"unavailable\", None] -%}\n\
                                \    {%- set ns.allergens = ns.allergens + [ state_attr(entity,\
                                \ attr) ] -%}\n  {%- endif -%}\n{%- endfor -%} {{\
                                \ ns.allergens | join(\", \") }}\n{{ state_attr(\"\
                                sensor.allergy_index_forecasted_average\", \"outlook\"\
                                ) | default(\"\", true) }}"
                              multiline_secondary: true
                              tap_action:
                                action: none
                              hold_action:
                                action: none
                              double_tap_action:
                                action: none
                              card_mod:
                                style: "ha-card {\n  /* Make card non-responsive to\
                                  \ select and pointer */\n  user-select: none;\n\
                                  \  pointer-events: none;\n}\n"
                            - type: custom:mushroom-title-card
                              title: Forecast
                              subtitle: Allergy
                            - type: custom:bar-card
                              card_mod:
                                style: "bar-card-name,\nbar-card-value {\n  font-weight:\
                                  \ 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                                  }\n"
                              entities:
                                - entity: sensor.allergy_index_today
                                - entity: sensor.allergy_index_tomorrow
                                - entity: sensor.allergy_index_forecasted_average
                              min: 0
                              max: 12
                              decimal: 1
                              animation:
                                state: 'on'
                              positions:
                                indicator: inside
                              severity:
                                - color: var(--green-color)
                                  from: '0'
                                  to: '2.5'
                                - color: var(--light-green-color)
                                  from: '2.5'
                                  to: '4.9'
                                - color: var(--amber-color)
                                  from: '4.9'
                                  to: '7.3'
                                - color: var(--orange-color)
                                  from: '7.3'
                                  to: '9.7'
                                - color: var(--red-color)
                                  from: '9.7'
                                  to: '12'
                            - type: custom:mushroom-title-card
                              subtitle: Asthma
                            - type: custom:bar-card
                              card_mod:
                                style: "bar-card-name,\nbar-card-value {\n  font-weight:\
                                  \ 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                                  }\n"
                              entities:
                                - entity: sensor.asthma_index_today
                                - entity: sensor.asthma_index_tomorrow
                                - entity: sensor.asthma_index_forecasted_average
                              min: 0
                              max: 12
                              decimal: 1
                              animation:
                                state: 'on'
                              positions:
                                indicator: inside
                              severity:
                                - color: var(--green-color)
                                  from: '0'
                                  to: '2.5'
                                - color: var(--light-green-color)
                                  from: '2.5'
                                  to: '4.9'
                                - color: var(--amber-color)
                                  from: '4.9'
                                  to: '7.3'
                                - color: var(--orange-color)
                                  from: '7.3'
                                  to: '9.7'
                                - color: var(--red-color)
                                  from: '9.7'
                                  to: '12'
                            - type: custom:mushroom-title-card
                              subtitle: Cold
                            - type: custom:bar-card
                              card_mod:
                                style: "bar-card-name,\nbar-card-value {\n  font-weight:\
                                  \ 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                                  }\n"
                              entities:
                                - entity: sensor.cold_flu_index_today
                                - entity: sensor.cold_flu_forecasted_average
                              min: 0
                              max: 12
                              decimal: 1
                              animation:
                                state: 'on'
                              positions:
                                indicator: inside
                              severity:
                                - color: var(--green-color)
                                  from: '0'
                                  to: '2.5'
                                - color: var(--light-green-color)
                                  from: '2.5'
                                  to: '4.9'
                                - color: var(--amber-color)
                                  from: '4.9'
                                  to: '7.3'
                                - color: var(--orange-color)
                                  from: '7.3'
                                  to: '9.7'
                                - color: var(--red-color)
                                  from: '9.7'
                                  to: '12'
                  label: Allergy
          - type: custom:mod-card
            style:
              hui-grid-card$: "#root {\n  display: flex !important;\n  flex-wrap:\
                \ wrap;\n  justify-content: space-between;\n}\nmushroom-template-badge,\
                \ hui-conditional-card {\n  flex: 0 0 auto !important;\n}\n"
            card:
              type: grid
              square: false
              cards:
                - type: custom:mushroom-template-badge
                  entity: sensor.garbage_collection
                  label: Garbage
                  content: "{% if is_state(\"input_boolean.garbage_collection\", \"\
                    on\") %}\n  At Curb\n{% elif is_state(entity, \"0\") %}\n  Today\n\
                    {% elif is_state(entity, \"1\") %}\n  Tomorrow\n{% else %}\n \
                    \ {{ state_attr(entity, \"days\") }} days\n{% endif %}"
                  icon: mdi:trash-can
                  color: "{% if is_state(\"input_boolean.garbage_collection\", \"\
                    on\") %}\n  green\n{% elif is_state(entity, \"0\") %}\n  red\n\
                    {% elif is_state(entity, \"1\") %}\n  yellow\n{% else %}\n  grey\n\
                    {% endif %}"
                  tap_action:
                    action: more-info
                  hold_action:
                    action: perform-action
                    perform_action: script.collection_at_curb
                    target: {}
                    data:
                      entity: sensor.garbage_collection
                - type: custom:mushroom-template-badge
                  entity: sensor.recycle_collection
                  label: Recycling
                  content: "{% if is_state(\"input_boolean.recycle_collection\", \"\
                    on\") %}\n  At Curb\n{% elif is_state(entity, \"0\") %}\n  Today\n\
                    {% elif is_state(entity, \"1\") %}\n  Tomorrow\n{% else %}\n \
                    \ {{ state_attr(entity, \"days\") }} days\n{% endif %}"
                  icon: mdi:recycle
                  color: "{% if is_state(\"input_boolean.recycle_collection\", \"\
                    on\") %}\n  green\n{% elif is_state(entity, \"0\") %}\n  red\n\
                    {% elif is_state(entity, \"1\") %}\n  yellow\n{% else %}\n  grey\n\
                    {% endif %}"
                  tap_action:
                    action: more-info
                  hold_action:
                    action: perform-action
                    perform_action: script.collection_at_curb
                    target: {}
                    data:
                      entity: sensor.recycle_collection
                - type: custom:button-card
                  template: badge
                  entity: vacuum.r2dee2
                  name: R2Dee2
                  icon: mdi:robot-vacuum
                  label: "[[[\n  if (entity.state === 'returning') return 'Returning';\n\
                    \  else return helpers.localize(entity);\n]]]\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: R2Dee2
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:streamline-card
                              template: vacuum_r2dee2
                  variables:
                    color: "[[[\n  if (entity.state === 'cleaning') return 'var(--cyan-color)';\n\
                      \  else if (entity.state === 'charging') return 'var(--orange-color)';\n\
                      \  else if (entity.state === 'paused') return 'var(--yellow-color)';\n\
                      \  else if (entity.state === 'returning') return 'var(--purple-color)';\n\
                      \  else if (entity.state === 'docked') return 'var(--blue-grey-color)';\n\
                      \  else return 'var(--grey-color)';\n]]]\n"
                  state:
                    - value: cleaning
                      icon: mdi:robot-vacuum
                      styles:
                        icon:
                          - animation: cleaning 10s linear infinite
                  styles:
                    icon:
                      - color: '[[[ return variables.color ]]]'
                  extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                    \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                    \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                    \ cleaning {\n    0% { transform: translate(0px, 5px) rotate(0deg);\
                    \ }\n    2% { transform: translate(0px, 5px) rotate(-45deg); }\n\
                    \n    10% { transform: translate(-5px, 0px) rotate(-45deg); }\n\
                    \    12% { transform: translate(-5px, 0px) rotate(45deg); }\n\n\
                    \    20% { transform: translate(0px, -5px) rotate(45deg); }\n\
                    \    22% { transform: translate(0px, -5px) rotate(135deg); }\n\
                    \n    30% { transform: translate(5px, 0px) rotate(135deg); }\n\
                    \    32% { transform: translate(5px, 0px) rotate(225deg); }\n\n\
                    \    40% { transform: translate(0px, 5px) rotate(225deg); }\n\
                    \    42% { transform: translate(0px, 5px) rotate(45deg); }\n \
                    \   \n    50% { transform: translate(5px, 0px) rotate(45deg);\
                    \ }\n    52% { transform: translate(5px, 0px) rotate(-45deg);\
                    \ }\n\n    60% { transform: translate(0px, -5px) rotate(-45deg);\
                    \ }\n    62% { transform: translate(0px, -5px) rotate(-135deg);\
                    \ }\n\n    70% { transform: translate(-5px, 0px) rotate(-135deg);\
                    \ }\n    72% { transform: translate(-5px, 0px) rotate(-225deg);\
                    \ }\n\n    80% { transform: translate(0px, 5px) rotate(-225deg);\
                    \ }\n    82% { transform: translate(0px, 5px) rotate(-180deg);\
                    \ }\n\n    90% { transform: translate(0px, 5px) rotate(0deg);\
                    \ }\n    100% { transform: translate(0px, 5px) rotate(0deg); }\n\
                    \  }\n  `\n  ]]]\n"
                - type: custom:button-card
                  template: badge
                  entity: vacuum.dustin_mopman
                  name: D. Mopman
                  icon: mdi:robot-vacuum
                  label: "[[[\n  if (entity.state === 'returning') return 'Returning';\n\
                    \  else return helpers.localize(entity);\n]]]\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Dustin Mopman
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:streamline-card
                              template: vacuum_mopman
                  variables:
                    color: "[[[\n  if (entity.state === 'cleaning') return 'var(--cyan-color)';\n\
                      \  else if (entity.state === 'charging') return 'var(--orange-color)';\n\
                      \  else if (entity.state === 'paused') return 'var(--yellow-color)';\n\
                      \  else if (entity.state === 'returning') return 'var(--purple-color)';\n\
                      \  else if (entity.state === 'docked') return 'var(--blue-grey-color)';\n\
                      \  else return 'var(--grey-color)';\n]]]\n"
                  state:
                    - value: cleaning
                      icon: mdi:robot-vacuum
                      styles:
                        icon:
                          - animation: cleaning 10s linear infinite
                  styles:
                    icon:
                      - color: '[[[ return variables.color ]]]'
                  extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                    \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                    \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                    \ cleaning {\n    0% { transform: translate(0px, 5px) rotate(0deg);\
                    \ }\n    2% { transform: translate(0px, 5px) rotate(-45deg); }\n\
                    \n    10% { transform: translate(-5px, 0px) rotate(-45deg); }\n\
                    \    12% { transform: translate(-5px, 0px) rotate(45deg); }\n\n\
                    \    20% { transform: translate(0px, -5px) rotate(45deg); }\n\
                    \    22% { transform: translate(0px, -5px) rotate(135deg); }\n\
                    \n    30% { transform: translate(5px, 0px) rotate(135deg); }\n\
                    \    32% { transform: translate(5px, 0px) rotate(225deg); }\n\n\
                    \    40% { transform: translate(0px, 5px) rotate(225deg); }\n\
                    \    42% { transform: translate(0px, 5px) rotate(45deg); }\n \
                    \   \n    50% { transform: translate(5px, 0px) rotate(45deg);\
                    \ }\n    52% { transform: translate(5px, 0px) rotate(-45deg);\
                    \ }\n\n    60% { transform: translate(0px, -5px) rotate(-45deg);\
                    \ }\n    62% { transform: translate(0px, -5px) rotate(-135deg);\
                    \ }\n\n    70% { transform: translate(-5px, 0px) rotate(-135deg);\
                    \ }\n    72% { transform: translate(-5px, 0px) rotate(-225deg);\
                    \ }\n\n    80% { transform: translate(0px, 5px) rotate(-225deg);\
                    \ }\n    82% { transform: translate(0px, 5px) rotate(-180deg);\
                    \ }\n\n    90% { transform: translate(0px, 5px) rotate(0deg);\
                    \ }\n    100% { transform: translate(0px, 5px) rotate(0deg); }\n\
                    \  }\n  `\n  ]]]\n"
          - type: custom:mod-card
            style:
              hui-grid-card$: "#root {\n  display: flex !important;\n  flex-wrap:\
                \ wrap;\n  justify-content: space-between;\n}\nmushroom-template-badge,\
                \ hui-conditional-card {\n  flex: 0 0 auto !important;\n}\n"
            card:
              type: grid
              square: false
              cards:
                - type: custom:button-card
                  template: badge
                  entity: input_boolean.washer_status
                  name: Washer
                  icon: mdi:washing-machine-off
                  label: "[[[\n  if (entity.state === 'on') return 'Running';\n  else\
                    \ return 'Off';\n]]]\n"
                  tap_action:
                    action: more-info
                  variables:
                    color: "[[[\n  if (entity.state === 'on') return 'var(--blue-color)';\n\
                      \  else return 'var(--grey-color)';\n]]]\n"
                  state:
                    - value: 'on'
                      icon: mdi:washing-machine
                      styles:
                        icon:
                          - color: var(--blue-color)
                          - animation: shake 400ms ease-in-out infinite, drum 2s ease
                              infinite
                          - transform-origin: 50% 110%
                  extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                    \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                    \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                    \ shake {\n    0%, 100% { transform: translate(0, 0) rotate(0);\
                    \ }\n    20%  { transform: translate(0.4px, -0.4px) rotate(-4deg);\
                    \ }\n    40%  { transform: translate(-0.4px, 0.4px) rotate(4deg);\
                    \ }\n    60%  { transform: translate(0.4px, 0.4px) rotate(-4deg);\
                    \ }\n    80%  { transform: translate(-0.4px, -0.4px) rotate(4deg);\
                    \ }\n  }\n  @keyframes drum {\n    50%  { clip-path: polygon(0\
                    \ 0, 0 100%, 35% 100%, 34% 68%, 60% 41%, 71% 56%, 65% 74%, 47%\
                    \ 79%, 34% 68%, 35% 100%, 100% 100%, 100% 0); }\n  }\n  `\n  ]]]\n"
                - type: custom:button-card
                  template: badge
                  entity: input_boolean.dryer_status
                  name: Dryer
                  icon: mdi:tumble-dryer-off
                  label: "[[[\n  if (entity.state === 'on') return 'Running';\n  else\
                    \ return 'Off';\n]]]\n"
                  tap_action:
                    action: more-info
                  variables:
                    color: "[[[\n  if (entity.state === 'on') return 'var(--blue-color)';\n\
                      \  else return 'var(--grey-color)';\n]]]\n"
                  state:
                    - value: 'on'
                      icon: mdi:tumble-dryer
                      styles:
                        icon:
                          - color: var(--orange-color)
                          - animation: shake 400ms ease-in-out infinite, drum 1s infinite
                          - transform-origin: 50% 65%
                  extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                    \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                    \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                    \ shake {\n    0%, 100% { transform: rotate(4deg); }\n    50%\
                    \  { transform: rotate(-4deg); }\n  }\n  @keyframes drum {\n \
                    \   50%  { clip-path: polygon(0 0, 0 100%, 35% 100%, 36% 74%,\
                    \ 31% 43%, 61% 40%, 71% 69%, 62% 78%, 36% 73%, 35% 100%, 100%\
                    \ 100%, 100% 0); }\n  }\n  `\n  ]]]\n"
                - type: custom:button-card
                  template: badge
                  entity: sensor.ge_dishwasher_cycle_state
                  triggers_update:
                    - binary_sensor.ge_dishwasher_is_clean
                    - sensor.ge_dishwasher_duration
                    - sensor.ge_dishwasher_time_remaining
                  name: Dishwasher
                  icon: mdi:dishwasher-off
                  label: "[[[\n  if (states['binary_sensor.ge_dishwasher_is_clean'].state\
                    \ === 'on') return 'Clean';\n  else if (entity.state === 'N/A')\
                    \ return 'Off';\n  else return helpers.localize(entity);\n]]]\n"
                  tap_action:
                    action: more-info
                  variables:
                    color: "[[[\n  if (states['binary_sensor.ge_dishwasher_is_clean'].state\
                      \ === 'on') return 'var(--green-color)';\n  else if (entity.state\
                      \ === 'Pre Wash') return 'var(--purple-color)';\n  else if (entity.state\
                      \ === 'Main Wash') return 'var(--cyan-color)';\n  else if (entity.state\
                      \ === 'Rinsing') return 'var(--blue-color)';\n  else if (entity.state\
                      \ === 'Sanitizing') return 'var(--light-blue-color)';\n  else\
                      \ if (entity.state === 'Drying') return 'var(--orange-color)';\n\
                      \  else return 'var(--grey-color)';\n]]]\n"
                  state:
                    - value: "[[[\n  if (entity.state === 'N/A' && states['binary_sensor.ge_dishwasher_is_clean'].state\
                        \ === 'on') return true;\n  return false;\n]]]\n"
                      operator: template
                      icon: mdi:dishwasher
                    - value: unavailable
                    - value: N/A
                      operator: '!='
                      icon: mdi:dishwasher
                      styles:
                        icon:
                          - animation: bounce 1.5s ease-in-out infinite, wash 1s ease-in-out
                              infinite
                          - transform-origin: 50% 75%
                  styles:
                    img_cell:
                      - background: "[[[\n  var entity_remain = \"sensor.ge_dishwasher_time_remaining\"\
                          ;\n  var entity_duration = \"sensor.ge_dishwasher_duration\"\
                          ;\n\n  if (entity.state !== \"Off\"\n    && states[entity_remain].state\n\
                          \    && states[entity_duration].state\n    && states[entity_duration].state\
                          \ !== \"Off\"\n  ) {\n    var remaining = states[entity_remain].state.split(\"\
                          :\");\n    remaining = parseInt(remaining[0] * 60) + parseInt(remaining[1]);\n\
                          \    var duration = states[entity_duration].state.split(\"\
                          :\");\n    duration = parseInt(duration[0] * 60) + parseInt(duration[1]);\n\
                          \n    return `radial-gradient(var(--card-background-color)\
                          \ 60%, transparent calc(60% + 1px)), conic-gradient(${variables.color}\
                          \ ${Math.round(((duration - remaining) / duration * 100),\
                          \ 0)}% 0%, var(--card-background-color) 0% 100%)`;\n  }\n\
                          ]]]\n"
                    icon:
                      - color: '[[[ return variables.color ]]]'
                  extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                    \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                    \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                    \ bounce {\n    0%, 20%, 50%, 80%, 100% {transform: translateY(0);\
                    \ }\n    40% { transform: translateY(-1.2px) rotate(5deg); }\n\
                    \    60% { transform: translateY(-1.1px) rotate(-4deg); }\n  }\n\
                    \  @keyframes wash {\n    50% { clip-path: polygon(0 0, 0 100%,\
                    \ 35% 100%, 36% 74%, 31% 43%, 61% 40%, 71% 69%, 62% 78%, 36% 73%,\
                    \ 35% 100%, 100% 100%, 100% 0); }\n  }\n  `\n]]]\n"
                - type: custom:button-card
                  template: badge
                  entity: sensor.ge_oven_current_state
                  triggers_update:
                    - sensor.ge_oven_kitchen_timer
                    - sensor.ge_oven_kitchen_timer_duration
                    - sensor.ge_oven_cook_time_remaining
                    - sensor.ge_oven_cook_time_duration
                  name: Oven
                  icon: '[[[ return variables.icon ]]]'
                  label: "[[[\n  if (entity.state !== 'Off') {\n    return helpers.localize(entity);\n\
                    \  }\n  else if (states['sensor.ge_oven_cook_time_remaining'].state\
                    \ !== 'Off') {\n    return \"Cook Time\";\n  }\n  else if (states['sensor.ge_oven_kitchen_timer'].state\
                    \ !== 'Off') {\n    return \"Timer\";\n  }\n  else {\n    return\
                    \ helpers.localize(entity);\n  }\n]]]\n"
                  tap_action:
                    action: navigate
                    navigation_path: kitchen
                  variables:
                    icon: "[[[\n  if (states['sensor.ge_oven_cook_time_remaining'].state\
                      \ !== 'Off') return 'mdi:timer-play';\n else if (states['sensor.ge_oven_kitchen_timer'].state\
                      \ !== 'Off') return 'mdi:timer';\n else return \"mdi:stove\"\
                      ;\n]]]\n"
                    color: "[[[\n if (entity.state === 'Preheat') return 'var(--yellow-color)';\n\
                      \ else if (entity.state === 'Bake') return 'var(--red-color)';\n\
                      \ else if (entity.state === 'Air Fry') return 'var(--orange-color)';\n\
                      \ else if (entity.state === 'Convection') return 'var(--amber-color)';\n\
                      \ else if (states['sensor.ge_oven_cook_time_remaining'].state\
                      \ !== 'Off') return 'var(--cyan-color)';\n else if (states['sensor.ge_oven_kitchen_timer'].state\
                      \ !== 'Off') return 'var(--purple-color)';\n else return 'var(--grey-color)';\n\
                      ]]]\n"
                  styles:
                    img_cell:
                      - background: "[[[\n  var cook_time_remain = \"sensor.ge_oven_cook_time_remaining\"\
                          ;\n  var cook_time_duration = \"sensor.ge_oven_cook_time_duration\"\
                          ;\n\n  var timer_remain = \"sensor.ge_oven_kitchen_timer\"\
                          ;\n  var timer_duration = \"sensor.ge_oven_kitchen_timer_duration\"\
                          ;\n\n  var remaining = \"\";\n  var duration = \"\";\n \
                          \ if (states[cook_time_remain]?.state\n    && states[cook_time_duration]?.state\
                          \ !== \"Off\"\n  ) {\n    remaining = states[cook_time_remain].state.split(\"\
                          :\");\n    remaining = parseInt(remaining[0] * 60) + parseInt(remaining[1]);\n\
                          \    duration = states[cook_time_duration].state.split(\"\
                          :\");\n    duration = parseInt(duration[0] * 60) + parseInt(duration[1]);\n\
                          \n    return `radial-gradient(var(--card-background-color)\
                          \ 60%, transparent calc(60% + 1px)), conic-gradient(${variables.color}\
                          \ ${Math.round(((duration - remaining) / duration * 100),\
                          \ 0)}% 0%, var(--card-background-color) 0% 100%)`;\n  }\n\
                          \  else if (states[timer_remain]?.state\n    && states[timer_duration]?.state\
                          \ !== \"Off\"\n  ) {\n    remaining = states[timer_remain].state.split(\"\
                          :\");\n    remaining = parseInt(remaining[0] * 60) + parseInt(remaining[1]);\n\
                          \    duration = states[timer_duration].state.split(\":\"\
                          );\n    duration = parseInt(duration[0] * 60) + parseInt(duration[1]);\n\
                          \n    return `radial-gradient(var(--card-background-color)\
                          \ 60%, transparent calc(60% + 1px)), conic-gradient(${variables.color}\
                          \ ${Math.round(((duration - remaining) / duration * 100),\
                          \ 0)}% 0%, var(--card-background-color) 0% 100%)`;\n  }\n\
                          ]]]\n"
                    icon:
                      - color: '[[[ return variables.color ]]]'
                  extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                    \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                    \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
      - type: grid
        cards:
          - type: custom:streamline-card
            layout_options:
              grid_columns: 2
            template: person_card
            variables:
              - person: joshua
              - name: Joshua
          - type: custom:streamline-card
            layout_options:
              grid_columns: 2
            template: person_card
            variables:
              - person: amy
              - name: Amy
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.living_room_lights
            name: Living Room
            icon: mdi:sofa-single
            tap_action:
              action: navigate
              navigation_path: living
            hold_action:
              action: toggle
            variables:
              temperature: sensor.ecobee_current_temperature
              icon_color: 255, 152, 0
              chips_top:
                - type: template
                  entity: camera.livingroom
                  icon: mdi:cctv
                  icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                  tap_action:
                    action: navigate
                    navigation_path: security#camera-livingroom
              chips:
                - type: template
                  entity: media_player.universal_living_room
                  icon_color: "{% set state = states(entity) %}\n{% if state == \"\
                    playing\" %}\n  green\n{% elif state == \"paused\" %}\n  amber\n\
                    {% elif state == \"idle\" %}\n  light-blue\n{% elif state in [\"\
                    standby\", \"on\"] %}\n  blue-grey\n{% else %}\n  disabled\n{%\
                    \ endif %}"
                  icon: '{% from "util.jinja" import media_icon %} {{ media_icon(entity)
                    }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Living Room Media
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:streamline-card
                              template: remote_living
                - type: template
                  entity: fan.living_room_ceiling
                  icon: mdi:fan
                  icon_color: "{% if is_state(entity, 'on') %}\n  {% set speed = state_attr(entity,\
                    \ 'percentage') %}\n  {{ {\n    33: \"green\",\n    66: \"yellow\"\
                    ,\n    100: \"orange\"\n  }[speed] }}\n{% else %}\n  disabled\n\
                    {% endif %}"
                  card_mod:
                    style: ".content {\n  {% if is_state(config.entity, 'on') %}\n\
                      \    {% set speed = state_attr(config.entity, 'percentage')\
                      \ %}\n    {% set duration = {\n      33: \"1s\",\n      66:\
                      \ \"0.75s\",\n      100: \"0.66s\"\n    }[speed] %}\n    animation:\
                      \ rotation linear infinite;\n    animation-duration: {{ duration\
                      \ }};\n  {% endif %}\n}\n@keyframes rotation {\n  100% {\n \
                      \   transform: rotate(360deg);\n  }\n}\n"
                  tap_action:
                    action: more-info
                - type: template
                  entity: light.living_room_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Living Room Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.living_room_lights
                - type: template
                  entity: binary_sensor.ecobee_occupancy
                  icon: "{%- if is_state(\"binary_sensor.ecobee_motion\", \"on\")\
                    \ -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\")\
                    \ -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.ecobee_motion\", \"\
                    on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n \
                    \ light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.kitchen_lights
            name: Kitchen
            icon: mdi:fridge-variant
            tap_action:
              action: navigate
              navigation_path: kitchen
            hold_action:
              action: toggle
            variables:
              temperature: sensor.kitchen_temperature
              icon_color: 0, 188, 212
              chips:
                - type: conditional
                  conditions:
                    - entity: light.magicmirror_monitor
                      state: 'on'
                  chip:
                    type: template
                    entity: light.magicmirror_monitor
                    icon_color: blue
                    icon: mdi:apps-box
                    tap_action:
                      action: more-info
                - type: template
                  entity: light.kitchen_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Kitchen Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.kitchen_lights
                - type: template
                  entity: binary_sensor.kitchen_occupancy
                  icon: "{%- if is_state(\"binary_sensor.kitchen_motion\", \"on\"\
                    ) -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\")\
                    \ -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.kitchen_motion\", \"\
                    on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n \
                    \ light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.family_room_lights
            name: Family Room
            icon: mdi:gamepad-circle
            tap_action:
              action: navigate
              navigation_path: family
            hold_action:
              action: toggle
            variables:
              temperature: sensor.family_room_temperature
              icon_color: 255, 235, 59
              chips_top:
                - type: template
                  entity: camera.family_room
                  icon: mdi:cctv
                  icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                  tap_action:
                    action: navigate
                    navigation_path: security#camera-familyroom
              chips:
                - type: conditional
                  conditions:
                    - entity: binary_sensor.athos_connected
                      state: 'on'
                  chip:
                    type: template
                    entity: binary_sensor.athos_connected
                    icon_color: lime
                    icon: mdi:desktop-tower
                    tap_action:
                      action: none
                - type: conditional
                  conditions:
                    - entity: binary_sensor.quest_interactive
                      state: 'on'
                  chip:
                    type: template
                    entity: binary_sensor.quest_interactive
                    icon_color: blue
                    icon: fapro:meta
                    tap_action:
                      action: none
                - type: template
                  entity: select.harmony_family_room_activities
                  icon_color: "{% set state = states(entity) %}\n{% if state == \"\
                    Computer\" %}\n  teal\n{% elif state == \"PS3\" %}\n  cyan\n{%\
                    \ elif state == \"PS4\" %}\n  blue\n{% elif state == \"XBox\"\
                    \ %}\n  green\n{% else %}\n  disabled\n{% endif %}"
                  icon: "{% set state = states(entity) %}\n{% if state == \"Computer\"\
                    \ %}\n  mdi:desktop-tower\n{% elif state == \"PS3\" %}\n  fapro:ps3\n\
                    {% elif state == \"PS4\" %}\n  fapro:ps4\n{% elif state == \"\
                    XBox\" %}\n  mdi:microsoft-xbox\n{% else %}\n  mdi:gamepad-variant-outline\n\
                    {% endif %}"
                  tap_action:
                    action: none
                - type: template
                  entity: media_player.universal_family_room
                  icon_color: "{% set state = states(entity) %}\n{% if state == \"\
                    playing\" %}\n  green\n{% elif state == \"paused\" %}\n  amber\n\
                    {% elif state == \"idle\" %}\n  light-blue\n{% elif state in [\"\
                    standby\", \"on\"] %}\n  blue-grey\n{% else %}\n  disabled\n{%\
                    \ endif %}"
                  icon: '{% from "util.jinja" import media_icon %} {{ media_icon(entity)
                    }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Family Room Media
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:streamline-card
                              template: remote_family
                - type: template
                  entity: light.family_room_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Family Room Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.family_room_lights
                - type: template
                  entity: binary_sensor.family_room_occupancy
                  icon: "{%- if is_state(\"binary_sensor.family_room_motion\", \"\
                    on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                    ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.family_room_motion\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.theater_room
            name: Theater Room
            icon: mdi:projector
            tap_action:
              action: navigate
              navigation_path: theater
            variables:
              temperature: sensor.family_room_temperature
              icon_color: 255, 193, 7
              chips:
                - type: template
                  entity: light.theater_room
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  tap_action:
                    action: none
                - type: template
                  entity: binary_sensor.theater_room_occupancy
                  icon: "{%- if is_state(\"binary_sensor.theater_room_motion\", \"\
                    on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                    ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.theater_room_motion\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.joshua_office_lights
            name: Josh's Office
            icon: mdi:chair-rolling
            tap_action:
              action: navigate
              navigation_path: josh-office
            hold_action:
              action: toggle
            variables:
              temperature: sensor.joshua_office_temperature
              icon_color: 33, 150, 243
              chips:
                - type: conditional
                  conditions:
                    - entity: binary_sensor.erebus_connected
                      state: 'on'
                  chip:
                    type: template
                    entity: binary_sensor.erebus_connected
                    icon_color: blue
                    icon: mdi:desktop-tower
                    tap_action:
                      action: none
                - type: template
                  entity: light.joshua_office_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Joshua Office Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.joshua_office_lights
                - type: template
                  entity: binary_sensor.apollo_msr_1_office_radar_target
                  icon: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                    , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
                    \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                    {%- endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.amy_office_lights
            name: Amy's Office
            icon: mdi:skull
            tap_action:
              action: navigate
              navigation_path: amy-office
            hold_action:
              action: toggle
            variables:
              temperature: sensor.amy_office_temperature
              icon_color: 244, 67, 54
              chips:
                - type: template
                  entity: light.amy_office_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Amy Office Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.amy_office_lights
                - type: template
                  entity: binary_sensor.amy_office_occupancy
                  icon: "{%- if is_state(\"binary_sensor.amy_office_motion\", \"on\"\
                    ) -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\")\
                    \ -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.amy_office_motion\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.ethan_bedroom_lights
            name: Ethan
            icon: mdi:robot
            tap_action:
              action: navigate
              navigation_path: ethan
            hold_action:
              action: toggle
            variables:
              temperature: sensor.ethan_bedroom_temperature
              icon_color: 76, 175, 80
              chips:
                - type: conditional
                  conditions:
                    - entity: switch.nebula_projector_ethan_main_switch
                      state: 'on'
                  chip:
                    type: template
                    entity: switch.nebula_projector_ethan_main_switch
                    icon_color: pink
                    icon: mdi:crystal-ball
                    tap_action:
                      action: more-info
                - type: template
                  entity: light.ethan_bedroom_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Ethan's Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.ethan_bedroom_lights
                - type: template
                  entity: binary_sensor.ethan_bedroom_occupancy
                  icon: "{%- if is_state(\"binary_sensor.ethan_bedroom_motion\", \"\
                    on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                    ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.ethan_bedroom_motion\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.emma_bedroom_lights
            name: Emma
            icon: mdi:unicorn-variant
            tap_action:
              action: navigate
              navigation_path: emma
            hold_action:
              action: toggle
            variables:
              temperature: sensor.emma_bedroom_temperature
              icon_color: 156, 39, 176
              chips:
                - type: conditional
                  conditions:
                    - entity: switch.nebula_projector_emma_main_switch
                      state: 'on'
                  chip:
                    type: template
                    entity: switch.nebula_projector_emma_main_switch
                    icon_color: pink
                    icon: mdi:crystal-ball
                    tap_action:
                      action: more-info
                - type: template
                  entity: light.emma_bedroom_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Emma's Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.emma_bedroom_lights
                - type: template
                  entity: binary_sensor.emma_bedroom_occupancy
                  icon: "{%- if is_state(\"binary_sensor.emma_bedroom_motion\", \"\
                    on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                    ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.emma_bedroom_motion\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.main_bedroom_lights
            name: Main Bedroom
            icon: mdi:bed-king
            tap_action:
              action: navigate
              navigation_path: main-bed
            hold_action:
              action: toggle
            variables:
              temperature: sensor.main_bedroom_temperature
              icon_color: 103, 58, 183
              chips:
                - type: template
                  entity: media_player.universal_main_bedroom
                  icon_color: "{% set state = states(entity) %}\n{% if state == \"\
                    playing\" %}\n  green\n{% elif state == \"paused\" %}\n  amber\n\
                    {% elif state == \"idle\" %}\n  light-blue\n{% elif state in [\"\
                    standby\", \"on\"] %}\n  blue-grey\n{% else %}\n  disabled\n{%\
                    \ endif %}"
                  icon: '{% from "util.jinja" import media_icon %} {{ media_icon(entity)
                    }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Main Bedroom Media
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:streamline-card
                              template: remote_main
                - type: template
                  entity: fan.main_bedroom_ceiling
                  icon: mdi:fan
                  icon_color: "{% if is_state(entity, 'on') %}\n  {% set speed = state_attr(entity,\
                    \ 'percentage') %}\n  {{ {\n    33: \"green\",\n    66: \"yellow\"\
                    ,\n    100: \"orange\"\n  }[speed] }}\n{% else %}\n  disabled\n\
                    {% endif %}"
                  card_mod:
                    style: ".content {\n  {% if is_state(config.entity, 'on') %}\n\
                      \    {% set speed = state_attr(config.entity, 'percentage')\
                      \ %}\n    {% set duration = {\n      33: \"1s\",\n      66:\
                      \ \"0.75s\",\n      100: \"0.66s\"\n    }[speed] %}\n    animation:\
                      \ rotation linear infinite;\n    animation-duration: {{ duration\
                      \ }};\n  {% endif %}\n}\n@keyframes rotation {\n  100% {\n \
                      \   transform: rotate(360deg);\n  }\n}\n"
                  tap_action:
                    action: more-info
                - type: template
                  entity: light.main_bedroom_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Main Bedroom Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.main_bedroom_lights
                - type: template
                  entity: binary_sensor.main_bedroom_occupancy
                  icon: "{%- if is_state(\"binary_sensor.main_bedroom_motion\", \"\
                    on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\"\
                    ) -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                    \ endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.main_bedroom_motion\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            name: Utility
            icon: mdi:progress-wrench
            tap_action:
              action: navigate
              navigation_path: utility
            variables:
              icon_color: 121, 85, 72
              chips_top:
                - type: template
                  entity: vacuum.r2dee2
                  icon_color: "{% if not has_value(entity)  %}\n  red\n{% elif is_state(entity,\
                    \ \"cleaning\") %}\n  cyan\n{% elif is_state(entity, \"charging\"\
                    ) %}\n  orange\n{% elif is_state(entity, \"paused\")  %}\n  yellow\n\
                    {% elif is_state(entity, \"return\")  %}\n  purple\n{% else %}\n\
                    \  disabled\n{% endif %}"
                  icon: "{% if not has_value(entity) %}\n  mdi:robot-vacuum-alert\n\
                    {% else %}\n  mdi:robot-vacuum\n{% endif %}"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: R2Dee2
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:streamline-card
                              template: vacuum_r2dee2
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"cleaning\") %}\n.content\
                        \ {\n  animation: cleaning 10s linear infinite;\n}\n{% endif\
                        \ %}\nha-card:after {\n  content: \"R\";\n  position: absolute;\n\
                        \  color: var(--grey-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n"
                - type: template
                  entity: vacuum.dustin_mopman
                  icon_color: "{% if not has_value(entity)  %}\n  red\n{% elif is_state(entity,\
                    \ \"cleaning\") %}\n  cyan\n{% elif is_state(entity, \"charging\"\
                    ) %}\n  orange\n{% elif is_state(entity, \"paused\")  %}\n  yellow\n\
                    {% elif is_state(entity, \"return\")  %}\n  purple\n{% else %}\n\
                    \  disabled\n{% endif %}"
                  icon: "{% if not has_value(entity) %}\n  mdi:robot-vacuum-alert\n\
                    {% else %}\n  mdi:robot-vacuum\n{% endif %}"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Dustin Mopman
                        content:
                          type: custom:vertical-stack-in-card
                          card_mod:
                            style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                              \ 0;\n}\n"
                          cards:
                            - type: custom:streamline-card
                              template: vacuum_mopman
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"cleaning\") %}\n.content\
                        \ {\n  animation: cleaning 10s linear infinite;\n}\n{% endif\
                        \ %}\nha-card:after {\n  content: \"D\";\n  position: absolute;\n\
                        \  color: var(--grey-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n"
              chips:
                - type: conditional
                  conditions:
                    - entity: binary_sensor.water_leak_detected
                      state_not: 'off'
                  chip:
                    type: template
                    entity: binary_sensor.water_leak_detected
                    icon_color: '{{ iif(is_state(entity, "on"), "red", "white") }}'
                    icon: mdi:water-alert
                    tap_action:
                      action: none
                    card_mod:
                      style: "@keyframes phase {\n  50% {opacity: 0;}\n}\n{% if is_state(config.entity,\
                        \ \"on\") %}\n.content {\n  animation: phase 1.5s ease-out\
                        \ infinite;\n}\n{% endif %}\n"
                - type: template
                  entity: light.utility_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Utility Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.utility_lights
                - type: template
                  entity: valve.water_main_valve
                  icon_color: "{% if not has_value(entity) %}\n  disabled\n{% elif(is_state(entity,\
                    \ \"open\")) %}\n  green\n{% else %}\n  red\n{% endif %}"
                  icon: "{% if not has_value(entity) %}\n  mdi:valve\n{% elif(is_state(entity,\
                    \ \"open\")) %}\n  mdi:valve-open\n{% else %}\n  mdi:valve-closed\n\
                    {% endif %}"
                  tap_action:
                    action: none
                  card_mod:
                    style: "@keyframes phase {\n  50% {opacity: 0;}\n}\n{% if is_state(config.entity,\
                      \ \"closed\") %}\n.content {\n  animation: phase 1.5s ease-out\
                      \ infinite;\n}\n{% endif %}\n"
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.outside_lights
            name: Outside
            icon: mdi:spa
            tap_action:
              action: navigate
              navigation_path: outside
            hold_action:
              action: toggle
            variables:
              temperature: sensor.ecowitt_outdoor_temperature
              icon_color: 139, 195, 74
              chips_top:
                - type: template
                  entity: camera.doorbell
                  icon: mdi:doorbell-video
                  icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                  tap_action:
                    action: navigate
                    navigation_path: security#camera-doorbell
              chips:
                - type: template
                  entity: light.outside_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Outside Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.outside_lights
                - type: template
                  entity: binary_sensor.doorbell_all_occupancy
                  icon: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\"\
                    , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity,\
                    \ \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
                    {%- endif -%}"
                  icon_color: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\"\
                    , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                    \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                  tap_action:
                    action: none
                  hold_action:
                    action: none
                - type: template
                  entity: binary_sensor.sprinkler_zones
                  icon_color: "{% set zones = expand(entity)\n  | selectattr(\"state\"\
                    , \"==\", \"on\")\n  | map(attribute=\"entity_id\")\n  | list\n\
                    \  | count\n%} {% if is_state(\"binary_sensor.opensprinkler_paused\"\
                    , \"on\") %}\n  yellow\n{% elif zones > 0 %}\n  light-blue\n{%\
                    \ else %}\n  disabled\n{% endif %}"
                  icon: mdi:sprinkler
                  tap_action:
                    action: none
                  card_mod:
                    style:
                      .: "{%- set zones = expand(config.entity)\n  | selectattr(\"\
                        state\", \"==\", \"on\")\n  | map(attribute=\"entity_id\"\
                        )\n  | list\n-%}\n{%- if zones[0] is defined -%}\nha-card:after\
                        \ {\n  content: \"{{ int(state_attr(zones[0], 'index')) +\
                        \ 1 }}\";\n  position: absolute;\n  color: var(--light-blue-color);\n\
                        \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n  font-size:\
                        \ 12px;\n}\n{%- endif -%}\n"
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: room
            entity: light.garage_lights
            name: Garage
            icon: "[[[\n  if (states[\"cover.garage_door\"].state == \"open\") return\
              \ \"mdi:garage-open-variant\";\n  else if (['opening', 'closing'].includes(states[\"\
              cover.garage_door\"].state)) return \"mdi:garage-alert-variant\";\n\
              \  else return \"mdi:garage-variant\";\n]]]\n"
            tap_action:
              action: navigate
              navigation_path: garage
            hold_action:
              action: toggle
            variables:
              temperature: sensor.garage_multisensor_air_temperature
              icon_color: 96, 125, 139
              chips_top:
                - type: template
                  entity: camera.garage
                  icon: mdi:cctv
                  icon_color: '{{ iif(has_value(entity), "cyan", "red") }}'
                  tap_action:
                    action: navigate
                    navigation_path: security#camera-garage
              chips:
                - type: conditional
                  conditions:
                    - entity: cover.garage_door
                      state_not: closed
                    - entity: cover.garage_door
                      state_not: unavailable
                    - entity: cover.garage_door
                      state_not: unknown
                  chip:
                    type: template
                    entity: cover.garage_door
                    icon: "{%- if is_state(entity, \"open\") -%}\n  mdi:garage-open-variant\n\
                      {%- elif states(entity) in [\"opening\", \"closing\"] -%}\n\
                      \  mdi:garage-alert-variant\n{%- endif -%}"
                    icon_color: "{% if is_state(entity, \"open\") %}\n  red\n{% elif\
                      \ states(entity) in [\"opening\", \"closing\"]  %}\n  orange\n\
                      {% endif %}"
                    tap_action:
                      action: none
                    card_mod:
                      style: "@keyframes phase {\n  50% {opacity: 0;}\n}\n.content\
                        \ {\n  animation: phase 1.5s ease-out infinite;\n}"
                - type: template
                  entity: light.garage_lights
                  icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-on", "mdi:lightbulb")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "amber", "disabled")
                    }}'
                  card_mod:
                    style:
                      .: "{% if is_state(config.entity, \"on\") %}\nha-card:after\
                        \ {\n  content: \"{{ expand(config.entity) | selectattr('state',\
                        \ '==', 'on') | list | count }}\";\n  position: absolute;\n\
                        \  color: var(--amber-color);\n  font-weight: bolder;\n  top:\
                        \ -2px;\n  right: 2px;\n  font-size: 12px;\n}\n{% endif %}\n"
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: Garage Lights
                        content:
                          type: custom:streamline-card
                          template: light_group
                          variables:
                            - entity: light.garage_lights
                - type: template
                  entity: binary_sensor.garage_multisensor_motion_detection
                  icon: '{{ iif(is_state(entity, "on"), "mdi:motion-sensor", "mdi:motion-sensor-off")
                    }}'
                  icon_color: '{{ iif(is_state(entity, "on"), "orange", "disabled")
                    }}'
                  tap_action:
                    action: more-info
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: vehicle
            name: Ascent
            entity: device_tracker.ascent
            triggers_update:
              - timer.ascent_remote_start
            variables:
              timer: timer.ascent_remote_start
              odometer: sensor.ascent_odometer
              path: '#ascent'
              chips_top:
                - type: conditional
                  conditions:
                    - entity: binary_sensor.ascent_trouble
                      state: 'on'
                    - entity: binary_sensor.ascent_trouble
                      state_not: unavailable
                    - entity: binary_sensor.ascent_trouble
                      state_not: unknown
                  chip:
                    type: template
                    entity: binary_sensor.ascent_trouble
                    icon: mdi:alert
                    icon_color: red
                    tap_action: none
              chips:
                - type: template
                  entity: sensor.ascent_fuel_level
                  content: "{% if has_value(entity) %}\n  {{ states(entity) | round(0)\
                    \ }}%\n{% endif %}"
                  icon: mdi:gas-station
                  icon_color: '{% from "util.jinja" import battery_color %}

                    {{ battery_color(entity) }}'
                  tap_action:
                    action: more-info
                - type: template
                  entity: sensor.ascent_avg_fuel_consumption
                  icon: mdi:leaf
                  icon_color: green
                  content: "{% if has_value(entity) %}\n  {{ states(entity) | round(1)\
                    \ }}mpg\n{% endif %}"
                  tap_action:
                    action: more-info
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: vehicle
            name: Kona
            entity: device_tracker.kona_location
            triggers_update:
              - timer.kona_remote_start
            variables:
              timer: timer.kona_remote_start
              odometer: sensor.kona_odometer
              path: '#kona'
              chips_top:
                - type: conditional
                  conditions:
                    - entity: binary_sensor.kona_problems
                      state: 'on'
                    - entity: binary_sensor.kona_problems
                      state_not: unavailable
                    - entity: binary_sensor.kona_problems
                      state_not: unknown
                  chip:
                    type: template
                    entity: binary_sensor.kona_problems
                    icon: mdi:alert
                    icon_color: red
                    tap_action: none
              chips:
                - type: template
                  entity: sensor.kona_fuel_level
                  content: "{% if has_value(entity) %}\n  {{ states(entity) | round(0)\
                    \ }}%\n{% endif %}"
                  icon: mdi:gas-station
                  icon_color: '{% from "util.jinja" import battery_color %}

                    {{ battery_color(entity) }}'
                  tap_action:
                    action: more-info
      - type: grid
        cards:
          - type: heading
            icon: mdi:pine-tree
            heading: XMas
            heading_style: subtitle
          - type: grid
            columns: 3
            square: false
            cards:
              - type: tile
                entity: light.xmas_tree
                name: Tree
                icon: mdi:pine-tree
                features:
                  - type: light-brightness
              - type: tile
                entity: light.wled_mario_star_main
                name: Star
                icon: mdi:star-face
                features:
                  - type: light-brightness
              - type: tile
                entity: light.eve
                name: Outside
                icon: mdi:string-lights
                vertical: true
        visibility:
          - condition: state
            entity: binary_sensor.is_xmas
            state: 'on'
        column_span: 1
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#weather'
                button_type: state
                entity: sensor.owm_daily_temperature
                name: Weather
                show_attribute: false
                attribute: temperature
                show_icon: false
                show_state: false
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
                show_last_changed: false
              - type: custom:vertical-stack-in-card
                cards:
                  - card_config_version: 8
                    daily_forecast_days: 6
                    entity_apparent_temp: sensor.ecowitt_feels_like_temperature
                    entity_extended: sensor.forecast
                    entity_forecast_icon: weather.owm_daily
                    entity_forecast_icon_1: weather.owm_daily
                    entity_forecast_max: weather.owm_daily
                    entity_forecast_max_1: weather.owm_daily
                    entity_forecast_min: weather.owm_daily
                    entity_forecast_min_1: weather.owm_daily
                    entity_humidity: sensor.ecowitt_humidity
                    entity_pop: weather.owm_daily
                    entity_pop_1: weather.owm_daily
                    entity_pos: weather.owm_daily
                    entity_pos_1: weather.owm_daily
                    entity_pressure: sensor.ecowitt_relative_pressure
                    entity_summary: weather.owm_daily
                    entity_summary_1: weather.owm_daily
                    entity_sun: sun.sun
                    entity_temperature: sensor.ecowitt_outdoor_temperature
                    entity_uv_alert_summary: sensor.owm_daily_uv_index
                    entity_visibility: sensor.owm_daily_visibility
                    entity_wind_bearing: sensor.ecowitt_wind_direction
                    entity_wind_gust: sensor.ecowitt_wind_gust
                    entity_wind_speed: sensor.ecowitt_wind_speed
                    extended_name_attr: precipitation_unit
                    extended_use_attr: false
                    forecast_type: daily
                    option_color_fire_danger: false
                    option_show_overview_separator: false
                    option_static_icons: false
                    option_tooltips: false
                    section_order:
                      - overview
                      - extended
                      - slots
                      - daily_forecast
                    show_section_daily_forecast: true
                    show_section_slots: true
                    slot_l1: forecast_max
                    slot_l2: forecast_min
                    slot_l3: wind
                    slot_l4: pressure
                    slot_l5: sun_next
                    slot_l6: remove
                    slot_l7: remove
                    slot_l8: remove
                    slot_r1: popforecast
                    slot_r2: humidity
                    slot_r3: uv_summary
                    slot_r4: visibility
                    slot_r5: sun_following
                    slot_r6: remove
                    slot_r7: remove
                    slot_r8: remove
                    type: custom:platinum-weather-card
                    weather_entity: weather.owm_daily
                  - type: custom:hourly-weather
                    entity: weather.owm_daily
                    icons: true
                    label_spacing: '2'
                    num_segments: '12'
                    name: ' '
                    card_mod:
                      style:
                        .: "ha-card {\n  background: none;\n  --ha-card-box-shadow:\
                          \ 0px;\n  margin: -8px -4px -4px -16px;\n}\n"
                        weather-bar$: ".main {\n  --mush-rgb-red: 244, 67, 54;\n \
                          \ --mush-rgb-pink: 233, 30, 99;\n  --mush-rgb-purple: 156,\
                          \ 39, 176;\n  --mush-rgb-deep-purple: 103, 58, 183;\n  --mush-rgb-indigo:\
                          \ 63, 81, 181;\n  --mush-rgb-blue: 33, 150, 243;\n  --mush-rgb-light-blue:\
                          \ 3, 169, 244;\n  --mush-rgb-cyan: 0, 188, 212;\n  --mush-rgb-teal:\
                          \ 0, 150, 136;\n  --mush-rgb-green: 76, 175, 80;\n  --mush-rgb-light-green:\
                          \ 139, 195, 74;\n  --mush-rgb-lime: 205, 220, 57;\n  --mush-rgb-yellow:\
                          \ 255, 235, 59;\n  --mush-rgb-amber: 255, 193, 7;\n  --mush-rgb-orange:\
                          \ 255, 152, 0;\n  --mush-rgb-deep-orange: 255, 87, 34;\n\
                          \  --mush-rgb-brown: 121, 85, 72;\n  --mush-rgb-grey: 158,\
                          \ 158, 158;\n  --mush-rgb-blue-grey: 96, 125, 139;\n  --mush-rgb-black:\
                          \ 0, 0, 0;\n  --mush-rgb-white: 255, 255, 255;\n\n  --color-clear-night:\
                          \ rgba(var(--mush-rgb-black), 0.2) !important;\n  --color-cloudy:\
                          \ rgba(var(--mush-rgb-grey), 0.2) !important;\n  --color-fog:\
                          \ var(--color-cloudy);\n  --color-hail: rgba(var(--mush-rgb-indigo),\
                          \ 0.2) !important;\n  --color-lightning: var(--color-rainy);\n\
                          \  --color-lightning-rainy: var(--color-rainy);\n  --color-partlycloudy:\
                          \ rgba(var(--mush-rgb-blue), 0.2) !important;\n  --color-pouring:\
                          \ var(--color-rainy);\n  --color-rainy: rgba(var(--mush-rgb-indigo),\
                          \ 0.2) !important;\n  --color-snowy: rgba(var(--mush-rgb-white),\
                          \ 0.2) !important;\n  --color-snowy-rainy: var(--color-partlycloudy);\n\
                          \  --color-sunny: rgba(var(--mush-rgb-yellow), 0.2) !important;\n\
                          \  --color-windy: var(--color-sunny);\n  --color-windy-variant:\
                          \ var(--color-sunny);\n  --color-exceptional: rgba(var(--mush-rgb-amber),\
                          \ 0.2) !important;\n}\n.bar > div {\n  height: 42px !important;\n\
                          }\n.bar > div:first-child {\n  border-top-left-radius: var(--ha-card-border-radius)\
                          \ !important;\n  border-bottom-left-radius: var(--ha-card-border-radius)\
                          \ !important;\n}\n.bar > div:last-child {\n  border-top-right-radius:\
                          \ var(--ha-card-border-radius) !important;\n  border-bottom-right-radius:\
                          \ var(--ha-card-border-radius) !important;\n}\n.bar > div\
                          \ > span {\n  text-shadow: none !important;\n  color: rgb(var(--primary-text-color));\n\
                          \  font-size: 14px;\n  font-weight: bold;\n}\n.axes > div\
                          \ > .bar-block-bottom > .hour {\n  font-size: 12px;\n  font-weight:\
                          \ bolder;\n}\n.axes > div > .bar-block-bottom > .temperature\
                          \ {\n  font-size: 12px;\n  font-weight: bolder;\n}\n.axes\
                          \ {\n  margin-top: 10px !important;\n}\n"
                  - type: iframe
                    url: https://embed.windy.com/embed.html?type=map&location=coordinates&metricRain=in&metricTemp=°F&metricWind=mph&zoom=7&overlay=wind&product=ecmwf&level=surface&lat=42.926&lon=-112.462&message=true
                  - type: custom:horizon-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#person-joshua'
                button_type: name
                name: Joshua
                icon: mdi:account
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n"
              - type: custom:streamline-card
                template: person_popup
                variables:
                  - person: joshua
                  - name: Joshua
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#person-amy'
                button_type: name
                name: Amy
                icon: mdi:account
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n"
              - type: custom:streamline-card
                template: person_popup
                variables:
                  - person: amy
                  - name: Amy
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#ascent'
                button_type: name
                name: Ascent
                icon: fapro:subaru
                show_state: false
                width_desktop: 600px
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n.bubble-sub-button-1\
                  \ {\n  display: ${hass.states['binary_sensor.ascent_trouble'].state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-1 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}"
                sub_button:
                  - entity: binary_sensor.ascent_trouble
                    show_background: false
                    icon: mdi:alert
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Trouble Codes
                          content:
                            type: markdown
                            card_mod:
                              style: "ha-card {\n  --ha-card-background: none\n}\n"
                            content: "{%- set codes = {\n  \"ABS_MIL\": \"Anti-lock\
                              \ Brake System\",\n  \"AHBL_MIL\": \"Automatic Headlight\
                              \ Beam Leveller\",\n  \"ATF_MIL\": \"ATF\",\n  \"AWD_MIL\"\
                              : \"AWD\",\n  \"BSDRCT_MIL\": \"Blind Spot Detection/Rear\
                              \ Cross Traffic Alert\",\n  \"CEL_MIL\": \"Check Engine\
                              \ Light\",\n  \"EBD_MIL\": \"Electronic Brake-force\
                              \ Distribution\",\n  \"EOL_MIL\": \"EOL\",\n  \"EPAS_MIL\"\
                              : \"Electric Power Assisted Steering\",\n  \"EPB_MIL\"\
                              : \"Electronic Parking Brake\",\n  \"ESS_MIL\": \"Engine\
                              \ Start-Stop\",\n  \"HEVCM_MIL\": \"HEVCM\",\n  \"HEV_MIL\"\
                              : \"HEV\",\n  \"OPL_MIL\": \"OPL\",\n  \"RAB_MIL\":\
                              \ \"Reverse Automatic Braking\",\n  \"SRS_MIL\": \"\
                              Airbag System\",\n  \"TEL_MIL\": \"Telematics\",\n \
                              \ \"TPMS_MIL\": \"Tire Preassure Monitoring\",\n  \"\
                              VDC_MIL\": \"Multi-mode Vehicle Dynamics Control\",\n\
                              \  \"WASH_MIL\": \"Washer Fluid\"\n} -%}\n{%- set entity_id\
                              \ = \"binary_sensor.ascent_trouble\" -%}\n{%- for attribute,\
                              \ value in states[entity_id].attributes.items() -%}\n\
                              {%- if attribute in codes -%}\n- {{ codes[attribute]\
                              \ }} ({{ attribute }})\n{% endif -%}\n{%- endfor -%}"
                  - entity: sensor.ascent_avg_fuel_consumption
                    show_state: true
                    show_background: false
              - type: custom:expander-card
                gap: 0em
                padding: 0em
                child-padding: 0.5em
                title-card-padding: 0em
                title-card-button-overlay: true
                overlay-margin: calc(var(--ha-card-border-radius, 12px) / 2) auto
                title-card:
                  type: vertical-stack
                  cards:
                    - type: custom:mushroom-template-card
                      primary: Remote Start
                      secondary: "{%- if is_state(\"device_tracker.ascent\", \"home\"\
                        ) -%}\n  Open the Garage and Start the Ascent\n{%- else -%}\n\
                        \  Start the Ascent\n{%- endif -%}"
                      icon: mdi:key-wireless
                      entity: script.ascent_remote_start
                      icon_color: amber
                      tap_action:
                        action: none
                      hold_action:
                        action: call-service
                        service: script.turn_on
                        target:
                          entity_id: script.ascent_remote_start
                      card_mod:
                        style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
                    - type: custom:timer-bar-card
                      filter: true
                      invert: true
                      state_color: true
                      bar_height: 12px
                      bar_radius: var(--ha-card-border-radius, 12px)
                      bar_direction: rtl
                      bar_foreground: var(--lime-color)
                      bar_background: var(--disabled-color)
                      compressed: true
                      modifications:
                        - remaining: 00:03:00
                          bar_foreground: var(--amber-color)
                        - remaining: 00:02:00
                          bar_foreground: var(--orange-color)
                        - remaining: 00:01:00
                          bar_foreground: var(--red-color)
                      entities:
                        - entity: timer.ascent_remote_start
                          name: Timer
                cards:
                  - type: custom:mushroom-select-card
                    entity: select.ascent_climate_preset
                    layout: horizontal
                    name: Climate Preset
                    secondary_info: none
                    icon_color: pink
                    card_mod:
                      style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
                  - type: custom:mushroom-chips-card
                    card_mod:
                      style: ".chip-container {\n  display: grid !important;\n  grid-template-columns:\
                        \ 1fr 1fr 1fr 1fr;\n}\n"
                    chips:
                      - type: entity
                        entity: lock.ascent_door_locks
                        name: Lock
                        icon: mdi:lock
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: lock.lock
                          target:
                            entity_id: lock.ascent_door_locks
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: button.ascent_remote_start
                        name: Remote Start
                        icon: mdi:key-wireless
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_remote_start
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: button.ascent_lights_start
                        name: Flash Lights
                        icon: mdi:lightbulb-on
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_lights_start
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: button.ascent_horn_start
                        name: Sound Horn
                        icon: mdi:volume-high
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_horn_start
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: lock.ascent_door_locks
                        name: Unlock
                        icon: mdi:lock-open
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: lock.unlock
                          target:
                            entity_id: lock.ascent_door_locks
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: button.ascent_remote_stop
                        name: Remote Stop
                        icon: mdi:stop-circle-outline
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_remote_stop
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: button.ascent_lights_stop
                        name: Stop Flash Lights
                        icon: mdi:lightbulb-off
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_lights_stop
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: button.ascent_horn_stop
                        name: Stop Horn
                        icon: mdi:volume-off
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_horn_stop
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                  - type: custom:mushroom-chips-card
                    card_mod:
                      style: ".chip-container {\n  display: grid !important;\n  grid-template-columns:\
                        \ max-content max-content;\n  margin-top: 15px;\n  place-content:\
                        \ space-around !important;\n}\n"
                    chips:
                      - type: entity
                        entity: button.ascent_refresh
                        name: Update from Server
                        icon: mdi:refresh
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_refresh
                        card_mod:
                          style: "ha-card {\n  justify-content: center;\n}\nha-card:hover\
                            \ {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: button.ascent_poll_vehicle
                        name: Update from Car
                        icon: mdi:car-connected
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.ascent_poll_vehicle
                        card_mod:
                          style: "ha-card {\n  justify-content: center;\n}\nha-card:hover\
                            \ {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
              - title: ''
                image_url: /local/logos/ascent.png
                charging_image_url: ''
                image_url_type: image
                charging_image_url_type: none
                vehicle_type: Fuel
                unit_type: mi
                level_entity: ''
                range_entity: ''
                charging_status_entity: ''
                location_entity: device_tracker.ascent
                mileage_entity: sensor.ascent_odometer
                show_level: true
                show_range: true
                show_location: true
                show_mileage: true
                show_car_state: false
                show_charge_limit: true
                icon_grid_entities:
                  - row-separator
                  - binary_sensor.ascent_trouble
                  - binary_sensor.ascent_doors
                  - binary_sensor.ascent_windows
                custom_icons:
                  binary_sensor.ascent_trouble:
                    active: mdi:alert
                    inactive: no-icon
                    inactiveState: default
                    activeState: default
                    activeColor: var(--red-color)
                  binary_sensor.ascent_doors:
                    active: mdi:car-door
                    inactive: mdi:car-door
                    inactiveState: default
                    activeState: default
                    activeColor: var(--red-color)
                  binary_sensor.ascent_windows:
                    active: mdi:window-open
                    inactive: mdi:window-closed
                    inactiveState: default
                    activeState: default
                    activeColor: var(--red-color)
                  device_tracker.ascent:
                    active: mdi:map
                    inactive: mdi:map
                icon_interactions:
                  binary_sensor.ascent_trouble:
                    type: more-info
                  binary_sensor.ascent_doors:
                    type: more-info
                  binary_sensor.ascent_windows:
                    type: more-info
                icon_styles: {}
                icon_labels:
                  sensor.ascent_avg_fuel_consumption: right
                hybrid_display_order: fuel_first
                car_state_entity: ''
                charge_limit_entity: ''
                icon_size: 24
                icon_gap: 12
                showEntityInformation: true
                carStateTextColor: var(--primary-text-color)
                rangeTextColor: var(--primary-text-color)
                percentageTextColor: var(--primary-text-color)
                icon_sizes: {}
                engine_on_entity: binary_sensor.ascent_ignition
                row_separator_color: Default
                row_separator_height: 1
                row_separators:
                  '0':
                    color: transparent
                    height: 1
                    icon_gap: 20
                    horizontalAlignment: center
                    verticalAlignment: middle
                  '6':
                    color: transparent
                    height: 1
                    icon_gap: 20
                    horizontalAlignment: center
                    verticalAlignment: middle
                iconActiveColor: var(--primary-color)
                iconInactiveColor: var(--primary-text-color)
                useFormattedEntities: true
                mainImageHeight: 400px
                chargingImageHeight: 140px
                showTitle: false
                layoutType: single
                useBarGradient: true
                barGradientStops:
                  - percentage: 0
                    color: '#ff0000'
                  - percentage: 100
                    color: '#00ff00'
                cardTitleColor: var(--title-color)
                cardBackgroundColor: var(--ha-card-background,var(--card-background-color,#fff))
                barBackgroundColor: var(--primary-background-color)
                barBorderColor: var(--primary-background-color)
                barFillColor: var(--accent-color)
                limitIndicatorColor: var(--primary-text-color)
                infoTextColor: var(--secondary-text-color)
                show_engine_animation: false
                show_charging_animation: false
                show_charging_status: true
                show_engine_on: true
                engine_on_image_url_type: none
                type: custom:ultra-vehicle-card
                battery_level_entity: ''
                battery_range_entity: ''
                fuel_level_entity: sensor.ascent_fuel_level
                fuel_range_entity: sensor.ascent_range
                show_battery: true
                show_battery_range: true
                show_fuel: true
                show_fuel_range: true
                engine_on_image_url: ''
                engine_on_image_entity: ''
                fuel_range_url: ''
                engine_on_url: ''
                location_url: ''
                mileage_url: ''
                fuel_level_url: ''
              - type: map
                entities:
                  - entity: device_tracker.ascent
                aspect_ratio: '4:3'
                hours_to_show: 24
                default_zoom: 12
                theme_mode: auto
                card_mod:
                  style:
                    .: ":host {\n  /* Define Person State colors. Can be added to\
                      \ theme */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                      \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n\
                      \  --state-person-unknown: var(--grey-color);\n\n  /* Set person\
                      \ state color */\n  --state-person:\n  {% if is_state(config.entities[0].entity,\
                      \ ['home', 'not_home', 'unknown']) %}\n    var(--state-person-{{\
                      \ states(config.entities[0].entity) | replace('_', '-') }})\n\
                      \  {% else %}\n    var(--state-person-zone)\n  {% endif %};\n\
                      }\nha-card {\n  /* Remove default card styling without affecting\
                      \ child elements */\n  box-shadow: none;\n  border-width: 0;\n\
                      \  /*border-radius: 0px 0px var(--ha-card-border-radius, 12px)\
                      \ var(--ha-card-border-radius, 12px);*/\n  transition: all 0s;\n\
                      }\nha-icon-button {\n  /* Position center button */\n  bottom:\
                      \ 12px;\n  left: 12px !important;\n  top: auto !important;\n\
                      \n  /* Style center button to match Chip */\n  color: var(--deep-orange-color)\
                      \ !important;\n  background: color-mix(in srgb, var(--deep-orange-color)\
                      \ 20%, transparent);\n  border-radius: var(--mush-chip-border-radius,\
                      \ 19px);\n  border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color,\
                      \ var(--divider-color, #e0e0e0)) !important;\n}\n"
                    ha-map $ ha-entity-marker $: ".marker {\n  /* Style person marker\
                      \ & adjust position to avoid blocking waypoints */\n  border:\
                      \ 3px solid var(--state-person) !important;\n  border-radius:\
                      \ 50% 50% 50% 0px !important;\n  transform: rotate(-45deg) translate(50%,\
                      \ -50%);\n  overflow: visible !important;\n  background: var(--state-person)\
                      \ !important;\n}\n.entity-picture {\n  /* Correct orientation\
                      \ of person avatar */\n  transform: rotate(45deg);\n  border-radius:\
                      \ 50%;\n}\n"
                    ha-map $: "path:first-child {\n  /* Style accuracy radius */\n\
                      \  fill: color-mix(in srgb, var(--state-person) 50%, transparent);\n\
                      \  stroke-width: 0px;\n}\npath:nth-child(even) {\n  /* Styling\
                      \ for waypoints */\n  stroke: var(--primary-color);\n  fill:\
                      \ var(--primary-color);\n  stroke-width: 4px;\n}\npath:nth-child(odd):not(:first-child)\
                      \ {\n  /* Styling for lines */\n  stroke: var(--primary-color);\n\
                      \  stroke-width: 4px;\n}\n.leaflet-control-attribution {\n \
                      \ /* Style attribution text */\n  background: rgba(var(--rgb-card-background-color),\
                      \ 0.2) !important;\n  font-size: 8px;\n}\n.leaflet-container\
                      \ a {\n  /* Set color of zoom icons & attribution text */\n\
                      \  color: var(--secondary-text-color);\n}\n.leaflet-control-zoom-in,\n\
                      .leaflet-control-zoom-out {\n  /* Style zoom buttons like Chips\
                      \ */\n  border-radius: var(--mush-chip-border-radius, 19px)\
                      \ !important;\n  padding: 3px;\n  background: rgb(var(--rgb-secondary-text-color),\
                      \ 0.2) !important;\n  margin: 8px 12px 0px;\n  border: var(--ha-card-border-width,\
                      \ 1px) solid var(--ha-card-border-color, var(--divider-color,\
                      \ #e0e0e0)) !important;\n}\n.leaflet-top {\n  /* Move zoom buttons\
                      \ to bottom of map */\n  bottom: 0px !important;\n}\n.leaflet-control-zoom\
                      \ {\n  /* Allow buttons to be moved */\n  position: absolute\
                      \ !important;\n\n  /* Adjust spacing for border */\n  bottom:\
                      \ calc(2 * var(--ha-card-border-width, 1px) + 56px);\n\n  /*\
                      \ Remove extra margin */\n  margin: 0px !important;\n\n  /*\
                      \ Remove zoom control border */\n  border: none !important;\n\
                      }\n"
                    ha-icon-button $ mwc-icon-button $: "button {\n  /* Size center\
                      \ button to match Chip */\n  height: var(--mush-chip-height,\
                      \ 36px) !important;\n  width: var(--mush-chip-height, 36px)\
                      \ !important;\n  --mdc-icon-size: 22px;\n}\n"
                layout_options:
                  grid_columns: full
                  grid_rows: 7
              - type: custom:expander-card
                gap: 0em
                padding: 0em
                child-padding: 0.5em
                title-card-padding: 0em
                title-card-button-overlay: true
                overlay-margin: calc(var(--ha-card-border-radius, 12px) / 2) auto
                title: Gas Prices
                cards:
                  - type: custom:auto-entities
                    filter:
                      include:
                        - integration: gasbuddy
                          options:
                            type: tile
                            show_entity_picture: true
                    sort:
                      method: state
                    card:
                      type: custom:layout-card
                      cards: []
                      layout_type: masonry
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#kona'
                button_type: name
                name: Kona
                icon: fapro:hyundai
                show_state: false
                width_desktop: 600px
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n.bubble-sub-button-1\
                  \ {\n  display: ${hass.states['binary_sensor.kona_problems'].state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-1 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}"
                sub_button:
                  - entity: binary_sensor.kona_problems
                    show_background: false
                  - entity: sensor.kona_lease_tracker
                    show_state: true
                    show_background: false
                  - entity: sensor.kona_car_battery_level
                    show_state: true
                    show_background: false
              - type: custom:expander-card
                gap: 0em
                padding: 0em
                child-padding: 0.5em
                title-card-padding: 0em
                title-card-button-overlay: true
                overlay-margin: calc(var(--ha-card-border-radius, 12px) / 2) auto
                title-card:
                  type: vertical-stack
                  cards:
                    - type: custom:mushroom-template-card
                      primary: Remote Start
                      secondary: "{%- if is_state(\"device_tracker.kona_location\"\
                        , \"home\") -%}\n  Open the Garage and Start the Kona\n{%-\
                        \ else -%}\n  Start the Kona\n{%- endif -%}"
                      icon: mdi:key-wireless
                      entity: script.kona_remote_start
                      icon_color: amber
                      tap_action:
                        action: none
                      hold_action:
                        action: call-service
                        service: script.turn_on
                        target:
                          entity_id: script.kona_remote_start
                      card_mod:
                        style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
                    - type: custom:timer-bar-card
                      filter: true
                      invert: true
                      state_color: true
                      bar_height: 12px
                      bar_radius: var(--ha-card-border-radius, 12px)
                      bar_direction: rtl
                      bar_foreground: var(--lime-color)
                      bar_background: var(--disabled-color)
                      compressed: true
                      modifications:
                        - remaining: 00:03:00
                          bar_foreground: var(--amber-color)
                        - remaining: 00:02:00
                          bar_foreground: var(--orange-color)
                        - remaining: 00:01:00
                          bar_foreground: var(--red-color)
                      entities:
                        - entity: timer.kona_remote_start
                          name: Timer
                cards:
                  - type: custom:mushroom-chips-card
                    card_mod:
                      style: ".chip-container {\n  display: grid !important;\n  grid-template-columns:\
                        \ 1fr 1fr 1fr 1fr;\n}\n"
                    chips:
                      - type: entity
                        entity: lock.kona_door_lock
                        name: Lock
                        icon: mdi:lock
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: lock.lock
                          target:
                            entity_id: lock.kona_door_lock
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: device_tracker.kona_location
                        name: Remote Start
                        icon: mdi:key-wireless
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: kia_uvo.start_climate
                          device_id: f27d2038fd3fe30bc627505de54ddea8
                          duration: 10
                          climate: true
                          temperature: 70
                          heating: '0'
                          defrost: false
                          flseat: '0'
                          frseat: '0'
                          rlseat: '0'
                          rrseat: '0'
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: lock.kona_door_lock
                        name: Unlock
                        icon: mdi:lock-open
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: lock.unlock
                          target:
                            entity_id: lock.kona_door_lock
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: device_tracker.kona_location
                        name: Remote Stop
                        icon: mdi:stop-circle-outline
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: kia_uvo.stop_climate
                          data:
                            device_id: f27d2038fd3fe30bc627505de54ddea8
                        card_mod:
                          style: "ha-card:hover {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                  - type: custom:mushroom-chips-card
                    card_mod:
                      style: ".chip-container {\n  display: grid !important;\n  grid-template-columns:\
                        \ max-content max-content;\n  margin-top: 15px;\n  place-content:\
                        \ space-around !important;\n}\n"
                    chips:
                      - type: entity
                        entity: device_tracker.kona_location
                        name: Update
                        icon: mdi:refresh
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: kia_uvo.update
                          data:
                            device_id: f27d2038fd3fe30bc627505de54ddea8
                        card_mod:
                          style: "ha-card {\n  justify-content: center;\n}\nha-card:hover\
                            \ {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
                      - type: entity
                        entity: device_tracker.kona_location
                        name: Force Update
                        icon: mdi:car-connected
                        content_info: name
                        tap_action:
                          action: none
                        hold_action:
                          action: call-service
                          service: kia_uvo.force_update
                          data:
                            device_id: f27d2038fd3fe30bc627505de54ddea8
                        card_mod:
                          style: "ha-card {\n  justify-content: center;\n}\nha-card:hover\
                            \ {\n  --chip-background: rgb(var(--rgb-disabled));\n\
                            }\n"
              - title: ''
                image_url: /local/logos/kona.png
                charging_image_url: ''
                image_url_type: image
                charging_image_url_type: none
                vehicle_type: Fuel
                unit_type: mi
                level_entity: ''
                range_entity: ''
                charging_status_entity: ''
                location_entity: device_tracker.kona_location
                mileage_entity: sensor.kona_odometer
                show_level: true
                show_range: true
                show_location: true
                show_mileage: true
                show_car_state: false
                show_charge_limit: true
                icon_grid_entities:
                  - row-separator
                  - binary_sensor.kona_doors
                  - binary_sensor.kona_windows
                  - binary_sensor.kona_defrost
                  - binary_sensor.kona_back_window_heater
                  - binary_sensor.kona_air_conditioner
                custom_icons:
                  binary_sensor.kona_doors:
                    active: mdi:car-door
                    inactive: mdi:car-door
                    inactiveState: default
                    activeState: default
                    activeColor: var(--red-color)
                  binary_sensor.kona_problems:
                    active: mdi:alert
                    inactive: no-icon
                  binary_sensor.kona_windows:
                    active: mdi:window-open
                    inactive: mdi:window-closed
                    inactiveState: default
                    activeState: default
                    activeColor: var(--red-color)
                  device_tracker.kona_location:
                    active: mdi:map
                    inactive: mdi:map
                    inactiveColor: '#e4e4e7'
                  binary_sensor.kona_defrost:
                    inactiveState: default
                    activeState: default
                    activeColor: var(--orange-color)
                  binary_sensor.kona_back_window_heater:
                    inactiveState: default
                    activeState: default
                    activeColor: var(--orange-color)
                  binary_sensor.kona_air_conditioner:
                    inactiveState: default
                    activeState: default
                    activeColor: var(--light-blue-color)
                icon_interactions:
                  binary_sensor.kona_doors:
                    type: more-info
                  sensor.kona_car_battery_level:
                    type: more-info
                  binary_sensor.kona_windows:
                    type: more-info
                icon_styles:
                  binary_sensor.kona_windows: icon
                icon_labels:
                  sensor.kona_car_battery_level: right
                hybrid_display_order: fuel_first
                car_state_entity: ''
                charge_limit_entity: ''
                icon_size: 24
                icon_gap: 12
                showEntityInformation: true
                carStateTextColor: var(--primary-text-color)
                rangeTextColor: var(--primary-text-color)
                percentageTextColor: var(--primary-text-color)
                icon_sizes: {}
                engine_on_entity: binary_sensor.kona_engine
                row_separator_color: Default
                row_separator_height: 1
                row_separators:
                  '0':
                    color: transparent
                    height: 1
                    icon_gap: 20
                    horizontalAlignment: center
                    verticalAlignment: middle
                  '7':
                    color: transparent
                  '8':
                    color: transparent
                    height: 1
                    icon_gap: 20
                    horizontalAlignment: center
                    verticalAlignment: middle
                  '9':
                    color: transparent
                    height: 1
                    icon_gap: 20
                    horizontalAlignment: center
                    verticalAlignment: middle
                iconActiveColor: var(--primary-color)
                iconInactiveColor: var(--primary-text-color)
                useFormattedEntities: true
                mainImageHeight: 400px
                chargingImageHeight: 140px
                showTitle: false
                layoutType: single
                useBarGradient: true
                barGradientStops:
                  - percentage: 0
                    color: '#ff0000'
                  - percentage: 100
                    color: '#00ff00'
                cardTitleColor: var(--title-color)
                cardBackgroundColor: var(--ha-card-background,var(--card-background-color,#fff))
                barBackgroundColor: var(--primary-background-color)
                barBorderColor: var(--primary-background-color)
                barFillColor: var(--accent-color)
                limitIndicatorColor: var(--primary-text-color)
                infoTextColor: var(--secondary-text-color)
                show_engine_animation: false
                show_charging_animation: false
                show_charging_status: true
                show_engine_on: true
                engine_on_image_url_type: none
                type: custom:ultra-vehicle-card
                battery_level_entity: ''
                battery_range_entity: ''
                fuel_level_entity: sensor.kona_fuel_level
                fuel_range_entity: sensor.kona_fuel_driving_range
                show_battery: true
                show_battery_range: true
                show_fuel: true
                show_fuel_range: true
                engine_on_image_url: ''
                engine_on_image_entity: ''
                image_entity: ''
                fuel_level_url: ''
                fuel_range_url: ''
                engine_on_url: ''
                location_url: ''
                mileage_url: ''
              - type: map
                entities:
                  - entity: device_tracker.kona_location
                aspect_ratio: '4:3'
                hours_to_show: 24
                default_zoom: 12
                theme_mode: auto
                card_mod:
                  style:
                    .: ":host {\n  /* Define Person State colors. Can be added to\
                      \ theme */\n  --state-person-home: var(--green-color);\n  --state-person-not-home:\
                      \ var(--red-color);\n  --state-person-zone: var(--blue-color);\n\
                      \  --state-person-unknown: var(--grey-color);\n\n  /* Set person\
                      \ state color */\n  --state-person:\n  {% if is_state(config.entities[0].entity,\
                      \ ['home', 'not_home', 'unknown']) %}\n    var(--state-person-{{\
                      \ states(config.entities[0].entity) | replace('_', '-') }})\n\
                      \  {% else %}\n    var(--state-person-zone)\n  {% endif %};\n\
                      }\nha-card {\n  /* Remove default card styling without affecting\
                      \ child elements */\n  box-shadow: none;\n  border-width: 0;\n\
                      \  /*border-radius: 0px 0px var(--ha-card-border-radius, 12px)\
                      \ var(--ha-card-border-radius, 12px);*/\n  transition: all 0s;\n\
                      }\nha-icon-button {\n  /* Position center button */\n  bottom:\
                      \ 12px;\n  left: 12px !important;\n  top: auto !important;\n\
                      \n  /* Style center button to match Chip */\n  color: var(--deep-orange-color)\
                      \ !important;\n  background: color-mix(in srgb, var(--deep-orange-color)\
                      \ 20%, transparent);\n  border-radius: var(--mush-chip-border-radius,\
                      \ 19px);\n  border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color,\
                      \ var(--divider-color, #e0e0e0)) !important;\n}\n"
                    ha-map $ ha-entity-marker $: ".marker {\n  /* Style person marker\
                      \ & adjust position to avoid blocking waypoints */\n  border:\
                      \ 3px solid var(--state-person) !important;\n  border-radius:\
                      \ 50% 50% 50% 0px !important;\n  transform: rotate(-45deg) translate(50%,\
                      \ -50%);\n  overflow: visible !important;\n  background: var(--state-person)\
                      \ !important;\n}\n.entity-picture {\n  /* Correct orientation\
                      \ of person avatar */\n  transform: rotate(45deg);\n  border-radius:\
                      \ 50%;\n}\n"
                    ha-map $: "path:first-child {\n  /* Style accuracy radius */\n\
                      \  fill: color-mix(in srgb, var(--state-person) 50%, transparent);\n\
                      \  stroke-width: 0px;\n}\npath:nth-child(even) {\n  /* Styling\
                      \ for waypoints */\n  stroke: var(--primary-color);\n  fill:\
                      \ var(--primary-color);\n  stroke-width: 4px;\n}\npath:nth-child(odd):not(:first-child)\
                      \ {\n  /* Styling for lines */\n  stroke: var(--primary-color);\n\
                      \  stroke-width: 4px;\n}\n.leaflet-control-attribution {\n \
                      \ /* Style attribution text */\n  background: rgba(var(--rgb-card-background-color),\
                      \ 0.2) !important;\n  font-size: 8px;\n}\n.leaflet-container\
                      \ a {\n  /* Set color of zoom icons & attribution text */\n\
                      \  color: var(--secondary-text-color);\n}\n.leaflet-control-zoom-in,\n\
                      .leaflet-control-zoom-out {\n  /* Style zoom buttons like Chips\
                      \ */\n  border-radius: var(--mush-chip-border-radius, 19px)\
                      \ !important;\n  padding: 3px;\n  background: rgb(var(--rgb-secondary-text-color),\
                      \ 0.2) !important;\n  margin: 8px 12px 0px;\n  border: var(--ha-card-border-width,\
                      \ 1px) solid var(--ha-card-border-color, var(--divider-color,\
                      \ #e0e0e0)) !important;\n}\n.leaflet-top {\n  /* Move zoom buttons\
                      \ to bottom of map */\n  bottom: 0px !important;\n}\n.leaflet-control-zoom\
                      \ {\n  /* Allow buttons to be moved */\n  position: absolute\
                      \ !important;\n\n  /* Adjust spacing for border */\n  bottom:\
                      \ calc(2 * var(--ha-card-border-width, 1px) + 56px);\n\n  /*\
                      \ Remove extra margin */\n  margin: 0px !important;\n\n  /*\
                      \ Remove zoom control border */\n  border: none !important;\n\
                      }\n"
                    ha-icon-button $ mwc-icon-button $: "button {\n  /* Size center\
                      \ button to match Chip */\n  height: var(--mush-chip-height,\
                      \ 36px) !important;\n  width: var(--mush-chip-height, 36px)\
                      \ !important;\n  --mdc-icon-size: 22px;\n}\n"
              - type: custom:expander-card
                gap: 0em
                padding: 0em
                child-padding: 0.5em
                title-card-padding: 0em
                title-card-button-overlay: true
                overlay-margin: calc(var(--ha-card-border-radius, 12px) / 2) auto
                title: Gas Prices
                cards:
                  - type: custom:auto-entities
                    filter:
                      include:
                        - integration: gasbuddy
                          options:
                            type: tile
                            show_entity_picture: true
                    sort:
                      method: state
                    card:
                      type: custom:layout-card
                      cards: []
                      layout_type: masonry
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#updates'
                button_type: name
                name: Updates
                icon: mdi:package-up
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
              - type: custom:auto-entities
                filter:
                  include:
                    - group: sensor.updates
                      options:
                        type: tile
                        state_content:
                          - install_status
                          - installed_version
                          - latest_version
                        features:
                          - type: update-actions
                            backup: 'yes'
                  exclude: []
                card:
                  type: custom:layout-card
                  cards: []
                  layout_type: masonry
                sort:
                  method: friendly_name
              - type: custom:mushroom-chips-card
                alignment: center
                chips:
                  - type: template
                    content: Updates Page
                    tap_action:
                      action: navigate
                      navigation_path: /config/updates
                card_mod:
                  style: "ha-card {\n  /* Style Chip like Mushroom button */\n  --chip-background:\
                    \ rgba(var(--rgb-dark-grey), 0.2);\n  --chip-border-radius: var(--mush-control-border-radius,\
                    \ 12px);\n  --chip-height: var(--mush-control-height, 42px);\n\
                    \  --chip-box-shadow: none;\n  user-select: none;\n}\nha-card:active\
                    \ {\n  /* Add effect to give feedback on button press */\n  --chip-background:\
                    \ rgba(var(--rgb-disabled), 0.2);\n}\n"
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    badges:
      - type: custom:mushroom-chips-card
        card_mod:
          style: "ha-card {\n  --chip-box-shadow: none;\n  --chip-background: none;\n\
            \  --chip-border-width: 0;\n  --chip-icon-size: 1.1em;\n}\n"
        chips:
          - type: menu
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
      - type: custom:mushroom-template-badge
        icon: mdi:dots-horizontal-circle
        color: blue
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Broadcast
              content:
                type: vertical-stack
                cards:
                  - type: heading
                    icon: mdi:sofa-single
                    heading: Family Room
                    heading_style: title
                  - type: grid
                    columns: 2
                    square: false
                    cards:
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: School
                        icon: mdi:chair-school
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: Time to go to School!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Snack
                        icon: mdi:apple
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: It's snack time!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Lunch
                        icon: mdi:food-fork-drink
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: Hey, come get some lunch.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Dinner
                        icon: mdi:food
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: Head up-stairs, it's time for dinner. Don't forget
                              to wash your hands!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Breakfast
                        icon: mdi:egg-fried
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: It's time for breakfast. Wash your hands!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Bed Time
                        icon: mdi:cookie-edit
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: It's time for bed.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Ethan up-stairs
                        icon: mdi:robot
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: Hey Ethan, come up-stairs please.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Emma up-stairs
                        icon: mdi:unicorn-variant
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: Hey Emma, come up-stairs please.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Kids up-stairs
                        icon: mdi:cookie-edit
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_family_room_speaker
                            volume: 80
                            message: Hey kids, come up-stairs please.
                          target: {}
                          service: script.media_play
                  - type: heading
                    icon: mdi:sofa-single
                    heading: Living Room
                    heading_style: title
                  - type: grid
                    columns: 2
                    square: false
                    cards:
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: School
                        icon: mdi:chair-school
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: Time to go to School!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Snack
                        icon: mdi:apple
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: It's snack time!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Lunch
                        icon: mdi:food-fork-drink
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: Hey, come get some lunch.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Dinner
                        icon: mdi:food
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: It's time for dinner. Don't forget to wash your
                              hands!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Breakfast
                        icon: mdi:egg-fried
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: It's time for breakfast. Wash your hands!
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Bed Time
                        icon: mdi:cookie-edit
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: It's time for bed.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Ethan down-stairs
                        icon: mdi:robot
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: Hey Ethan, come down-stairs please.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Emma down-stairs
                        icon: mdi:unicorn-variant
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: Hey Emma, come down-stairs please.
                          target: {}
                          service: script.media_play
                      - type: custom:bubble-card
                        card_type: button
                        button_type: name
                        name: Kids down-stairs
                        icon: mdi:cookie-edit
                        tap_action:
                          action: call-service
                          data:
                            media_player: media_player.cast_living_room_speaker
                            volume: 90
                            message: Hey kids, come down-stairs please.
                          target: {}
                          service: script.media_play
      - type: custom:mushroom-template-badge
        label: Security
        content: '{% from "util.jinja" import security_count %}

          {{ iif(security_count() | int == 0, "Secure", "Not Secure") }}'
        icon: '{% from "util.jinja" import security_count %}

          {{ iif(security_count() | int == 0, "mdi:shield-check",

          "mdi:shield-alert") }}'
        color: '{% from "util.jinja" import security_count %}

          {{ iif(security_count() | int == 0, "green", "red") }}'
        tap_action:
          action: navigate
          navigation_path: security
      - type: custom:mushroom-template-badge
        entity: binary_sensor.all_doors
        label: Doors
        content: '{{ expand(entity) | selectattr(''state'', ''=='', ''on'') | list
          | count }}'
        icon: '{{ iif(is_state(entity, "on"), "mdi:door-open", "mdi:door") }}'
        color: '{{ iif(is_state(entity, "on"), "cyan", "grey") }}'
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: All Doors
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: heading
                    icon: mdi:door
                    heading: All Doors
                    heading_style: title
                    badges:
                      - type: entity
                        entity: binary_sensor.all_doors
                        color: red
                  - type: custom:auto-entities
                    show_empty: false
                    card:
                      type: custom:layout-card
                      cards: []
                      layout_type: masonry
                    sort:
                      method: friendly_name
                    filter:
                      include:
                        - group: binary_sensor.all_doors
                          options:
                            type: custom:mushroom-entity-card
                            layout: horizontal
                            secondary_info: last-changed
                            tap_action:
                              action: none
                            hold_action:
                              action: none
                            card_mod:
                              style: "ha-card {\n  transition: all 0s;\n  padding:\
                                \ 4px 12px !important;\n  border-width: 0;\n}\n"
        visibility:
          - condition: state
            entity: binary_sensor.all_doors
            state: 'on'
      - type: custom:mushroom-template-badge
        entity: light.all_lights
        content: '{{ expand(entity) | selectattr(''state'', ''=='', ''on'') | list
          | count }}'
        icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-group", "mdi:lightbulb-group-off")
          }}'
        color: '{{ iif(is_state(entity, "on"), "amber", "grey") }}'
        tap_action:
          action: navigate
          navigation_path: lights
        hold_action:
          action: call-service
          service: light.turn_off
          target:
            entity_id: light.all_lights
      - type: custom:mushroom-template-badge
        entity: sensor.emporiavue_main_total_power
        label: Power
        content: "{% if has_value(entity) %}\n  {% set power = int(states(entity),\
          \ 0) | abs %}\n  {% if power > 1000 %}\n    {{ (power | float * 0.001) |\
          \ round(2) }} kWh\n  {% else %}\n    {{ power }} W\n  {% endif %}\n{% endif\
          \ %}"
        icon: "{% if has_value(entity) %}\n  {% if int(states(entity), 0) < 0 %}\n\
          \    mdi:transmission-tower-import\n  {% else %}\n    mdi:transmission-tower-export\n\
          \  {% endif %}\n{% else %}\n  mdi:transmission-tower-off\n{% endif %}"
        color: "{% if has_value(entity) %}\n  {% if int(states(entity), 0) < 0 %}\n\
          \    lime\n  {% else %}\n    deep-orange\n  {% endif %}\n{% else %}\n  grey\n\
          {% endif %}"
        tap_action:
          action: navigate
          navigation_path: power
      - type: custom:mushroom-template-badge
        entity: binary_sensor.computers
        content: '{{ expand(config.entity) | selectattr("state", "==", "on") | list
          | count }}'
        icon: mdi:desktop-tower
        color: '{{ iif (is_state(entity, "on"), "teal", "grey") }}'
        tap_action:
          action: navigate
          navigation_path: computer
      - type: custom:mushroom-template-badge
        entity: sensor.bambu_p1s_print_status
        label: Bambu
        content: "{% if is_state(entity, \"running\") and\nhas_value(\"sensor.bambu_p1s_current_layer\"\
          ) %}\n  {{ states('sensor.bambu_p1s_current_layer') }} / {{\n  states('sensor.bambu_p1s_total_layer_count')\
          \ }}\n{% endif %}"
        icon: mdi:printer-3d
        color: "{% if is_state(\"sensor.bambu_p1s_current_stage\", \"idle\") %}\n\
          \  grey\n{% elif is_state(entity, \"running\") %}\n  green\n{% elif is_state(entity,\
          \ \"finish\") %}\n  orange\n{% elif states(entity) in [\"idle\", \"pause\"\
          ] %}\n  yellow\n{% elif states(entity) in [\"init\", \"prepare\", \"slicing\"\
          ] %}\n  light-blue\n{% elif is_state(entity, \"failed\") %}\n  red\n{% else\
          \ %}\n  grey\n{% endif %}"
        tap_action:
          action: navigate
          navigation_path: bambu
      - type: custom:mushroom-template-badge
        entity: sensor.meater_probe_cook_state
        label: Meater
        content: "{% if has_value(entity) %}\n  {{ states(\"sensor.meater_probe_internal\"\
          ) }} °F\n  {% if has_value(\"sensor.meater_probe_cook_time_remaining\")\
          \  %}\n    {% set t = (states(\"sensor.meater_probe_cook_time_remaining\"\
          ) | as_datetime - now()).total_seconds() %}\n    | {{ t | timestamp_custom('%-H\
          \ hr %-M min' if t > 3600 else '%-M min', false) }}\n  {% endif %}\n{% endif\
          \ %}"
        icon: mdi:food-drumstick
        color: '{{ has_value(entity) | iif("brown", "grey") }}'
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Meater
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:mushroom-entity-card
                    entity: sensor.meater_probe_cook_name
                    name: Cooking
                    primary_info: state
                    secondary_info: name
                    icon: mdi:food-steak
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:mushroom-entity-card
                        entity: sensor.meater_probe_cook_time_elapsed
                        name: Elapsed Time
                        primary_info: state
                        secondary_info: name
                      - type: custom:mushroom-entity-card
                        entity: sensor.meater_probe_cook_time_remaining
                        name: Remaining Time
                        primary_info: state
                        secondary_info: name
                  - type: custom:mushroom-title-card
                    subtitle: Temperature
                  - type: custom:apexcharts-card
                    card_mod:
                      style: "ha-card {\n  padding: 0px;\n  border: none;\n  box-shadow:\
                        \ none;\n  margin-bottom: -15px;\n}\n.apexcharts-tooltip-series-group\
                        \ {\n  padding-top: 0px !important;\n  padding-bottom: 0px\
                        \ !important;\n  margin-top: 0px !important;\n  margin-bottom:\
                        \ 0px !important;\n  display: none;\n  text-align: left;\n\
                        \  justify-content: left;\n  align-items: center;\n}\n"
                    apex_config:
                      chart:
                        foreColor: '#7B7B7B'
                        toolbar:
                          show: false
                      grid:
                        borderColor: '#7B7B7B'
                      xaxis:
                        tooltip:
                          enabled: false
                    header:
                      show: true
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: true
                    all_series_config:
                      extend_to: now
                      float_precision: 2
                      curve: stepline
                    brush:
                      selection_span: 1h
                      apex_config:
                        chart:
                          foreColor: '#7B7B7B'
                          toolbar:
                            show: false
                        grid:
                          borderColor: '#7B7B7B'
                        xaxis:
                          tooltip:
                            enabled: false
                    series:
                      - entity: sensor.meater_probe_internal
                        name: Internal
                        stroke_width: 4
                        color: rgb(33,150,243)
                        show:
                          in_brush: true
                      - entity: sensor.meater_probe_ambient
                        name: Ambient
                        stroke_width: 4
                        color: rgb(139,195,74)
                      - entity: sensor.meater_probe_cook_target_temp
                        name: Target
                        type: area
                        opacity: 0.2
                        stroke_width: 1
                        color: rgb(233,30,99)
      - type: custom:mushroom-template-badge
        entity: binary_sensor.cat_feeder_error
        label: Feeder
        content: Error
        icon: mdi:cat
        color: red
        tap_action:
          action: navigate
          navigation_path: utility
        visibility:
          - condition: state
            entity: binary_sensor.cat_feeder_error
            state: 'on'
      - type: custom:mushroom-template-badge
        entity: sensor.cat_feeder_food_level
        label: Feeder
        content: '{{ states(entity) | round(0) }}%'
        icon: mdi:cat
        color: '{% from "util.jinja" import battery_color %}

          {{ battery_color(entity) }}'
        tap_action:
          action: navigate
          navigation_path: utility
        visibility:
          - condition: numeric_state
            entity: sensor.cat_feeder_food_level
            below: 20
      - type: custom:mushroom-template-badge
        entity: sensor.water_softener_salt_monitor_salt_level
        label: Salt
        content: '{{ states(entity) | round(0) }}%'
        icon: mdi:arrow-expand-vertical
        color: cyan
        tap_action:
          action: navigate
          navigation_path: utility
        visibility:
          - condition: numeric_state
            entity: sensor.water_softener_salt_monitor_salt_level
            below: 10
      - type: custom:mushroom-template-badge
        entity: sensor.mail_usps_mail
        label: Mail
        content: '{{ states(entity) }} {{ iif(is_state(entity, "1"), "piece", "pieces")
          }}'
        icon: mdi:mail
        color: blue
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Mail
              size: fullscreen
              content:
                type: picture-entity
                entity: camera.mail_usps_camera
                camera_image: camera.mail_usps_camera
                show_name: false
                show_state: false
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.mail_usps_mail
            above: 0
      - type: custom:mushroom-template-badge
        entity: sensor.mail_packages_delivered
        label: Delivered
        content: '{{ states(entity) }} {{ iif(is_state(entity, "1"), "package", "packages")
          }}

          '
        icon: mdi:package-variant
        color: orange
        visibility:
          - condition: numeric_state
            entity: sensor.mail_packages_delivered
            above: 0
      - type: custom:streamline-card
        template: package_delivery
        variables:
          - entity: sensor.mail_usps_delivering
          - name: USPS
          - icon: fab:usps
          - icon_color: blue
          - url: https://tools.usps.com/go/TrackConfirmAction?tLabels=##TRACK_ID##
        visibility:
          - condition: numeric_state
            entity: sensor.mail_usps_delivering
            above: 0
          - condition: state
            entity: sensor.mail_usps_delivering
            state_not: unavailable
          - condition: state
            entity: sensor.mail_usps_delivering
            state_not: unknown
      - type: custom:streamline-card
        template: package_delivery
        variables:
          - entity: sensor.mail_ups_delivering
          - name: UPS
          - icon: fab:ups
          - icon_color: brown
          - url: https://www.ups.com/track?loc=en_US&tracknum=##TRACK_ID##
        visibility:
          - condition: numeric_state
            entity: sensor.mail_ups_delivering
            above: 0
          - condition: state
            entity: sensor.mail_ups_delivering
            state_not: unavailable
          - condition: state
            entity: sensor.mail_ups_delivering
            state_not: unknown
      - type: custom:streamline-card
        template: package_delivery
        variables:
          - entity: sensor.mail_fedex_delivering
          - name: FedEx
          - icon: fab:fedex
          - icon_color: purple
          - url: https://www.fedex.com/fedextrack/?trknbr=##TRACK_ID##
        visibility:
          - condition: numeric_state
            entity: sensor.mail_fedex_delivering
            above: 0
          - condition: state
            entity: sensor.mail_fedex_delivering
            state_not: unavailable
          - condition: state
            entity: sensor.mail_fedex_delivering
            state_not: unknown
      - type: custom:streamline-card
        template: package_delivery
        variables:
          - entity: sensor.mail_amazon_packages
          - name: Amazon
          - icon: fab:amazon
          - icon_color: yellow
          - url: https://www.amazon.com/gp/your-account/order-details?orderID=##TRACK_ID##
        visibility:
          - condition: numeric_state
            entity: sensor.mail_amazon_packages
            above: 0
          - condition: state
            entity: sensor.mail_amazon_packages
            state_not: unavailable
          - condition: state
            entity: sensor.mail_amazon_packages
            state_not: unknown
      - type: custom:mushroom-template-badge
        show_name: true
        entity: sensor.low_battery_devices
        label: Battery
        content: '{{ states(entity) }}'
        icon: mdi:battery-alert
        color: red
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Low Battery Devices
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:auto-entities
                    filter:
                      include:
                        - group: sensor.low_battery_devices
                          options:
                            type: custom:mushroom-template-card
                            primary: '{{ states(entity) }}%'
                            secondary: "{{ state_attr(entity, \"friendly_name\")\n\
                              \  | regex_replace(find=\" battery level\", replace=\"\
                              \", ignorecase=true) }}"
                            icon: '{% from "util.jinja" import battery_icon %} {{
                              battery_icon(entity) }}

                              '
                            icon_color: '{% from "util.jinja" import battery_color
                              %} {{ battery_color(entity) }}'
                            badge_color: red
                            badge_icon: "{% if int(states(entity), 0) <= 15 %}\n \
                              \ mdi:exclamation-thick\n{% endif %}"
                            layout: horizontal
                            tap_action:
                              action: more-info
                      exclude: []
                    card:
                      type: custom:layout-card
                      cards: []
                      layout_type: masonry
                    sort:
                      method: friendly_name
        visibility:
          - condition: numeric_state
            entity: sensor.low_battery_devices
            above: 0
      - type: custom:mushroom-template-badge
        show_name: true
        entity: sensor.offline_devices
        label: Offline
        content: '{{ states(entity) }}'
        icon: mdi:network-off
        color: blue-grey
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Offline Devices
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:auto-entities
                    filter:
                      include:
                        - group: sensor.offline_devices
                          options:
                            type: custom:mushroom-template-card
                            primary: '{{ state_attr(entity, "friendly_name") | regex_replace(find="
                              last seen", replace="", ignorecase = true) }}'
                            secondary: "{%- if has_value(entity) -%}\n  {{ as_datetime(states(entity)).strftime(\"\
                              %Y-%m-%d %-I:%M %p\") }}\n{%- else -%}\n  Unknown\n\
                              {%- endif -%}"
                            icon: mdi:network-off
                            icon_color: yellow
                            layout: horizontal
                            tap_action:
                              action: more-info
                      exclude: []
                    card:
                      type: custom:layout-card
                      cards: []
                      layout_type: masonry
                    sort:
                      method: friendly_name
        visibility:
          - condition: numeric_state
            entity: sensor.offline_devices
            above: 0
          - condition: user
            users:
              - f615672fc2554783beab56221097564e
      - type: custom:mushroom-template-badge
        entity: sensor.updates
        label: Updates
        content: '{{ states(entity) }}'
        icon: mdi:package-up
        color: red
        visibility:
          - condition: numeric_state
            entity: sensor.updates
            above: 0
          - condition: user
            users:
              - f615672fc2554783beab56221097564e
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Updates
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:auto-entities
                    filter:
                      include:
                        - group: sensor.updates
                          options:
                            type: tile
                            state_content:
                              - install_status
                              - installed_version
                              - latest_version
                            features:
                              - type: update-actions
                                backup: 'yes'
                      exclude: []
                    card:
                      type: custom:layout-card
                      cards: []
                      layout_type: masonry
                    sort:
                      method: friendly_name
        hold_action:
          action: navigate
          navigation_path: /config/updates
      - type: custom:mushroom-template-badge
        icon: mdi:timer
        color: lime
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Timers
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:auto-entities
                    show_empty: false
                    card:
                      type: custom:timer-bar-card
                    filter:
                      template: "{%- set results = namespace(timers = []) -%} {%-\
                        \ set state_map = {\n  \"set\": \"active\",\n  \"ringing\"\
                        : \"active\",\n} -%} {%- set icon_map = {\n  \"set\": \"mdi:timer\"\
                        ,\n  \"ringing\": \"mdi:timer-alert\",\n  \"paused\": \"mdi:timer-pause\"\
                        ,\n} -%} {%- for entity_id in integration_entities('google_home')\n\
                        \  if entity_id is contains '_timers'\n-%}\n  {%- set multiple\
                        \ = not loop.first or not loop.last -%}\n  {%- set suffix\
                        \ = ''\n    if not multiple\n    else ' ⸱ ' + state_attr(entity_id,\
                        \ 'friendly_name')\n    | replace(' timers', '')\n  -%}\n\
                        \  {%- for t in state_attr(entity_id, 'timers') if as_timestamp(t.local_time_iso)\
                        \ > as_timestamp(now()) -%}\n    {%- set label = t.label if\
                        \ t.label else t.duration | regex_replace('^0:0*', '') -%}\n\
                        \    {%- set results.timers = results.timers + [{\n      'entity':\
                        \ entity_id,\n      'icon': icon_map[t.status],\n      'duration':\
                        \ {'fixed': t.duration},\n      'end_time': {'fixed': t.local_time_iso},\n\
                        \      'name': label + suffix,\n      'state': {'fixed': state_map[t.status]\
                        \ | default(t.status)},\n      \"extend_paper_buttons_row\"\
                        : {\n        \"position\": \"right\",\n        \"buttons\"\
                        : [\n          {\n            \"icon\": \"mdi:close\",\n \
                        \           \"tooltip\": \"Dismiss\",\n            \"tap_action\"\
                        : {\n              \"action\": \"call-service\",\n       \
                        \       \"service\": \"google_home.delete_timer\",\n     \
                        \         \"service_data\": {\n                \"timer_id\"\
                        : t.timer_id,\n                \"entity_id\": entity_id,\n\
                        \                \"skip_refresh\": False,\n              }\n\
                        \            }\n          }\n        ]\n      }\n    }] -%}\n\
                        \  {%- endfor -%}\n{%- endfor -%} {{ results.timers }}"
        visibility:
          - condition: or
            conditions:
              - condition: state
                entity: sensor.living_room_speaker_timers
                state_not: unavailable
              - condition: state
                entity: sensor.family_room_speaker_timers
                state_not: unavailable
              - condition: state
                entity: sensor.office_speaker_timers
                state_not: unavailable
    cards: []
  - title: Living Room
    path: living
    icon: mdi:sofa-single
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            heading_style: title
            icon: mdi:sofa
            heading: Living Room
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.living_room_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.living_room
            name: Main
            features:
              - type: light-brightness
          - type: tile
            entity: light.living_room_fan_light
            name: Fan Light
            features:
              - type: light-brightness
          - type: tile
            entity: light.living_room_lamp
            name: Lamp
            features:
              - type: light-brightness
          - type: tile
            entity: light.living_room_floor_lamp
            name: Floor Lamp
            features:
              - type: light-brightness
          - type: tile
            entity: light.front_entry
            name: Entry
            vertical: true
          - type: tile
            entity: light.hallway
            name: Hallway
            vertical: true
          - type: tile
            layout_options:
              grid_columns: full
            entity: fan.living_room_ceiling
            name: Fan
            hide_state: true
            features:
              - type: fan-speed
            card_mod:
              style:
                .: "ha-tile-icon {\n  --tile-color:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n    {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int(0) %}\n    {% if perc == 33 %} var(--green-color)\n    {%\
                  \ elif perc == 66 %} var(--yellow-color)\n    {% else %} var(--orange-color)\n\
                  \    {% endif %}\n    {% else %} var(--state-inactive-color)\n \
                  \   {% endif %};\n}\nha-state-icon {\n  animation:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n      {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int %}\n      {% set base = 'rotation infinite linear' %}\n\
                  \      {% if perc == 33 %} 1s {{base}}\n      {% elif perc == 66\
                  \ %} 0.75s {{base}}\n      {% else  %} 0.66s {{base}}\n      {%\
                  \ endif %}\n    {% else %} none\n    {% endif %};\n}\n@keyframes\
                  \ rotation {\n  0% {transform: rotate(0deg);}\n  100% {transform:\
                  \ rotate(360deg);}\n}\n"
      - type: grid
        cards:
          - type: heading
            icon: mdi:play-speed
            heading: Media
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                icon: mdi:remote-tv
                color: orange
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Living Room Media
                      content:
                        type: custom:vertical-stack-in-card
                        card_mod:
                          style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                            \ 0;\n}\n"
                        cards:
                          - type: custom:streamline-card
                            template: remote_living
                hold_action:
                  action: perform-action
                  perform_action: script.find_remote
                  data:
                    media_player: media_player.shield_living_room
          - type: custom:streamline-card
            template: media_card
            variables:
              - entity: media_player.universal_living_room
            visibility:
              - condition: state
                entity: media_player.universal_living_room
                state_not: unavailable
              - condition: state
                entity: media_player.universal_living_room
                state_not: unknown
          - type: custom:mini-media-player
            entity: media_player.cast_living_room_speaker
            name: Google Home
            icon: mdi:dots-horizontal-circle
            info: scroll
            hide:
              power: true
        column_span: 1
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.ecobee_occupancy
        icon: "{%- if is_state(\"binary_sensor.ecobee_motion\", \"on\") -%}\n  mdi:motion-sensor\n\
          {%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
          {%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.ecobee_motion\", \"on\") -%}\n  orange\n\
          {%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else -%}\n  grey\n\
          {%- endif -%}"
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.ecobee_current_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.ecobee_current_humidity
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:water-percent
        color: '{% from "util.jinja" import room_humidity %}

          {{ room_humidity(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: camera.livingroom
        icon: mdi:cctv
        color: '{{ iif(has_value(entity), "cyan", "red") }}'
        tap_action:
          action: navigate
          navigation_path: security#camera-livingroom
      - type: custom:mushroom-template-badge
        icon: mdi:remote-tv
        color: orange
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Living Room Media
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:streamline-card
                    template: remote_living
        hold_action:
          action: perform-action
          perform_action: script.find_remote
          data:
            media_player: media_player.shield_living_room
      - type: custom:mushroom-template-badge
        icon: mdi:dots-horizontal-circle
        color: blue
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Send Message
              right_button: Send
              right_button_action:
                service: script.media_play
                data:
                  media_player: media_player.cast_living_room_speaker
                  volume: 80
              content:
                - name: message
                  label: Message
                  selector:
                    select:
                      custom_value: true
                      options:
                        - label: School
                          value: Time to go to School!
                        - label: Snack
                          value: It's snack time!
                        - label: Lunch
                          value: Hey, come get some lunch.
                        - label: Dinner
                          value: It's time for dinner. Wash your hands!
                        - label: Breakfast
                          value: It's time for breakfast. Wash your hands!
                        - label: Bedtime
                          value: It's time for bed.
                        - label: Ethan down-stairs
                          value: Hey Ethan, come down-stairs please.
                        - label: Emma down-stairs
                          value: Hey Emma, come down-stairs please.
                        - label: Kids down-stairs
                          value: Hey kids, come down-stairs please.
    cards: []
  - title: Kitchen
    path: kitchen
    icon: mdi:fridge-variant
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:fridge-variant
            heading: Kitchen
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.kitchen_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.kitchen
            name: Main
            features:
              - type: light-brightness
            layout_options:
              grid_columns: full
          - features:
              - type: light-brightness
            type: tile
            entity: light.kitchen_island
            name: Island
            state_content:
              - brightness
              - color_temp_kelvin
          - type: tile
            entity: light.dining_room
            name: Dining
            features:
              - type: light-brightness
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Oven
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: switch.ge_oven_light
                content: '{{ state_translated(entity)}}'
                icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb", "mdi:lightbulb-off")
                  }}

                  '
                color: '{{ iif(is_state(entity, "on"), "amber", "grey") }}

                  '
                tap_action:
                  action: perform-action
                  perform_action: switch.toggle
                  target:
                    entity_id: switch.ge_oven_light
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:mushroom-template-card
                entity: water_heater.ge_oven
                multiline_secondary: false
                primary: "{% if is_state_attr(entity, 'operation_mode', 'Off') %}\n\
                  \  Oven\n{% else %}\n  {{ state_attr(entity, 'operation_mode') }}\
                  \ ⸱ {{ float(state_attr('water_heater.ge_oven', 'temperature'),\
                  \ 0) | round(0) }}°F\n{% endif %}"
                secondary: "{% if is_state_attr(entity,'operation_mode', 'Off') %}\n\
                  \  Off\n{% else %}\n  Current Temperature - {{ float(state_attr(entity,\
                  \ 'current_temperature')) | round(0) }}°F\n{% endif %}"
                icon: mdi:stove
                icon_color: "{% if is_state_attr('water_heater.ge_oven', 'operation_mode',\
                  \ 'Off') %}\n  grey\n{% else %}\n  red\n{% endif %}\n"
                tap_action:
                  action: more-info
                card_mod:
                  style:
                    .: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
                    mushroom-shape-icon$: "{%- if has_value(\"sensor.ge_oven_kitchen_timer\"\
                      )\n  and has_value(\"sensor.ge_oven_kitchen_timer_duration\"\
                      )\n  and not is_state(\"sensor.ge_oven_kitchen_timer_duration\"\
                      , \"Off\")\n-%} {%- set entity_remain = states(\"sensor.ge_oven_kitchen_timer\"\
                      ) -%} {%- set entity_duration = states(\"sensor.ge_oven_kitchen_timer_duration\"\
                      ) -%} {%- set remaining =\n  (int(entity_remain.split(\":\"\
                      )[0], 0) * 60)\n  + (int(entity_remain.split(\":\")[1], 0))\
                      \ -%}\n{%- set duration =\n  (int(entity_duration.split(\":\"\
                      )[0], 0) * 60)\n    + (int(entity_duration.split(\":\")[1],\
                      \ 0))\n-%} .shape {\n  /* Radial progress bar */\n  background:\n\
                      \    radial-gradient(var(--card-background-color) 60%, transparent\
                      \ calc(60% + 1px)),\n    conic-gradient(var(--purple-color)\
                      \ {{ ((duration - remaining) / duration * 100) | round() }}%\
                      \ 0%, var(--card-background-color) 0% 100%);\n} .shape:after\
                      \ {\n  /* Add back icon shape */\n  content: \"\";\n  height:\
                      \ 100%;\n  width: 100%;\n  position: absolute;\n  border-radius:\
                      \ var(--icon-border-radius);\n  background: var(--shape-color);\n\
                      } {%- endif -%}\n"
              - square: false
                type: grid
                columns: 4
                cards:
                  - type: custom:mushroom-template-card
                    icon: mdi:power
                    icon_color: "{% if is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') %}\n  grey\n{% else %}\n  red\n{% endif %}\n"
                    layout: vertical
                    primary: 'Off'
                    tap_action:
                      action: call-service
                      service: water_heater.set_operation_mode
                      service_data:
                        entity_id: water_heater.ge_oven
                        operation_mode: 'Off'
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 300) %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 300°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 300
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 350) %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 350°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 350
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 375) %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 375°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 375
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 400) %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 400°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 400
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 425) %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 425°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 425
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 450) %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 450°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 450
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
                  - type: custom:mushroom-template-card
                    icon: mdi:thermometer
                    icon_color: "{% if not is_state_attr('water_heater.ge_oven', 'operation_mode',\
                      \ 'Off') and is_state_attr('water_heater.ge_oven', 'temperature',\
                      \ 475) %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                    layout: vertical
                    primary: 475°F
                    tap_action:
                      action: call-service
                      service: water_heater.set_temperature
                      data:
                        temperature: 475
                        operation_mode: Bake
                      target:
                        entity_id: water_heater.ge_oven
                    card_mod:
                      style:
                        mushroom-state-info$: ".primary {\n  position: relative;\n\
                          \  bottom: 5px !important;\n}\n.container {\n --card-primary-font-size:\
                          \ 12px;\n}\n"
                        .: "ha-card {\n  --ha-card-border-width: 0;\n  padding-right:\
                          \ 0px !important;\n  padding-left: 0px !important;\n  padding-bottom:\
                          \ 3px !important;\n  padding-top: 3px !important;\n}\nha-state-icon\
                          \ {\n  --icon-symbol-size: 18px;\n}\n"
              - type: custom:mushroom-select-card
                entity: select.ge_oven_operation
                name: Mode
                icon: mdi:heating-coil
                secondary_info: none
                layout: horizontal
                tap_action:
                  action: more-info
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 33% 33% 33%
                  grid-template-rows: auto
                  grid-template-areas: '"left center right"'
                  reflow: true
                  margin: 0
                  padding: 0
                cards:
                  - type: custom:mushroom-template-card
                    entity: binary_sensor.ge_oven_cooktop_status_left_rear_on
                    secondary: Left Rear
                    multiline_secondary: true
                    icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:circle-slice-8\n\
                      {%- else -%}\n  mdi:circle-outline\n{%- endif -%}"
                    icon_color: "{%- if is_state(entity, \"on\") -%}\n  red\n{%- else\
                      \ -%}\n  disabled\n{%- endif -%}"
                    layout: vertical
                    tap_action:
                      action: more-info
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                          \  margin-top: 10px;\n}\n{% set power = \"sensor.ge_oven_cooktop_status_left_rear_power_pct\"\
                          \ %}\n{% if has_value(power) and states(power) not in [\"\
                          Empty\", \"unknown\"] %}\nha-card:after {\n  content: \"\
                          {{ states(power) }}%\";\n  position: absolute;\n  font-weight:\
                          \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                          }\n{% endif %}\n"
                        mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity,\
                          \ \"on\") %}\n  --shape-animation: ping 2s infinite;\n \
                          \ {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                          \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                          \ 0 0 1px 15px transparent; }\n}\n"
                  - type: custom:mushroom-template-card
                    entity: binary_sensor.ge_oven_cooktop_status_center_rear_on
                    secondary: Warmer
                    multiline_secondary: true
                    icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:circle-slice-8\n\
                      {%- else -%}\n  mdi:circle-outline\n{%- endif -%}"
                    icon_color: "{%- if is_state(entity, \"on\") -%}\n  red\n{%- else\
                      \ -%}\n  disabled\n{%- endif -%}"
                    layout: vertical
                    tap_action:
                      action: more-info
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                          \  margin-top: 10px;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity,\
                          \ \"on\") %}\n  --shape-animation: ping 2s infinite;\n \
                          \ {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                          \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                          \ 0 0 1px 15px transparent; }\n}\n"
                  - type: custom:mushroom-template-card
                    entity: binary_sensor.ge_oven_cooktop_status_right_rear_on
                    secondary: Right Rear
                    multiline_secondary: true
                    icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:circle-slice-8\n\
                      {%- else -%}\n  mdi:circle-outline\n{%- endif -%}"
                    icon_color: "{%- if is_state(entity, \"on\") -%}\n  red\n{%- else\
                      \ -%}\n  disabled\n{%- endif -%}"
                    layout: vertical
                    tap_action:
                      action: more-info
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                          \  margin-top: 10px;\n}\n{% set power = \"sensor.ge_oven_cooktop_status_right_rear_power_pct\"\
                          \ %}\n{% if has_value(power) and states(power) not in [\"\
                          Empty\", \"unknown\"] %}\nha-card:after {\n  content: \"\
                          {{ states(power) }}%\";\n  position: absolute;\n  font-weight:\
                          \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                          }\n{% endif %}\n"
                        mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity,\
                          \ \"on\") %}\n  --shape-animation: ping 2s infinite;\n \
                          \ {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                          \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                          \ 0 0 1px 15px transparent; }\n}\n"
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 33% 33% 33%
                  grid-template-rows: auto
                  grid-template-areas: '"left . right"'
                  reflow: true
                  margin: 0
                  padding: 0
                cards:
                  - type: custom:mushroom-template-card
                    view_layout:
                      grid-area: left
                    entity: binary_sensor.ge_oven_cooktop_status_left_front_on
                    secondary: Left Front
                    multiline_secondary: true
                    icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:circle-slice-8\n\
                      {%- else -%}\n  mdi:circle-outline\n{%- endif -%}"
                    icon_color: "{%- if is_state(entity, \"on\") -%}\n  red\n{%- else\
                      \ -%}\n  disabled\n{%- endif -%}"
                    layout: vertical
                    tap_action:
                      action: more-info
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                          \  margin-top: 10px;\n}\n{% set power = \"sensor.ge_oven_cooktop_status_left_front_power_pct\"\
                          \ %}\n{% if has_value(power) and states(power) not in [\"\
                          Empty\", \"unknown\"] %}\nha-card:after {\n  content: \"\
                          {{ states(power) }}%\";\n  position: absolute;\n  font-weight:\
                          \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                          }\n{% endif %}\n"
                        mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity,\
                          \ \"on\") %}\n  --shape-animation: ping 2s infinite;\n \
                          \ {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                          \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                          \ 0 0 1px 15px transparent; }\n}\n"
                  - type: custom:mushroom-template-card
                    view_layout:
                      grid-area: right
                    entity: binary_sensor.ge_oven_cooktop_status_right_front_on
                    secondary: Right Front
                    multiline_secondary: true
                    icon: "{%- if is_state(entity, \"on\") -%}\n  mdi:circle-slice-8\n\
                      {%- else -%}\n  mdi:circle-outline\n{%- endif -%}"
                    icon_color: "{%- if is_state(entity, \"on\") -%}\n  red\n{%- else\
                      \ -%}\n  disabled\n{%- endif -%}"
                    layout: vertical
                    tap_action:
                      action: more-info
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                          \  margin-top: 10px;\n}\n{% set power = \"sensor.ge_oven_cooktop_status_right_front_power_pct\"\
                          \ %}\n{% if has_value(power) and states(power) not in [\"\
                          Empty\", \"unknown\"] %}\nha-card:after {\n  content: \"\
                          {{ states(power) }}%\";\n  position: absolute;\n  font-weight:\
                          \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size: 12px;\n\
                          }\n{% endif %}\n"
                        mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity,\
                          \ \"on\") %}\n  --shape-animation: ping 2s infinite;\n \
                          \ {% endif %}\n}\n@keyframes ping {\n  0% { box-shadow:\
                          \ 0 0 1px 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                          \ 0 0 1px 15px transparent; }\n}\n"
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.kitchen_occupancy
        icon: "{%- if is_state(\"binary_sensor.kitchen_motion\", \"on\") -%}\n  mdi:motion-sensor\n\
          {%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n\
          {%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.kitchen_motion\", \"on\") -%}\n  orange\n\
          {%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else -%}\n  grey\n\
          {%- endif -%}"
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.kitchen_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.airgradient_kitchen_co2
        color: green
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.airgradient_kitchen_pm_2_5_aqi
  - title: Family Room
    path: family
    icon: mdi:gamepad-circle
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:gamepad
            heading: Family Room
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: script.family_room_game_light_mode
                icon: mdi:light-flood-up
                color: pink
                tap_action:
                  action: call-service
                  service: script.family_room_game_light_mode
              - type: custom:mushroom-template-badge
                entity: light.family_room_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.family_room
            name: Main
            features:
              - type: light-brightness
          - type: tile
            entity: light.family_room_lamp
            name: Lamp
            features:
              - type: light-brightness
          - type: tile
            entity: light.stairway
            name: Stairs
            vertical: true
          - type: tile
            entity: light.basement_hallway
            name: Hallway
            features:
              - type: light-brightness
      - type: grid
        cards:
          - type: heading
            icon: mdi:play-speed
            heading: Media
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                icon: mdi:remote-tv
                color: orange
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Family Room Media
                      content:
                        type: custom:vertical-stack-in-card
                        card_mod:
                          style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                            \ 0;\n}\n"
                        cards:
                          - type: custom:streamline-card
                            template: remote_family
          - type: custom:streamline-card
            template: media_card
            variables:
              - entity: media_player.universal_family_room
            visibility:
              - condition: state
                entity: media_player.universal_family_room
                state_not: unavailable
              - condition: state
                entity: media_player.universal_family_room
                state_not: unknown
          - type: custom:mini-media-player
            entity: media_player.cast_family_room_speaker
            name: Google Home
            icon: mdi:dots-horizontal-circle
            info: scroll
            hide:
              power: true
      - type: grid
        cards:
          - type: heading
            icon: mdi:spotlight
            heading: Dreamscreen
            heading_style: subtitle
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                primary: Video
                entity: dreamscreen.family_room
                icon: mdi:television
                icon_color: "{%- if is_state_attr(entity, \"device_mode\", 1) -%}\n\
                  \  purple\n{%- else -%}\n  grey\n{%- endif -%}"
                tap_action:
                  action: call-service
                  service: dreamscreen.set_mode
                  data:
                    entity_id: dreamscreen.family_room
                    mode: 1
                  target:
                    entity_id: dreamscreen.family_room
              - type: custom:mushroom-template-card
                primary: Music
                entity: dreamscreen.family_room
                icon: mdi:music-note
                icon_color: "{%- if is_state_attr(entity, \"device_mode\", 2) -%}\n\
                  \  blue\n{%- else -%}\n  grey\n{%- endif -%}"
                tap_action:
                  action: call-service
                  service: dreamscreen.set_mode
                  data:
                    entity_id: dreamscreen.family_room
                    mode: 2
                  target:
                    entity_id: dreamscreen.family_room
              - type: custom:mushroom-template-card
                primary: Ambient
                entity: dreamscreen.family_room
                icon: mdi:lightbulb-on
                icon_color: "{%- if is_state_attr(entity, \"device_mode\", 3) -%}\n\
                  \  amber\n{%- else -%}\n  grey\n{%- endif -%}"
                tap_action:
                  action: call-service
                  service: dreamscreen.set_mode
                  data:
                    entity_id: dreamscreen.family_room
                    mode: 3
                  target:
                    entity_id: dreamscreen.family_room
          - type: custom:mushroom-template-card
            primary: Power
            entity: dreamscreen.family_room
            icon: mdi:power
            icon_color: red
            tap_action:
              action: call-service
              service: dreamscreen.set_mode
              data:
                entity_id: dreamscreen.family_room
                mode: 0
              target:
                entity_id: dreamscreen.family_room
            visibility:
              - condition: state
                entity: dreamscreen.family_room
                state: 'on'
            layout_options:
              grid_columns: full
          - type: conditional
            conditions:
              - entity: sensor.dreamscreen_family_room_mode
                state: Ambient
            card:
              type: custom:mushroom-select-card
              entity: input_select.dreamscreen_family_room_scene
              name: Ambient Scene
              layout: horizontal
              secondary_info: none
              icon_color: amber
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.family_room_occupancy
        icon: "{%- if is_state(\"binary_sensor.family_room_motion\", \"on\") -%}\n\
          \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
          {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.family_room_motion\", \"on\") -%}\n\
          \  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else\
          \ -%}\n  grey\n{%- endif -%}"
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.family_room_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: binary_sensor.quest_in_use
        icon: fapro:meta
        color: '{{ iif(is_state(entity, "on"), "blue", "grey") }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: camera.family_room
        icon: mdi:cctv
        color: '{{ iif(has_value(entity), "cyan", "red") }}'
        tap_action:
          action: navigate
          navigation_path: security#camera-familyroom
      - type: custom:mushroom-template-badge
        icon: mdi:remote-tv
        color: orange
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Family Room Media
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:streamline-card
                    template: remote_family
      - type: custom:mushroom-template-badge
        icon: mdi:dots-horizontal-circle
        color: blue
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Send Message
              right_button: Send
              right_button_action:
                service: script.media_play
                data:
                  media_player: media_player.cast_family_room_speaker
                  volume: 90
              content:
                - name: message
                  label: Message
                  selector:
                    select:
                      custom_value: true
                      options:
                        - label: School
                          value: Time to go to School!
                        - label: Snack
                          value: It's snack time!
                        - label: Lunch
                          value: Hey, come get some lunch.
                        - label: Dinner
                          value: Head up-stairs, it's time for dinner. Don't forget
                            to wash your hands!
                        - label: Breakfast
                          value: It's time for breakfast. Wash your hands!
                        - label: Ethan up-stairs
                          value: Hey Ethan, come up-stairs please.
                        - label: Emma up-stairs
                          value: Hey Emma, come up-stairs please.
                        - label: Kids up-stairs
                          value: Hey kids, come up-stairs please.
    cards: []
  - title: Theater Room
    path: theater
    icon: mdi:projector
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:projector
            heading: Theater Room
            heading_style: title
        column_span: 2
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.theater_room_occupancy
        icon: "{%- if is_state(\"binary_sensor.theater_room_motion\", \"on\") -%}\n\
          \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
          {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.theater_room_motion\", \"on\") -%}\n\
          \  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else\
          \ -%}\n  grey\n{%- endif -%}"
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.theater_room_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
  - title: Josh's Office
    path: josh-office
    icon: mdi:chair-rolling
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:chair-rolling
            heading: Josh's Office
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_adapt_brightness_office
                icon: mdi:brightness-auto
                color: amber
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_adapt_color_office
                icon: mdi:palette
                color: pink
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_sleep_mode_office
                icon: mdi:sleep
                color: cyan
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_office
                icon: mdi:theme-light-dark
                color: green
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: light.joshua_office_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.joshua_office
            name: Main
            features:
              - type: light-brightness
            state_content:
              - brightness
              - color_temp_kelvin
          - type: tile
            entity: light.joshua_office_lamp
            name: Lamp
            features:
              - type: light-brightness
            state_content:
              - brightness
              - color_temp_kelvin
          - type: tile
            entity: light.wled_joshua_office_desk
            name: Desk
            features:
              - type: light-brightness
            state_content:
              - brightness
              - effect
          - type: tile
            entity: light.joshua_office_shelf_led
            name: Shelf
            vertical: true
          - type: custom:mini-media-player
            entity: media_player.cast_office_speaker
            name: Google Home
            icon: mdi:dots-horizontal-circle
            info: scroll
            hide:
              power: true
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.apollo_msr_1_office_radar_target
        icon: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
          , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n\
          \  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
          , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n\
          {%- else -%}\n  disabled\n{%- endif -%}"
        tap_action:
          action: more-info
        hold_action:
          action: none
      - type: custom:mushroom-template-badge
        entity: sensor.joshua_office_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.apollo_msr_1_office_co2
        color: green
        tap_action:
          action: more-info
  - title: Amy's Office
    path: amy-office
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:skull
            heading: Amy's Office
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_adapt_brightness_amy_office
                icon: mdi:brightness-auto
                color: amber
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_adapt_color_amy_office
                icon: mdi:palette
                color: pink
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_sleep_mode_amy_office
                icon: mdi:sleep
                color: cyan
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: switch.adaptive_lighting_amy_office
                icon: mdi:theme-light-dark
                color: green
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: light.amy_office_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.amy_office
            name: Main
            features:
              - type: light-brightness
            layout_options:
              grid_columns: full
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    icon: mdi:skull
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.amy_office_occupancy
        icon: "{%- if is_state(\"binary_sensor.amy_office_motion\", \"on\") -%}\n\
          \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
          {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.amy_office_motion\", \"on\") -%}\n\
          \  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else\
          \ -%}\n  grey\n{%- endif -%}"
        tap_action:
          action: more-info
        hold_action:
          action: none
      - type: custom:mushroom-template-badge
        entity: sensor.amy_office_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
  - title: Ethan
    path: ethan
    icon: mdi:robot
    type: sections
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:robot
            heading: Ethan
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.ethan_bedroom_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.ethan_bedroom
            name: Main
            features:
              - type: light-brightness
            layout_options:
              grid_columns: full
      - type: grid
        cards:
          - type: heading
            icon: mdi:light-flood-up
            heading: Nebula Projector
            heading_style: subtitle
          - type: tile
            entity: switch.nebula_projector_ethan_main_switch
            name: Main
            layout_options:
              grid_columns: full
          - type: vertical-stack
            cards:
              - type: tile
                entity: select.nebula_projector_ethan_scene
                name: Scene
                icon: mdi:play-box-outline
                hide_state: true
                features:
                  - type: select-options
              - type: grid
                square: false
                columns: 3
                cards:
                  - type: tile
                    entity: light.nebula_projector_ethan_light
                    icon: mdi:crystal-ball
                    name: Light
                    features:
                      - type: light-brightness
                  - type: tile
                    entity: light.nebula_projector_ethan_laser
                    name: Laser
                    color: green
                    features:
                      - type: light-brightness
                  - type: tile
                    entity: fan.nebula_projector_ethan_motor
                    name: Motor
                    features:
                      - type: fan-speed
            visibility:
              - condition: state
                entity: switch.nebula_projector_ethan_main_switch
                state: 'on'
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    max_columns: 2
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.ethan_bedroom_occupancy
        icon: "{%- if is_state(\"binary_sensor.ethan_bedroom_motion\", \"on\") -%}\n\
          \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
          {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.ethan_bedroom_motion\", \"on\") -%}\n\
          \  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else\
          \ -%}\n  grey\n{%- endif -%}"
        tap_action:
          action: more-info
        hold_action:
          action: none
      - type: custom:mushroom-template-badge
        entity: sensor.ethan_bedroom_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
  - title: Emma
    path: emma
    icon: mdi:unicorn-variant
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:unicorn-variant
            heading: Emma
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.emma_bedroom_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.emma_bedroom
            name: Main
            features:
              - type: light-brightness
            layout_options:
              grid_columns: full
      - type: grid
        cards:
          - type: heading
            icon: mdi:light-flood-up
            heading: Nebula Projector
            heading_style: subtitle
          - type: tile
            entity: switch.nebula_projector_emma_main_switch
            name: Main
            layout_options:
              grid_columns: full
          - type: vertical-stack
            cards:
              - type: tile
                entity: select.nebula_projector_emma_scene
                name: Scene
                icon: mdi:play-box-outline
                hide_state: true
                features:
                  - type: select-options
              - type: grid
                square: false
                columns: 3
                cards:
                  - type: tile
                    entity: light.nebula_projector_emma_light
                    icon: mdi:crystal-ball
                    name: Light
                    features:
                      - type: light-brightness
                  - type: tile
                    entity: light.nebula_projector_emma_laser
                    name: Laser
                    color: green
                    features:
                      - type: light-brightness
                  - type: tile
                    entity: fan.nebula_projector_emma_motor
                    name: Motor
                    features:
                      - type: fan-speed
            visibility:
              - condition: state
                entity: switch.nebula_projector_emma_main_switch
                state: 'on'
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.emma_bedroom_occupancy
        icon: "{%- if is_state(\"binary_sensor.emma_bedroom_motion\", \"on\") -%}\n\
          \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
          {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.emma_bedroom_motion\", \"on\") -%}\n\
          \  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else\
          \ -%}\n  grey\n{%- endif -%}"
        tap_action:
          action: more-info
        hold_action:
          action: none
      - type: custom:mushroom-template-badge
        entity: sensor.emma_bedroom_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
  - title: Main Bedroom
    path: main-bed
    icon: mdi:bed-king
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:bed-king
            heading: Main Bedroom
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.main_bedroom_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.main_bedroom
            name: Main
            features:
              - type: light-brightness
            layout_options:
              grid_columns: full
          - features:
              - type: light-brightness
            type: tile
            entity: light.main_bedroom_fan_light
            name: Fan Light
          - type: tile
            entity: light.main_bedroom_floor_lamp
            name: Floor Lamp
            features:
              - type: light-brightness
          - features:
              - type: fan-speed
            type: tile
            entity: fan.main_bedroom_ceiling
            name: Fan
            hide_state: true
            card_mod:
              style:
                .: "ha-tile-icon {\n  --tile-color:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n    {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int(0) %}\n    {% if perc == 33 %} var(--green-color)\n    {%\
                  \ elif perc == 66 %} var(--yellow-color)\n    {% else %} var(--orange-color)\n\
                  \    {% endif %}\n    {% else %} var(--state-inactive-color)\n \
                  \   {% endif %};\n}\nha-state-icon {\n  animation:\n    {% if is_state(config.entity,\
                  \ 'on') %}\n      {% set perc = state_attr(config.entity, 'percentage')\
                  \ | int %}\n      {% set base = 'rotation infinite linear' %}\n\
                  \      {% if perc == 33 %} 1s {{base}}\n      {% elif perc == 66\
                  \ %} 0.75s {{base}}\n      {% else  %} 0.66s {{base}}\n      {%\
                  \ endif %}\n    {% else %} none\n    {% endif %};\n}\n@keyframes\
                  \ rotation {\n  0% {transform: rotate(0deg);}\n  100% {transform:\
                  \ rotate(360deg);}\n}\n"
            layout_options:
              grid_columns: full
      - type: grid
        cards:
          - type: heading
            icon: mdi:play-speed
            heading: Media
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                icon: mdi:remote-tv
                color: orange
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Main Bedroom Media
                      content:
                        type: custom:vertical-stack-in-card
                        card_mod:
                          style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                            \ 0;\n}\n"
                        cards:
                          - type: custom:streamline-card
                            template: remote_main
          - type: custom:streamline-card
            template: media_card
            variables:
              - entity: media_player.universal_main_bedroom
            visibility:
              - condition: state
                entity: media_player.universal_main_bedroom
                state_not: unavailable
              - condition: state
                entity: media_player.universal_main_bedroom
                state_not: unknown
      - type: grid
        cards:
          - type: heading
            heading: Bed Presence
            heading_style: subtitle
            icon: mdi:bunk-bed
          - type: tile
            entity: binary_sensor.bed_presence_f56148_bed_occupied_both
            name: Both
          - type: tile
            entity: binary_sensor.bed_presence_f56148_bed_occupied_either
            name: Either
            icon: mdi:bunk-bed-outline
          - type: tile
            entity: binary_sensor.bed_presence_f56148_bed_occupied_left
            name: Left
          - type: tile
            entity: binary_sensor.bed_presence_f56148_bed_occupied_right
            name: Right
          - type: custom:mushroom-template-card
            primary: '{% set energy = states(''sensor.bed_presence_f56148_left_pressure'')
              | int(-1) %} {{ ''?'' if energy < 0 else energy }}/{{ states(''number.bed_presence_f56148_left_trigger_pressure'')
              | int(0) }}'
            entity: number.bed_presence_f56148_left_trigger_pressure
            tap_action:
              action: more-info
            card_mod:
              style: "ha-card {\n  display: block;\n  {% set energy = states('sensor.bed_presence_f56148_left_pressure')\
                \ | int(0) %}\n  {% if energy %}\n    {% set above_threshold = energy\
                \ > states(config.entity) | int(0) %}\n    background: linear-gradient(to\
                \ right, rgba({{ 0 if above_threshold else 255 }}, 255, 0, 0.2), {{\
                \ energy }}%, transparent {{energy}}%);\n  {% endif %}\n}\n"
          - type: custom:mushroom-template-card
            primary: '{% set energy = states(''sensor.bed_presence_f56148_right_pressure'')
              | int(-1) %} {{ ''?'' if energy < 0 else energy }}/{{ states(''number.bed_presence_f56148_right_trigger_pressure'')
              | int(0) }}'
            entity: number.bed_presence_f56148_right_trigger_pressure
            tap_action:
              action: more-info
            card_mod:
              style: "ha-card {\n  display: block;\n  {% set energy = states('sensor.bed_presence_f56148_right_pressure')\
                \ | int(0) %}\n  {% if energy %}\n    {% set above_threshold = energy\
                \ > states(config.entity) | int(0) %}\n    background: linear-gradient(to\
                \ right, rgba({{ 0 if above_threshold else 255 }}, 255, 0, 0.2), {{\
                \ energy }}%, transparent {{energy}}%);\n  {% endif %}\n}\n"
          - type: custom:mini-graph-card
            entities:
              - entity: sensor.bed_presence_f56148_left_pressure
              - entity: number.bed_presence_f56148_left_trigger_pressure
                color: var(--red-color)
                show_state: false
                show_legend: false
                show_fill: false
            name: Left Pressure
            icon: mdi:bed-outline
            hours_to_show: 12
            points_per_hour: 60
            lower_bound: 0
            upper_bound: 100
            min_bound_range: 100
            aggregate_func: max
            font_size_header: 12
            font_size: 70
            smoothing: false
            layout_options:
              grid_columns: 2
          - type: custom:mini-graph-card
            entities:
              - entity: sensor.bed_presence_f56148_right_pressure
              - entity: number.bed_presence_f56148_right_trigger_pressure
                color: var(--red-color)
                show_state: false
                show_legend: false
                show_fill: false
            name: Right Pressure
            icon: mdi:bed-outline
            hours_to_show: 12
            points_per_hour: 60
            lower_bound: 0
            upper_bound: 100
            min_bound_range: 100
            aggregate_func: max
            font_size_header: 12
            font_size: 70
            smoothing: false
            layout_options:
              grid_columns: 2
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.main_bedroom_occupancy
        icon: "{%- if is_state(\"binary_sensor.main_bedroom_motion\", \"on\") -%}\n\
          \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
          {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.main_bedroom_motion\", \"on\") -%}\n\
          \  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n{%- else\
          \ -%}\n  grey\n{%- endif -%}"
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.main_bedroom_temperature
        label: Main
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.main_bathroom_sensor_temperature
        label: Bath
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.main_bathroom_sensor_humidity
        label: Bath
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:water-percent
        color: '{% from "util.jinja" import room_humidity %}

          {{ room_humidity(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        icon: mdi:remote-tv
        color: orange
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Main Bedroom Media
              content:
                type: custom:vertical-stack-in-card
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
                cards:
                  - type: custom:streamline-card
                    template: remote_main
  - title: Utility
    icon: mdi:progress-wrench
    path: utility
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:progress-wrench
            heading: Utility
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:robot-vacuum
            heading: Robovacs
            heading_style: subtitle
          - type: custom:tabbed-card
            attributes:
              minWidth: true
            styles:
              --mdc-theme-primary: var(--state-active-color)
              --mdc-tab-color-default: var(--secondary-text-color)
            tabs:
              - card:
                  type: custom:streamline-card
                  template: vacuum_r2dee2
                attributes:
                  label: R2Dee2
              - card:
                  type: custom:streamline-card
                  template: vacuum_mopman
                attributes:
                  label: Dustin Mopman
      - type: grid
        cards:
          - type: heading
            icon: mdi:water
            heading: Water
            heading_style: subtitle
          - type: custom:auto-entities
            card:
              type: vertical-stack
            card_param: cards
            sort:
              method: state
            filter:
              include:
                - group: binary_sensor.water_leak_detected
                  options:
                    type: custom:mushroom-entity-card
              exclude:
                - entity_id: binary_sensor.water_leak_detected
                - state: 'off'
                - state: unavailable
                - state: unknown
            visibility:
              - condition: state
                entity: binary_sensor.water_leak_detected
                state: 'on'
          - type: custom:mushroom-template-card
            primary: Water Main Valve
            secondary: "{%- if is_state(entity, \"open\") -%}\n  Press and hold to\
              \ close\n{%- elif is_state(entity, \"closed\") -%}\n  Press and hold\
              \ to open\n{%- endif -%}"
            entity: valve.water_main_valve
            icon: "{%- if is_state(entity, \"open\") -%}\n  mdi:valve-open\n{%- elif\
              \ is_state(entity, \"closed\") -%}\n  mdi:valve-closed\n{%- else -%}\n\
              \  mdi:valve\n{%- endif -%}"
            icon_color: "{%- if is_state(entity, \"open\") -%}\n  green\n{%- elif\
              \ is_state(entity, \"closed\") -%}\n  red\n{%- else -%}\n  grey\n{%-\
              \ endif -%}"
            tap_action:
              action: more-info
            hold_action:
              action: toggle
            layout_options:
              grid_columns: full
          - type: custom:expander-card
            gap: 0em
            padding: 0em
            child-padding: 0.5em
            title-card-padding: 0em
            title-card:
              type: custom:bar-card
              card_mod:
                style: "ha-card {\n  background: none;\n  border-width: 0;\n}\n#states\
                  \ {\n  padding: 8px 2px;\n}\nbar-card-name,\nbar-card-value {\n\
                  \  font-weight: 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                  }\nbar-card-backgroundbar {\n  background-color: var(--primary-background-color);\n\
                  }\n"
              name: Water Softener Salt Level
              entities:
                - entity: sensor.water_softener_salt_monitor_salt_level
                  name: Water Softener Salt Level
              decimal: 1
              animation:
                state: 'on'
              positions:
                indicator: inside
              severity:
                - color: var(--red-color)
                  from: 0
                  to: 10
                - color: var(--orange-color)
                  from: 10
                  to: 20
                - color: var(--amber-color)
                  from: 20
                  to: 40
                - color: var(--light-green-color)
                  from: 40
                  to: 70
                - color: var(--green-color)
                  from: 70
                  to: 100
            cards:
              - type: custom:apexcharts-card
                apex_config:
                  chart:
                    foreColor: '#7B7B7B'
                    toolbar:
                      show: false
                  grid:
                    borderColor: '#7B7B7B'
                  xaxis:
                    tooltip:
                      enabled: false
                experimental:
                  color_threshold: true
                header:
                  show: false
                all_series_config:
                  extend_to: now
                  stroke_width: 2
                  type: line
                  group_by:
                    func: min
                    duration: 1hour
                  color_threshold:
                    - value: 0
                      color: '#f44336'
                    - value: 10
                      color: '#ff9800'
                    - value: 20
                      color: '#ffc107'
                    - value: 40
                      color: '#8bc34a'
                    - value: 70
                      color: '#4caf50'
                span:
                  end: minute
                graph_span: 10d
                yaxis:
                  - decimals: 0
                    min: ~0
                    max: ~100
                    apex_config:
                      tickAmount: 4
                      title:
                        text: '%'
                series:
                  - entity: sensor.water_softener_salt_monitor_salt_level
                    name: Salt Level
                    color: rgb(158,158,158)
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.utility_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.mud_room
          - type: tile
            entity: light.cold_storage
          - type: heading
            icon: mdi:cat
            heading: Luna
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: camera.litterbox
                icon: mdi:cctv
                color: '{{ iif(has_value(entity), "cyan", "red") }}'
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Litterbox
                      size: fullscreen
                      content:
                        type: custom:vertical-stack-in-card
                        card_mod:
                          style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                            \ 0;\n}\n"
                        cards:
                          - type: custom:streamline-card
                            template: camera_popup
                            variables:
                              - camera: camera.litterbox
                              - stream: litterbox
          - type: custom:expander-card
            gap: 0em
            padding: 0em
            child-padding: 0.5em
            title-card-padding: 0em
            title-card:
              type: custom:mushroom-template-card
              primary: Feed Luna
              secondary: Press and Hold to Dispense
              entity: script.feeder_start
              icon: mdi:cat
              icon_color: "{%- if is_state(entity, \"on\") -%}\n  green\n{%- else\
                \ -%}\n  grey\n{%- endif -%}"
              tap_action:
                action: none
              hold_action:
                action: call-service
                service: script.feeder_start
                data:
                  feeder: Cat Feeder
              card_mod:
                style:
                  .: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
                  mushroom-shape-icon$: "{% set level = \"sensor.cat_feeder_food_level\"\
                    \ %} {% from \"util.jinja\" import battery_color %} .shape {\n\
                    \  /* Radial progress bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                    \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                    \ battery_color(level) }}-color) {{ states(level) }}% 0%, var(--card-background-color)\
                    \ 0% 100%\n  );\n} .shape:after {\n  /* Add back icon shape */\n\
                    \  content: \"\";\n  height: 100%;\n  width: 100%;\n  position:\
                    \ absolute;\n  border-radius: var(--icon-border-radius);\n  background:\
                    \ var(--shape-color);\n}"
            cards:
              - type: custom:mushroom-number-card
                entity: number.cat_feeder_serving_size
                name: Servings
                icon: mdi:location-enter
                secondary_info: none
                layout: horizontal
                display_mode: buttons
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
              - type: custom:mushroom-lock-card
                entity: lock.cat_feeder_child_lock
                name: Local Control
                fill_container: false
                layout: horizontal
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
              - type: markdown
                title: Schedule
                content: "{%- if has_value(\"sensor.cat_feeder_schedule\") -%}\n{%-\
                  \ set feedings = states(\"sensor.cat_feeder_schedule\") | replace(\"\
                  '\", '\"') | from_json -%}\n{%- for feeding in feedings -%}\n  {{\
                  \ feeding.size }} portions at {{ as_timestamp(today_at(feeding.hour\
                  \ ~ \":\" ~ feeding.minute)) | timestamp_custom(\"%-I:%M %p\", True)\
                  \ }}\n{% endfor -%}\n{%- endif -%}"
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
              - type: custom:bar-card
                card_mod:
                  style: "ha-card {\n  background: none;\n  border-width: 0;\n}\n\
                    #states {\n  padding: 8px 2px;\n}\nbar-card-name,\nbar-card-value\
                    \ {\n  font-weight: 500;\n  text-shadow: 1px 1px var(--primary-background-color);\n\
                    }\nbar-card-backgroundbar {\n  background-color: var(--primary-background-color);\n\
                    }\n"
                name: Food Level
                entities:
                  - entity: sensor.cat_feeder_food_level
                animation:
                  state: 'on'
                positions:
                  indicator: inside
                  icon: inside
                height: 24px
                min: 0
                max: 100
                decimal: 1
                severity:
                  - color: var(--red-color)
                    from: 0
                    to: 10
                  - color: var(--orange-color)
                    from: 10
                    to: 20
                  - color: var(--amber-color)
                    from: 20
                    to: 40
                  - color: var(--light-green-color)
                    from: 40
                    to: 70
                  - color: var(--green-color)
                    from: 70
                    to: 100
              - type: custom:apexcharts-card
                apex_config:
                  chart:
                    foreColor: '#7B7B7B'
                    toolbar:
                      show: false
                  grid:
                    borderColor: '#7B7B7B'
                  xaxis:
                    tooltip:
                      enabled: false
                experimental:
                  color_threshold: true
                header:
                  show: false
                all_series_config:
                  extend_to: now
                  stroke_width: 2
                  type: line
                  group_by:
                    func: min
                    duration: 1hour
                  color_threshold:
                    - value: 0
                      color: '#f44336'
                    - value: 10
                      color: '#ff9800'
                    - value: 20
                      color: '#ffc107'
                    - value: 40
                      color: '#8bc34a'
                    - value: 70
                      color: '#4caf50'
                span:
                  end: minute
                graph_span: 10d
                yaxis:
                  - decimals: 0
                    min: ~0
                    max: ~100
                    apex_config:
                      tickAmount: 4
                      title:
                        text: '%'
                series:
                  - entity: sensor.cat_feeder_food_level
                    name: Food Level
                    color: rgb(158,158,158)
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
              - type: custom:mushroom-template-card
                entity: sensor.cat_feeder_total_weight
                secondary: Press and hold to reset
                primary: Reset Food Level
                icon: mdi:progress-upload
                icon_color: green
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: utility_meter.calibrate
                  target:
                    entity_id: sensor.cat_feeder_total_weight
                  data:
                    value: '0'
                card_mod:
                  style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: sensor.water_main_valve_air_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.cold_storage_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
        label: Storage
      - type: custom:mushroom-template-badge
        entity: sensor.cold_storage_humidity
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:water-percent
        color: '{% from "util.jinja" import room_humidity %}

          {{ room_humidity(entity) }}'
        tap_action:
          action: more-info
        label: Storage
  - title: Garage
    path: garage
    icon: mdi:garage-variant
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:garage-variant
            heading: Garage
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.garage_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: light.garage
            name: Main
          - type: tile
            entity: light.garage_door_light
            name: Opener
      - type: grid
        cards:
          - type: heading
            icon: mdi:garage-variant
            heading: Door
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: lock.garage_door_lock_remotes
                label: Remotes
                content: '{{ state_translated(entity) }}'
                icon: mdi:{{ iif(is_state(entity, "locked"), "lock", "lock-open")
                  }}
                color: '{{ iif(is_state(entity, "locked"), "red", "green") }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: tile
            entity: cover.garage_door
            color: green
            features:
              - type: cover-open-close
              - type: cover-position
            state_content:
              - state
              - last-changed
            layout_options:
              grid_columns: full
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.garage_multisensor_motion_detection
        icon: '{{ iif(is_state(entity, "on"), "mdi:motion-sensor", "mdi:motion-sensor-off")
          }}'
        color: '{{ iif(is_state(entity, "on"), "orange", "grey") }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.garage_multisensor_air_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.garage_multisensor_humidity
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:water-percent
        color: '{% from "util.jinja" import room_humidity %}

          {{ room_humidity(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.garage_multisensor_illuminance
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:brightness-5
        color: blue
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: camera.garage
        icon: mdi:cctv
        color: '{{ iif(has_value(entity), "cyan", "red") }}'
        tap_action:
          action: navigate
          navigation_path: security#camera-garage
  - title: Outside
    path: outside
    icon: mdi:spa
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:spa
            heading: Outside
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Lights
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: light.outside_lights
                content: '{{ expand(entity) | selectattr("state", "==", "on") | list
                  | count }}/{{ expand(entity) | list | count }}'
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - features:
              - type: light-brightness
            type: tile
            entity: light.outside_entry
            name: Front Entry
            state_content:
              - brightness
              - color_temp_kelvin
              - rgb_color
          - features:
              - type: light-brightness
            type: tile
            entity: light.outside_garage
            name: Garage Front
            state_content:
              - brightness
              - color_temp_kelvin
              - rgb_color
          - type: tile
            entity: light.outside_side
            name: Side
          - type: tile
            entity: light.outside_back
            name: Back
      - type: grid
        cards:
          - type: heading
            icon: mdi:sprinkler
            heading: Sprinklers
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: opensprinkler.stop
                icon: mdi:stop
                color: "{% if is_state(\"binary_sensor.sprinkler_zones\", \"on\")\
                  \ %}\n  red\n{% else %}\n  grey\n{% endif %}\n"
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: opensprinkler.stop
              - type: custom:mushroom-template-badge
                entity: opensprinkler.pause_stations
                icon: mdi:pause
                color: "{% if is_state(\"binary_sensor.sprinkler_zones\", \"on\")\
                  \ %}\n  yellow\n{% elif is_state(\"binary_sensor.opensprinkler_paused\"\
                  , \"on\") %}\n  green\n{% else %}\n  grey\n{% endif %}\n"
                tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: opensprinkler.pause_stations
              - type: custom:mushroom-template-badge
                entity: switch.opensprinkler_enabled
                content: '{{ state_translated(entity) }}'
                label: System
                icon: mdi:sprinkler
                color: '{{ iif(is_state(entity, "on"), "green", "grey") }}

                  '
                tap_action:
                  action: none
                hold_action:
                  action: toggle
          - type: custom:opensprinkler-card
            device: c2a83f52c36a3795327fad03d6c568e1
            name: OpenSprinkler
            extra_entities:
              - binary_sensor.opensprinkler_rain_delay_active
              - sensor.opensprinkler_rain_delay_stop_time
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.doorbell_person_occupancy
        icon: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\", \"on\") -%}\n\
          \  mdi:motion-sensor\n{%- elif is_state(entity, \"on\") -%}\n  mdi:walk\n\
          {%- else -%}\n  mdi:motion-sensor-off\n{%- endif -%}"
        color: "{%- if is_state(\"binary_sensor.doorbell_camera_motion\", \"on\")\
          \ -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n  light-green\n\
          {%- else -%}\n  grey\n{%- endif -%}"
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.ecowitt_outdoor_temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.ecowitt_humidity
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:water-percent
        color: '{% from "util.jinja" import room_humidity %}

          {{ room_humidity(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.ecowitt_solar_lux
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:brightness-5
        color: blue
        tap_action:
          action: more-info
  - title: Security
    path: security
    icon: mdi:shield
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:shield
            heading: Security
            heading_style: title
            badges:
              - type: custom:mushroom-template-badge
                icon: mdi:chart-gantt
                color: light-green
                tap_action:
                  action: navigate
                  navigation_path: frigate
        column_span: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:door
            heading: Doors
            heading_style: subtitle
            badges:
              - type: custom:mushroom-template-badge
                entity: input_boolean.door_open_alerts
                label: Door
                content: '{{ state_translated(entity) }}'
                icon: mdi:door
                color: "{% if is_state(entity, \"off\") %}\n  yellow\n{% else %}\n\
                  \  green\n{% endif %}"
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
              - type: custom:mushroom-template-badge
                entity: input_boolean.garage_door_open_alerts
                label: Garage
                content: '{{ state_translated(entity) }}'
                icon: mdi:garage-variant
                color: "{% if is_state(entity, \"off\") %}\n  yellow\n{% else %}\n\
                  \  green\n{% endif %}"
                tap_action:
                  action: more-info
                hold_action:
                  action: toggle
          - type: custom:vertical-stack-in-card
            layout_options:
              grid_columns: 2
            cards:
              - type: custom:mushroom-template-card
                entity: binary_sensor.front_door_window_door_is_open
                primary: Front Door
                secondary: "{% from \"util.jinja\" import nominal_change_history %}\
                  \ {% if is_state(entity, \"on\") -%}\n  Open\n{% endif -%} {% if\
                  \ is_state(\"lock.front_door\", \"unlocked\") -%}\n  Unlocked\n\
                  {% else -%}\n  Locked\n{% endif -%} ⸱ {{ nominal_change_history(entity)\
                  \ }}"
                icon: "{% if is_state(entity, \"on\") %}\n  mdi:door-open\n{% elif\
                  \ is_state(\"lock.front_door\", \"unlocked\") and is_state(entity,\
                  \ \"off\") %}\n  mdi:door-closed\n{% elif is_state(\"lock.front_door\"\
                  , \"locked\") and is_state(entity, \"off\") %}\n  mdi:door-closed-lock\n\
                  {% endif %}"
                icon_color: "{% if is_state(entity, \"on\") %}\n  red\n{% elif is_state(\"\
                  lock.front_door\", \"unlocked\") and is_state(entity, \"off\") %}\n\
                  \  yellow\n{% elif is_state(\"lock.front_door\", \"locked\") and\
                  \ is_state(entity, \"off\") %}\n  green\n{% endif %}"
                tap_action:
                  action: more-info
                hold_action:
                  action: fire-dom-event
                  browser_mod:
                    data:
                      entity: sensor.front_door_battery_level
                    service: browser_mod.more_info
                card_mod:
                  style:
                    mushroom-shape-icon$: "{% set battery_entity = \"sensor.front_door_battery_level\"\
                      \ %} {% if (states(battery_entity) | int) <= 60 %} {% from \"\
                      util.jinja\" import battery_color %} .shape {\n  /* Radial progress\
                      \ bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                      \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                      \ battery_color(battery_entity) }}-color) {{ states(battery_entity)\
                      \ }}% 0%, var(--card-background-color) 0% 100%\n  );\n} .shape:after\
                      \ {\n  /* Add back icon shape */\n  content: \"\";\n  height:\
                      \ 100%;\n  width: 100%;\n  position: absolute;\n  border-radius:\
                      \ var(--icon-border-radius);\n  background: var(--shape-color);\n\
                      } {% endif %}"
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 65px auto
                  grid-template-rows: auto
                  margin: 0 -2px -10px -2px
                  padding: 0
                cards:
                  - type: custom:mushroom-template-card
                    entity: sensor.front_door_battery_level
                    icon: mdi:lock-smart
                    icon_color: disabled
                    tap_action:
                      action: navigate
                      navigation_path: /lock-admin/front-door
                    hold_action:
                      action: fire-dom-event
                      browser_mod:
                        data:
                          entity: sensor.front_door_battery_level
                        service: browser_mod.more_info
                    card_mod:
                      style:
                        .: "ha-card {\n  --icon-size: 42px;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n}\n"
                        mushroom-shape-icon$: "{% set timer = \"timer.keymaster_front_door_autolock\"\
                          \ %} {% if state_attr(timer, \"finishes_at\") %} {% set\
                          \ remaining = (as_datetime(state_attr(timer, \"finishes_at\"\
                          )) - now()).total_seconds() | int %} {% set duration =\n\
                          \  (state_attr(timer, \"duration\").split(\":\")[0] | int\
                          \ * 60 * 60)\n  + (state_attr(timer, \"duration\").split(\"\
                          :\")[1] | int * 60)\n  + (state_attr(timer, \"duration\"\
                          ).split(\":\")[2] | int)\n%} .shape {\n  /* Radial progress\
                          \ bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                          \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--red-color)\
                          \ {{ (remaining / duration * 100) | round() }}% 0%, var(--card-background-color)\
                          \ 0% 100%);\n} .shape:after {\n  /* Add back icon shape\
                          \ */\n  content: \"\";\n  height: 100%;\n  width: 100%;\n\
                          \  position: absolute;\n  border-radius: var(--icon-border-radius);\n\
                          \  background: var(--shape-color);\n} {%- endif -%}\n"
                  - type: custom:mushroom-lock-card
                    entity: lock.front_door
                    name: Front Door
                    primary_info: none
                    secondary_info: none
                    icon_type: none
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                          \ 0;\n  background: none;\n}\n"
                        mushroom-lock-buttons-control$:
                          mushroom-button:nth-child(1)$: ".button {\n  --bg-color:\
                            \ rgba(var(--rgb-disabled), 0.2);\n}\n"
          - type: custom:vertical-stack-in-card
            layout_options:
              grid_columns: 2
            cards:
              - type: custom:mushroom-template-card
                entity: binary_sensor.garage_entry_window_door_is_open
                primary: Garage Entry
                secondary: "{% from \"util.jinja\" import nominal_change_history %}\
                  \ {% if is_state(entity, \"on\") -%}\n  Open\n{% endif -%} {% if\
                  \ is_state(\"lock.garage_entry\", \"unlocked\") -%}\n  Unlocked\n\
                  {% else -%}\n  Locked\n{% endif -%} ⸱ {{ nominal_change_history(entity)\
                  \ }}"
                icon: "{% if is_state(entity, \"on\") %}\n  mdi:door-open\n{% elif\
                  \ is_state(\"lock.garage_entry\", \"unlocked\") and is_state(entity,\
                  \ \"off\") %}\n  mdi:door-closed\n{% elif is_state(\"lock.garage_entry\"\
                  , \"locked\") and is_state(entity, \"off\") %}\n  mdi:door-closed-lock\n\
                  {% endif %}"
                icon_color: "{% if is_state(entity, \"on\") %}\n  red\n{% elif is_state(\"\
                  lock.garage_entry\", \"unlocked\") and is_state(entity, \"off\"\
                  ) %}\n  yellow\n{% elif is_state(\"lock.garage_entry\", \"locked\"\
                  ) and is_state(entity, \"off\") %}\n  green\n{% endif %}"
                tap_action:
                  action: more-info
                hold_action:
                  action: fire-dom-event
                  browser_mod:
                    data:
                      entity: sensor.garage_entry_battery_level
                    service: browser_mod.more_info
                card_mod:
                  style:
                    mushroom-shape-icon$: "{% set battery_entity = \"sensor.garage_entry_battery_level\"\
                      \ %} {% if (states(battery_entity) | int) <= 60 %} {% from \"\
                      util.jinja\" import battery_color %} .shape {\n  /* Radial progress\
                      \ bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                      \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                      \ battery_color(battery_entity) }}-color) {{ states(battery_entity)\
                      \ }}% 0%, var(--card-background-color) 0% 100%\n  );\n} .shape:after\
                      \ {\n  /* Add back icon shape */\n  content: \"\";\n  height:\
                      \ 100%;\n  width: 100%;\n  position: absolute;\n  border-radius:\
                      \ var(--icon-border-radius);\n  background: var(--shape-color);\n\
                      } {% endif %}"
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 65px auto
                  grid-template-rows: auto
                  margin: 0 -2px -10px -2px
                  padding: 0
                cards:
                  - type: custom:mushroom-template-card
                    entity: sensor.garage_entry_battery_level
                    icon: mdi:lock-smart
                    icon_color: disabled
                    tap_action:
                      action: navigate
                      navigation_path: /lock-admin/garage-entry
                    hold_action:
                      action: fire-dom-event
                      browser_mod:
                        data:
                          entity: sensor.garage_entry_battery_level
                        service: browser_mod.more_info
                    card_mod:
                      style:
                        .: "ha-card {\n  --icon-size: 42px;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n}\n"
                        mushroom-shape-icon$: "{% set timer = \"timer.keymaster_garage_entry_autolock\"\
                          \ %} {% if state_attr(timer, \"finishes_at\") %} {% set\
                          \ remaining = (as_datetime(state_attr(timer, \"finishes_at\"\
                          )) - now()).total_seconds() | int %} {% set duration =\n\
                          \  (state_attr(timer, \"duration\").split(\":\")[0] | int\
                          \ * 60 * 60)\n  + (state_attr(timer, \"duration\").split(\"\
                          :\")[1] | int * 60)\n  + (state_attr(timer, \"duration\"\
                          ).split(\":\")[2] | int)\n%} .shape {\n  /* Radial progress\
                          \ bar */\n  background:\n    radial-gradient(var(--card-background-color)\
                          \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--red-color)\
                          \ {{ (remaining / duration * 100) | round() }}% 0%, var(--card-background-color)\
                          \ 0% 100%);\n} .shape:after {\n  /* Add back icon shape\
                          \ */\n  content: \"\";\n  height: 100%;\n  width: 100%;\n\
                          \  position: absolute;\n  border-radius: var(--icon-border-radius);\n\
                          \  background: var(--shape-color);\n} {%- endif -%}\n"
                  - type: custom:mushroom-lock-card
                    entity: lock.garage_entry
                    name: Garage Entry
                    primary_info: none
                    secondary_info: none
                    icon_type: none
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                          \ 0;\n  background: none;\n}\n"
                        mushroom-lock-buttons-control$:
                          mushroom-button:nth-child(1)$: ".button {\n  --bg-color:\
                            \ rgba(var(--rgb-disabled), 0.2);\n}\n"
          - type: custom:mushroom-template-card
            entity: binary_sensor.garage_side_door_contact
            primary: Garage Side Door
            secondary: '{% from "util.jinja" import nominal_change_history %} {{ state_translated(entity)
              }} ⸱ {{ nominal_change_history(entity) }}'
            icon: mdi:door{{ iif(is_state(entity, "on"), "-open", "") }}
            icon_color: '{{ iif(is_state(entity, "on"), "red", "green") }}'
            tap_action:
              action: more-info
            hold_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.more_info
                data:
                  entity: sensor.garage_side_door_battery
            card_mod:
              style:
                mushroom-shape-icon$: "{% set battery_entity = \"sensor.garage_side_door_battery\"\
                  %}\n{% if int(states(battery_entity), 0) <= 60 %}\n{% from \"util.jinja\"\
                  \ import battery_color %}\n.shape {\n  /* Radial progress bar */\n\
                  \  background:\n    radial-gradient(var(--card-background-color)\
                  \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                  \ battery_color(battery_entity) }}-color) {{ states(battery_entity)\
                  \ }}% 0%, var(--card-background-color) 0% 100%\n  );\n}\n.shape:after\
                  \ {\n  /* Add back icon shape */\n  content: \"\";\n  height: 100%;\n\
                  \  width: 100%;\n  position: absolute;\n  border-radius: var(--icon-border-radius);\n\
                  \  background: var(--shape-color);\n}\n{% endif %}\n"
          - type: custom:mushroom-template-card
            entity: binary_sensor.sliding_door_contact
            primary: Sliding Door
            secondary: '{% from "util.jinja" import nominal_change_history %} {{ state_translated(entity)
              }} ⸱ {{ nominal_change_history(entity) }}'
            icon: mdi:door-sliding{{ iif(is_state(entity, "on"), "-open", "") }}
            icon_color: '{{ iif(is_state(entity, "on"), "red", "green") }}'
            tap_action:
              action: more-info
            hold_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.more_info
                data:
                  entity: sensor.sliding_door_battery
            card_mod:
              style:
                mushroom-shape-icon$: "{% set battery_entity = \"sensor.sliding_door_battery\"\
                  %}\n{% if int(states(battery_entity), 0) <= 60 %}\n{% from \"util.jinja\"\
                  \ import battery_color %}\n.shape {\n  /* Radial progress bar */\n\
                  \  background:\n    radial-gradient(var(--card-background-color)\
                  \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                  \ battery_color(battery_entity) }}-color) {{ states(battery_entity)\
                  \ }}% 0%, var(--card-background-color) 0% 100%\n  );\n}\n.shape:after\
                  \ {\n  /* Add back icon shape */\n  content: \"\";\n  height: 100%;\n\
                  \  width: 100%;\n  position: absolute;\n  border-radius: var(--icon-border-radius);\n\
                  \  background: var(--shape-color);\n}\n{% endif %}\n"
          - type: custom:vertical-stack-in-card
            layout_options:
              grid_columns: 2
            cards:
              - type: custom:mushroom-template-card
                entity: cover.garage_door
                primary: Garage Door
                secondary: '{% from "util.jinja" import nominal_change_history %}
                  {{ state_translated(entity) }} ⸱ {{ nominal_change_history(entity)
                  }}'
                icon: "{% if is_state(entity, \"open\") %}\n  mdi:garage-open-variant\n\
                  {% elif states(entity) in [\"opening\", \"closing\"] %}\n  mdi:garage-alert-variant\n\
                  {% elif is_state(entity, \"closed\") %}\n  mdi:garage-variant\n\
                  {% else %}\n  mdi:garage-alert-variant\n{% endif %}"
                icon_color: "{% if is_state(entity, \"open\") %}\n  red\n{% elif states(entity)\
                  \ in [\"opening\", \"closing\"] %}\n  amber\n{% elif is_state(entity,\
                  \ \"closed\") %}\n  green\n{% else %}\n  red\n{% endif %}"
                tap_action:
                  action: more-info
              - type: custom:mushroom-cover-card
                entity: cover.garage_door
                name: Garage Door
                show_buttons_control: true
                primary_info: none
                secondary_info: none
                icon_type: none
                show_position_control: true
                card_mod:
                  style:
                    .: "ha-card {\n  --ha-card-box-shadow: none;\n  --ha-card-border-width:\
                      \ 0;\n  background: none;\n}\n"
                    mushroom-button$: ".button {\n  --bg-color: rgba(var(--rgb-disabled),\
                      \ 0.2);\n}\n"
                    mushroom-cover-buttons-control$:
                      mushroom-button$: ".button {\n  --bg-color: rgba(var(--rgb-disabled),\
                        \ 0.2);\n}\n"
          - type: custom:mushroom-template-card
            entity: binary_sensor.cold_storage_contact_contact
            primary: Cold Storage Door
            secondary: '{% from "util.jinja" import nominal_change_history %} {{ state_translated(entity)
              }} ⸱ {{ nominal_change_history(entity) }}'
            icon: mdi:door{{ iif(is_state(entity, "on"), "-open", "") }}
            icon_color: '{{ iif(is_state(entity, "on"), "red", "green") }}'
            tap_action:
              action: more-info
            hold_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.more_info
                data:
                  entity: sensor.cold_storage_contact_battery
            card_mod:
              style:
                mushroom-shape-icon$: "{% set battery_entity = \"sensor.cold_storage_contact_battery\"\
                  %}\n{% if int(states(battery_entity), 0) <= 60 %}\n{% from \"util.jinja\"\
                  \ import battery_color %}\n.shape {\n  /* Radial progress bar */\n\
                  \  background:\n    radial-gradient(var(--card-background-color)\
                  \ 60%, transparent calc(60% + 1px)),\n    conic-gradient(var(--{{\
                  \ battery_color(battery_entity) }}-color) {{ states(battery_entity)\
                  \ }}% 0%, var(--card-background-color) 0% 100%\n  );\n}\n.shape:after\
                  \ {\n  /* Add back icon shape */\n  content: \"\";\n  height: 100%;\n\
                  \  width: 100%;\n  position: absolute;\n  border-radius: var(--icon-border-radius);\n\
                  \  background: var(--shape-color);\n}\n{% endif %}\n"
      - type: grid
        cards:
          - type: heading
            icon: mdi:cctv
            heading: Cameras
            heading_style: subtitle
          - type: picture-elements
            camera_image: camera.doorbell
            elements:
              - type: icon
                icon: mdi:cctv
                style:
                  right: 0px
                  top: 20px
                  transform: translate(-50%, -50%) scale(150%)
                  background-color: rgba(28, 28, 28, 0.4)
                  --icon-primary-color: var(--grey-color)
                  border-radius: 24px
                  padding: 0 4px
                tap_action:
                  action: navigate
                  navigation_path: '#camera-doorbell'
              - type: state-icon
                entity: sensor.doorbell_person_count
                icon: mdi:walk
                state_color: true
                style:
                  bottom: -20px
                  right: -20px
                  background-color: rgba(28, 28, 28, 0.4)
                  --icon-primary-color: var(--grey-color)
                  border-radius: 24px
                  padding: 0 4px
                tap_action:
                  action: more-info
              - type: state-icon
                entity: binary_sensor.doorbell_camera_motion
                icon: mdi:motion-sensor
                state_color: true
                style:
                  bottom: -20px
                  right: 30px
                  background-color: rgba(28, 28, 28, 0.4)
                  --icon-primary-color: var(--grey-color)
                  border-radius: 24px
                  padding: 0 4px
                tap_action:
                  action: more-info
            grid_options:
              columns: 9
              rows: auto
          - show_state: false
            show_name: false
            camera_view: auto
            type: picture-entity
            entity: camera.garage
            aspect_ratio: '16:9'
            tap_action:
              action: navigate
              navigation_path: '#camera-garage'
            layout_options:
              grid_columns: 2
          - show_state: false
            show_name: false
            camera_view: auto
            type: picture-entity
            entity: camera.family_room
            aspect_ratio: '16:9'
            tap_action:
              action: navigate
              navigation_path: '#camera-familyroom'
            layout_options:
              grid_columns: 2
          - show_state: false
            show_name: false
            camera_view: auto
            type: picture-entity
            entity: camera.livingroom
            aspect_ratio: '16:9'
            tap_action:
              action: navigate
              navigation_path: '#camera-livingroom'
            layout_options:
              grid_columns: 2
          - show_state: false
            show_name: false
            camera_view: auto
            type: picture-entity
            entity: camera.litterbox
            aspect_ratio: '16:9'
            tap_action:
              action: navigate
              navigation_path: '#camera-litterbox'
            layout_options:
              grid_columns: 2
      - type: grid
        cards:
          - type: heading
            icon: mdi:motion-sensor
            heading: Occupancy
            heading_style: subtitle
          - type: grid
            square: false
            columns: 3
            cards:
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Home
                  - entity: binary_sensor.ecobee_occupancy
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Kitchen
                  - entity: binary_sensor.kitchen_occupancy
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Main
                  - entity: binary_sensor.main_bedroom_occupancy
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Emma
                  - entity: binary_sensor.emma_bedroom_occupancy
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Ethan
                  - entity: binary_sensor.ethan_bedroom_occupancy
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Amy Office
                  - entity: binary_sensor.amy_office_occupancy
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Family
                  - entity: binary_sensor.family_room_occupancy
              - type: custom:mushroom-template-card
                entity: binary_sensor.apollo_msr_1_office_radar_target
                primary: Josh Office
                secondary: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  Motion\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  Detected\n{%- else -%}\n  Clear\n{%- endif -%}"
                icon: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  mdi:motion-sensor\n{%- elif is_state(entity, \"\
                  on\") -%}\n  mdi:walk\n{%- else -%}\n  mdi:motion-sensor-off\n{%-\
                  \ endif -%}"
                icon_color: "{%- if is_state(\"binary_sensor.apollo_msr_1_office_radar_moving_target\"\
                  , \"on\") -%}\n  orange\n{%- elif is_state(entity, \"on\") -%}\n\
                  \  light-green\n{%- else -%}\n  disabled\n{%- endif -%}"
                tap_action:
                  action: more-info
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Theater
                  - entity: binary_sensor.theater_room_occupancy
              - type: custom:streamline-card
                template: motion_card
                variables:
                  - name: Garage
                  - entity: binary_sensor.garage_multisensor_motion_detection
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#camera-doorbell'
                button_type: name
                name: Doorbell
                show_icon: false
                width_desktop: calc(100% - var(--mdc-drawer-width))
                margin_top_mobile: calc(0px - var(--header-height))
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
              - type: custom:frigate-card
                cameras:
                  - camera_entity: camera.doorbell
                    live_provider: go2rtc
                    go2rtc:
                      modes:
                        - webrtc
                        - mse
                      stream: doorbell
                menu:
                  style: outside
                  buttons:
                    frigate:
                      enabled: false
                    cameras:
                      enabled: false
                    media_player:
                      enabled: false
                    download:
                      enabled: false
                    microphone:
                      enabled: true
                      type: toggle
                      alignment: opposing
                    mute:
                      enabled: true
                      alignment: opposing
                    play:
                      enabled: true
                      alignment: opposing
                      priority: 45
                    fullscreen:
                      alignment: opposing
                      priority: 40
                live:
                  draggable: false
                  preload: true
                  controls:
                    builtin: false
                    ptz:
                      mode: 'off'
                      orientation: vertical
                      hide_zoom: true
                  lazy_load: true
                media_viewer:
                  transition_effect: slide
                timeline:
                  controls:
                    thumbnails:
                      mode: below
                dimensions:
                  aspect_ratio_mode: dynamic
                performance: {}
                view: {}
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#camera-livingroom'
                button_type: name
                name: Living Room
                show_icon: false
                width_desktop: calc(100% - var(--mdc-drawer-width))
                margin_top_mobile: calc(0px - var(--header-height))
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
              - type: custom:frigate-card
                cameras:
                  - camera_entity: camera.livingroom
                    live_provider: go2rtc
                    go2rtc:
                      modes:
                        - webrtc
                        - mse
                      stream: livingroom
                menu:
                  style: outside
                  buttons:
                    frigate:
                      enabled: false
                    cameras:
                      enabled: false
                    media_player:
                      enabled: false
                    download:
                      enabled: false
                    microphone:
                      enabled: true
                      type: toggle
                      alignment: opposing
                    mute:
                      enabled: true
                      alignment: opposing
                    play:
                      enabled: true
                      alignment: opposing
                      priority: 45
                    fullscreen:
                      alignment: opposing
                      priority: 40
                live:
                  draggable: false
                  preload: true
                  controls:
                    builtin: false
                    ptz:
                      mode: 'off'
                      orientation: vertical
                      hide_zoom: true
                  lazy_load: true
                media_viewer:
                  transition_effect: slide
                timeline:
                  controls:
                    thumbnails:
                      mode: below
                dimensions:
                  aspect_ratio_mode: dynamic
                performance: {}
                view: {}
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#camera-familyroom'
                button_type: name
                name: Family Room
                show_icon: false
                width_desktop: calc(100% - var(--mdc-drawer-width))
                margin_top_mobile: calc(0px - var(--header-height))
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
              - type: custom:frigate-card
                cameras:
                  - camera_entity: camera.family_room
                    live_provider: go2rtc
                    go2rtc:
                      modes:
                        - webrtc
                        - mse
                      stream: familyroom
                menu:
                  style: outside
                  buttons:
                    frigate:
                      enabled: false
                    cameras:
                      enabled: false
                    media_player:
                      enabled: false
                    download:
                      enabled: false
                    microphone:
                      enabled: true
                      type: toggle
                      alignment: opposing
                    mute:
                      enabled: true
                      alignment: opposing
                    play:
                      enabled: true
                      alignment: opposing
                      priority: 45
                    fullscreen:
                      alignment: opposing
                      priority: 40
                live:
                  draggable: false
                  preload: true
                  controls:
                    builtin: false
                    ptz:
                      mode: 'off'
                      orientation: vertical
                      hide_zoom: true
                  lazy_load: true
                media_viewer:
                  transition_effect: slide
                timeline:
                  controls:
                    thumbnails:
                      mode: below
                dimensions:
                  aspect_ratio_mode: dynamic
                performance: {}
                view: {}
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#camera-garage'
                button_type: name
                name: Garage
                show_icon: false
                width_desktop: calc(100% - var(--mdc-drawer-width))
                margin_top_mobile: calc(0px - var(--header-height))
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
              - type: custom:frigate-card
                cameras:
                  - camera_entity: camera.garage
                    live_provider: go2rtc
                    go2rtc:
                      modes:
                        - webrtc
                        - mse
                      stream: garage
                menu:
                  style: outside
                  buttons:
                    frigate:
                      enabled: false
                    cameras:
                      enabled: false
                    media_player:
                      enabled: false
                    download:
                      enabled: false
                    microphone:
                      enabled: true
                      type: toggle
                      alignment: opposing
                    mute:
                      enabled: true
                      alignment: opposing
                    play:
                      enabled: true
                      alignment: opposing
                      priority: 45
                    fullscreen:
                      alignment: opposing
                      priority: 40
                live:
                  draggable: false
                  preload: true
                  controls:
                    builtin: false
                    ptz:
                      mode: 'off'
                      orientation: vertical
                      hide_zoom: true
                  lazy_load: true
                media_viewer:
                  transition_effect: slide
                timeline:
                  controls:
                    thumbnails:
                      mode: below
                dimensions:
                  aspect_ratio_mode: dynamic
                performance: {}
                view: {}
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#camera-litterbox'
                button_type: name
                name: Litterbox
                show_icon: false
                width_desktop: calc(100% - var(--mdc-drawer-width))
                margin_top_mobile: calc(0px - var(--header-height))
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
              - type: custom:frigate-card
                cameras:
                  - camera_entity: camera.litterbox
                    live_provider: go2rtc
                    go2rtc:
                      modes:
                        - webrtc
                        - mse
                      stream: litterbox
                menu:
                  style: outside
                  buttons:
                    frigate:
                      enabled: false
                    cameras:
                      enabled: false
                    media_player:
                      enabled: false
                    download:
                      enabled: false
                    microphone:
                      enabled: true
                      type: toggle
                      alignment: opposing
                    mute:
                      enabled: true
                      alignment: opposing
                    play:
                      enabled: true
                      alignment: opposing
                      priority: 45
                    fullscreen:
                      alignment: opposing
                      priority: 40
                live:
                  draggable: false
                  preload: true
                  controls:
                    builtin: false
                    ptz:
                      mode: 'off'
                      orientation: vertical
                      hide_zoom: true
                  lazy_load: true
                media_viewer:
                  transition_effect: slide
                timeline:
                  controls:
                    thumbnails:
                      mode: below
                dimensions:
                  aspect_ratio_mode: dynamic
                performance: {}
                view: {}
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        label: Security
        content: '{% from "util.jinja" import security_count %}

          {{ iif(security_count() | int == 0, "Secure", "Not Secure") }}'
        icon: '{% from "util.jinja" import security_count %}

          {{ iif(security_count() | int == 0, "mdi:shield-check",

          "mdi:shield-alert") }}'
        color: '{% from "util.jinja" import security_count %}

          {{ iif(security_count() | int == 0, "green", "red") }}'
      - type: custom:mushroom-template-badge
        entity: binary_sensor.all_doors
        label: Doors
        content: '{{ expand(entity) | selectattr(''state'', ''=='', ''on'') | list
          | count }}'
        icon: '{{ iif(is_state(entity, "on"), "mdi:door-open", "mdi:door") }}'
        color: '{{ iif(is_state(entity, "on"), "cyan", "grey") }}'
      - type: custom:mushroom-template-badge
        entity: input_boolean.guest_mode
        label: Guest Mode
        content: '{{ state_translated(entity) }}'
        icon: '{{ iif(is_state(entity, "on"), "mdi:account-question", "mdi:account-question-outline")
          }}'
        color: '{{ iif(is_state(entity, "on"), "green", "grey") }}'
        tap_action:
          action: more-info
        hold_action:
          action: toggle
      - type: custom:mushroom-template-badge
        entity: binary_sensor.doorbell_visitor
        label: Last Ring
        content: '{% from "util.jinja" import nominal_change_history %} {{ nominal_change_history(entity)
          }}'
        icon: mdi:bell-ring
        color: grey
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.doorbell_person_count
        label: Last Person
        content: '{% from "util.jinja" import nominal_change_history %} {{ nominal_change_history(entity)
          }}'
        icon: mdi:walk
        color: grey
        tap_action:
          action: more-info
  - title: Frigate
    path: frigate
    subview: true
    icon: mdi:timeline
    type: sections
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:timeline
            heading: Frigate Timeline
            heading_style: title
        column_span: 4
      - type: grid
        cards:
          - type: custom:frigate-card
            cameras:
              - camera_entity: camera.doorbell
              - camera_entity: camera.garage
              - camera_entity: camera.livingroom
              - camera_entity: camera.family_room
              - camera_entity: camera.litterbox
            view:
              default: timeline
              camera_select: current
            menu:
              style: outside
              buttons:
                recordings:
                  enabled: true
            timeline:
              style: ribbon
              show_recordings: true
              controls:
                thumbnails:
                  mode: below
              window_seconds: 21600
              events_media_type: all
            media_viewer:
              transition_effect: slide
              auto_unmute:
                - selected
            dimensions: {}
            performance: {}
            layout_options:
              grid_columns: full
        column_span: 4
    max_columns: 4
    cards: []
    badges: []
  - title: Climate
    path: climate
    icon: mdi:thermostat-box
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:thermostat-box
            heading: Climate
            heading_style: title
        column_span: 2
      - type: grid
        cards:
          - type: custom:bubble-card
            card_type: climate
            entity: climate.ecobee
            show_state: true
            styles: "${card.querySelector('.bubble-name').innerText = [\n    (hass.formatEntityState(hass.states[\"\
              sensor.ecobee_mode\"]) || \"\"),\n    (hass.states[entity]?.attributes.current_temperature\
              \ + \"°F\" || \"\")\n  ].filter(n => n).join(\" ⸱ \")\n}"
            sub_button:
              - name: HVAC modes menu
                select_attribute: hvac_modes
                state_background: false
                show_arrow: false
              - name: Profile
                entity: climate.ecobee_cloud
                select_attribute: preset_modes
                state_background: false
                show_arrow: false
              - name: Fan modes menu
                entity: climate.ecobee
                select_attribute: fan_modes
                state_background: false
                show_arrow: false
            card_layout: large
          - type: heading
            icon: mdi:history
            heading: Running Mode History
            heading_style: subtitle
          - type: custom:history-explorer-card
            cardName: historycard-ecobee-mode
            header: hide
            uiLayout:
              toolbar: hide
              selector: hide
            labelsVisible: false
            labelAreaWidth: 0
            tooltipShowDuration: true
            tooltipSize: slim
            stateTextMode: auto
            stateColors:
              Idle: rgb(100,100,100)
              Cooling: rgb(33,150,243)
              Heating: rgb(244,67,54)
              Fan: rgb(255,235,59)
            graphs:
              - type: timeline
                entities:
                  - entity: sensor.ecobee_mode
          - type: heading
            icon: mdi:chart-line
            heading: Thermostat
            heading_style: subtitle
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 2
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - id: temp
                decimals: 0
                min: ~65
                max: ~80
                apex_config:
                  tickAmount: 4
                  title:
                    text: °F
                    rotate: 0
              - id: perc
                opposite: true
                decimals: 0
                min: ~10
                max: ~50
                apex_config:
                  tickAmount: 4
                  forceNiceScale: true
                  title:
                    text: '%'
                    rotate: 0
            series:
              - entity: sensor.ecobee_current_temperature
                name: Indoor Temp
                yaxis_id: temp
                color: rgb(158,158,158)
              - entity: climate.ecobee
                attribute: target_temp_high
                name: Cool Setpoint
                yaxis_id: temp
                unit: °F
                color: rgb(33,150,243)
                stroke_width: 1
              - entity: climate.ecobee
                attribute: target_temp_low
                name: Heat Setpoint
                yaxis_id: temp
                unit: °F
                color: rgb(255,152,0)
                stroke_width: 1
              - entity: climate.ecobee
                attribute: temperature
                name: Setpoint
                yaxis_id: temp
                unit: °F
                color: rgb(33,150,243)
                stroke_width: 1
                type: area
                opacity: 0.2
              - entity: sensor.ecobee_current_humidity
                name: Indoor Humidity
                yaxis_id: perc
                color: rgb(0,150,136)
      - type: grid
        cards:
          - type: heading
            icon: mdi:thermometer-lines
            heading: Rooms
            heading_style: subtitle
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 1
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - decimals: 0
                min: ~65
                apex_config:
                  tickAmount: 4
                  title:
                    text: °F
                    rotate: 0
            series:
              - entity: sensor.ecobee_current_temperature
                name: Home
                color: rgb(255,152,0)
              - entity: sensor.main_bedroom_temperature
                name: Main
                color: rgb(103,58,183)
              - entity: sensor.kitchen_temperature
                name: Kitchen
                color: rgb(205,220,57)
              - entity: sensor.ethan_bedroom_temperature
                name: Ethan
                color: rgb(76,175,80)
              - entity: sensor.emma_bedroom_temperature
                name: Emma
                color: rgb(156,39,176)
              - entity: sensor.family_room_temperature
                name: Family Room
                color: rgb(255,235,59)
              - entity: sensor.joshua_office_temperature
                name: Josh's Office
                color: rgb(33,150,243)
              - entity: sensor.amy_office_temperature
                name: Amy's Office
                color: rgb(0,188,212)
              - entity: sensor.main_bathroom_sensor_temperature
                name: Main Bath
                color: rgb(103,58,183)
              - entity: sensor.theater_room_temperature
                name: Theater Room
                color: rgb(255, 193, 7)
      - type: grid
        cards:
          - type: heading
            heading: Other
            heading_style: subtitle
            icon: mdi:thermometer-low
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 1
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - decimals: 0
                apex_config:
                  tickAmount: 4
                  title:
                    text: °F
                    rotate: 0
            series:
              - entity: sensor.cold_storage_temperature
                name: Cold Storage
                color: rgb(156,39,176)
              - entity: sensor.garage_multisensor_air_temperature
                name: Garage
                color: rgb(121,85,72)
      - type: grid
        cards:
          - type: heading
            icon: mdi:water-percent
            heading: Humidity
            heading_style: subtitle
          - type: custom:apexcharts-card
            apex_config:
              chart:
                foreColor: '#7B7B7B'
                toolbar:
                  show: false
              grid:
                borderColor: '#7B7B7B'
              xaxis:
                tooltip:
                  enabled: false
            header:
              show: true
              show_states: true
              colorize_states: true
            all_series_config:
              extend_to: now
              stroke_width: 2
              type: line
              group_by:
                func: avg
                duration: 5min
            span:
              end: minute
            graph_span: 1d
            yaxis:
              - decimals: 0
                min: ~10
                max: ~50
                apex_config:
                  tickAmount: 4
                  forceNiceScale: true
                  title:
                    text: '%'
                    rotate: 0
            series:
              - entity: sensor.ecowitt_humidity
                name: Outside
                color: rgb(0,188,212)
              - entity: sensor.cold_storage_humidity
                name: Cold Storage
                color: rgb(156,39,176)
              - entity: sensor.main_bathroom_sensor_humidity
                name: Main Bath
                color: rgb(103,58,183)
              - entity: sensor.garage_multisensor_humidity
                name: Garage
                color: rgb(121,85,72)
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: sensor.ecobee_mode
        content: '{{ states(entity) }}'
        icon: mdi:thermostat
        color: "{% if is_state(entity, \"Heating\") %}\n  red\n{% elif is_state(entity,\
          \ \"Cooling\") %}\n  light-blue\n{% elif is_state(entity, \"Fan\") %}\n\
          \  amber\n{% elif is_state(entity, \"Off\") %}\n  grey\n{% else %}\n  blue-grey\n\
          {% endif %}"
        tap_action:
          action: more-info
        label: Running
      - type: custom:mushroom-template-badge
        entity: climate.ecobee_cloud
        icon: mdi:thermostat-cog
        content: '{{ (state_attr(entity, "preset_mode") | replace("_", " ") | title)
          | default("Home", true) }}'
        tap_action:
          action: more-info
        label: Preset
      - type: custom:mushroom-template-badge
        entity: sensor.ecobee_current_temperature
        label: Temperature
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:thermometer
        color: '{% from "util.jinja" import room_temp %}

          {{ room_temp(entity) }}'
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        entity: sensor.ecobee_current_humidity
        label: Humidity
        content: '{{ states(entity) | round(0) }}{{ state_attr(entity, "unit_of_measurement")
          }}'
        icon: mdi:water-percent
        color: '{% from "util.jinja" import room_humidity %}

          {{ room_humidity(entity) }}'
        tap_action:
          action: more-info
  - title: Lights
    path: lights
    icon: mdi:lightbulb-group
    type: sections
    max_columns: 3
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:lightbulb-group
            heading: Light Control
            heading_style: title
        column_span: 3
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.living_room_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.family_room_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.joshua_office_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.kitchen_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.amy_office_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.ethan_bedroom_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.emma_bedroom_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.main_bedroom_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.garage_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.outside_lights
              - style: ''
      - type: grid
        cards:
          - type: custom:streamline-card
            template: light_group
            variables:
              - entity: light.utility_lights
              - style: ''
      - type: grid
        column_span: 3
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: light.all_lights
        content: '{{ expand(entity) | selectattr(''state'', ''=='', ''on'') | list
          | count }}'
        icon: '{{ iif(is_state(entity, "on"), "mdi:lightbulb-group", "mdi:lightbulb-group-off")
          }}'
        color: '{{ iif(is_state(entity, "on"), "amber", "grey") }}'
        hold_action:
          action: call-service
          service: light.turn_off
          target:
            entity_id: light.all_lights
      - type: custom:mushroom-chips-card
        chips:
          - type: template
            entity: fan.all_fans
            icon: '{{ iif(is_state(entity, "on"), "mdi:fan", "mdi:fan-off") }}'
            icon_color: '{{ iif(is_state(entity, "on"), "green", "grey") }}'
            tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  title: All Fans
                  content:
                    type: custom:vertical-stack-in-card
                    card_mod:
                      style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                        \ 0;\n}\n"
                    cards:
                      - type: custom:auto-entities
                        show_empty: false
                        card:
                          type: custom:layout-card
                          cards: []
                          layout_type: masonry
                        sort:
                          method: friendly_name
                        filter:
                          include:
                            - group: fan.all_fans
                              options:
                                type: custom:mushroom-fan-card
                                layout: horizontal
                                icon_animation: true
                                show_percentage_control: true
                                card_mod:
                                  style: "ha-card {\n  transition: all 0s;\n  padding:\
                                    \ 4px 12px !important;\n  border-width: 0;\n}\n"
            hold_action:
              action: call-service
              service: fan.turn_off
              target:
                entity_id: fan.all_fans
            card_mod:
              style:
                .: "{% if is_state(config.entity, \"on\") %}\nha-card:after {\n  content:\
                  \ \"{{ expand(config.entity) | selectattr('state', '==', 'on') |\
                  \ list | count }}\";\n  position: absolute;\n  color: var(--green-color);\n\
                  \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n  font-size:\
                  \ 12px;\n}\n{% endif %}\n.content {\n  {% if is_state(config.entity,\
                  \ 'on') %}\n    animation: rotation linear infinite;\n    animation-duration:\
                  \ 1s;\n  {% endif %}\n}\n@keyframes rotation {\n  100% {\n    transform:\
                  \ rotate(360deg);\n  }\n}\n"
  - title: Computer
    icon: mdi:desktop-tower
    path: computer
    type: sections
    max_columns: 1
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:desktop-tower
            heading: Computers
            heading_style: title
      - type: grid
        cards:
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: computer_tile
            name: Erebus
            icon: mdi:desktop-tower
            entity: binary_sensor.erebus_connected
            tap_action:
              action: navigate
              navigation_path: '#computer-erebus'
            variables:
              connected: binary_sensor.erebus_connected
              media: media_player.erebus
              cpu: sensor.erebus_cpu_load
              ram: sensor.erebus_memory_usage
              gpu: sensor.erebus_gpu_load
            custom_fields:
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Ryzen_5_5600X-ED1C24?style=flat-square&logo=amd&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/RX_6650_XT-ED1C24?style=flat-square&logo=amd&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.erebus_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.erebus_mic_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.erebus_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.erebus_webcam_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.erebus_windows_updates_software_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.erebus_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: erebus
                                  - entity: sensor.erebus_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.erebus_windows_updates_driver_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.erebus_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: erebus
                                  - entity: sensor.erebus_windows_updates_driver_updates
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: computer_tile
            name: Nasya
            icon: mdi:laptop
            entity: binary_sensor.nasya_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-nasya'
            variables:
              connected: binary_sensor.nasya_connected
              media: media_player.nasya
              cpu: sensor.nasya_cpu_load
              ram: sensor.nasya_memory_usage
              gpu: sensor.nasya_gpu_load
            custom_fields:
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Core_i7_1260P-0071C5?style=flat-square&logo=intel&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/RTX_3050_Ti-76B900?style=flat-square&logo=nvidia&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.nasya_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.nasya_mic_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.nasya_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.nasya_webcam_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.nasya_windows_updates_software_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.nasya_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: nasya
                                  - entity: sensor.nasya_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.nasya_windows_updates_driver_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.nasya_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: nasya
                                  - entity: sensor.nasya_windows_updates_driver_updates
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: computer_tile
            name: Ardena
            icon: fab:steam-symbol
            entity: binary_sensor.ardena_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-ardena'
            variables:
              connected: binary_sensor.ardena_connected
              media: media_player.ardena
              cpu: sensor.ardena_cpu_load
              ram: sensor.ardena_memory_usage
              gpu: sensor.ardena_gpu_load
            custom_fields:
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Ryzen_5_5600X-ED1C24?style=flat-square&logo=amd&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/RTX_3080-76B900?style=flat-square&logo=nvidia&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: fan.computer
                          state_not: 'off'
                      chip:
                        type: template
                        entity: fan.computer
                        icon: mdi:fan
                        icon_color: '{{ iif(is_state(entity, ''on''), "green", "disabled")
                          }}'
                        card_mod:
                          style:
                            .: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n\
                              \    animation: rotation 1.5s linear infinite;\n   \
                              \ {% endif %}\n}\n@keyframes rotation {\n  100% {\n\
                              \    transform: rotate(-360deg);\n  }\n}\n"
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ardena_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.ardena_mic_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ardena_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.ardena_webcam_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.ardena_windows_updates_software_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.ardena_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: ardena
                                  - entity: sensor.ardena_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.ardena_windows_updates_driver_updates
                          above: 0
                      chip:
                        type: template
                        entity: sensor.ardena_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: ardena
                                  - entity: sensor.ardena_windows_updates_driver_updates
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            template: computer_tile
            name: Athos
            icon: mdi:gamepad
            entity: binary_sensor.athos_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-athos'
            variables:
              connected: binary_sensor.athos_connected
              media: media_player.athos
              cpu: sensor.athos_cpu_load
              ram: sensor.athos_memory_usage
              gpu: sensor.athos_gpu_load
            custom_fields:
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Core_i7_11700-0071C5?style=flat-square&logo=intel&logoColor=white&logoSize=auto&labelColor=555555\"\
                ><br>\n  <img src=\"https://img.shields.io/badge/GTX_1070-76B900?style=flat-square&logo=nvidia&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.athos_mic_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.athos_mic_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.athos_webcam_active
                          state: 'on'
                      chip:
                        type: entity
                        entity: binary_sensor.athos_webcam_active
                        icon_color: red
                        content_info: none
                    - type: conditional
                      conditions:
                        - entity: sensor.athos_windows_updates_software_updates
                          state_not: '0'
                        - entity: sensor.athos_windows_updates_software_updates
                          state_not: unavailable
                        - entity: sensor.athos_windows_updates_software_updates
                          state_not: unknown
                      chip:
                        type: template
                        entity: sensor.athos_windows_updates_software_updates
                        icon: mdi:arrow-up-bold-circle
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Software Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: athos
                                  - entity: sensor.athos_windows_updates_software_updates
                    - type: conditional
                      conditions:
                        - entity: sensor.athos_windows_updates_driver_updates
                          state_not: '0'
                        - entity: sensor.athos_windows_updates_driver_updates
                          state_not: unavailable
                        - entity: sensor.athos_windows_updates_driver_updates
                          state_not: unknown
                      chip:
                        type: template
                        entity: sensor.athos_windows_updates_driver_updates
                        icon: mdi:cog-refresh
                        icon_color: red
                        card_mod:
                          style:
                            .: "{% if int(states(config.entity), 0) > 0 %}\nha-card:after\
                              \ {\n  content: \"{{ int(states(config.entity), 0) }}\"\
                              ;\n  position: absolute;\n  color: var(--red-color);\n\
                              \  font-weight: bolder;\n  top: -2px;\n  right: 2px;\n\
                              \  font-size: 12px;\n}\n{% endif %}\n"
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            service: browser_mod.popup
                            data:
                              title: Driver Updates
                              content:
                                type: custom:streamline-card
                                template: windows_updates_list
                                variables:
                                  - computer: athos
                                  - entity: sensor.athos_windows_updates_driver_updates
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            name: MagicMirror
            icon: mdi:apps
            entity: binary_sensor.magicmirror_connected
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-magicmirror'
            custom_fields:
              stat1: "[[[\n  var entity_id = 'sensor.magicmirror_cpu_usage';\n  return\
                \ `<ha-icon icon=\"mdi:cpu-64-bit\" style=\"width: 24px; height: 24px;\
                \ color: var(--green-color);\"></ha-icon>\n    <span> CPU: <span style=\"\
                color: var(--text-color-sensor);\">${states[entity_id].state !== 'unavailable'\
                \ ? helpers.localize(states[entity_id], undefined, 0) : '?'}</span></span>`\n\
                ]]]"
              stat2: "[[[\n  var entity_id = 'sensor.magicmirror_memory_usage';\n\
                \  return `<ha-icon icon=\"mdi:memory\" style=\"width: 24px; height:\
                \ 24px; color: var(--green-color);\"></ha-icon>\n    <span> RAM: <span\
                \ style=\"color: var(--text-color-sensor);\">${states[entity_id].state\
                \ !== 'unavailable' ? helpers.localize(states[entity_id], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              stat3: "[[[\n  var entity_id = 'sensor.magicmirror_cpu_thermal_1_temperature';\n\
                \  return `<ha-icon icon=\"mdi:thermometer\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ Temp: <span style=\"color: var(--text-color-sensor);\">${states[entity_id].state\
                \ !== 'unavailable' ? helpers.localize(states[entity_id], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Raspberry_Pi_5-C7053D?style=flat-square&logo=raspberrypi&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips: []
            styles:
              grid:
                - grid-template-columns: 1fr min-content
                - grid-template-rows: min-content min-content min-content min-content
                    min-content min-content min-content;
                - grid-template-areas: '"n i" "s chips" "info chips" "stat1 chips"
                    "stat2 chips" "stat3 chips" "stat4 chips"'
              card:
                - padding: 22px 8px 22px 22px
              img_cell:
                - justify-content: start
                - align-self: start
                - position: absolute
                - width: 100px
                - height: 100px
                - right: -20px
                - top: -20px
                - border-radius: 50%
                - background: '[[[ if (states["binary_sensor.magicmirror_connected"].state
                    == "off") return "var(--red-color)"; else return "var(--green-color)"
                    ]]]'
              icon:
                - width: 60px
                - color: rgba(0, 0, 0, 0.6)
              name:
                - justify-self: start
                - align-self: start
                - font-size: 20px
                - font-weight: 500
                - color: var(--primary-text-color)
              state:
                - min-height: 30px
                - justify-self: start
                - align-self: start
                - font-size: 14px
                - opacity: '0.7'
              custom_fields:
                stat1:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.magicmirror_cpu_usage''].state
                      > 80) return "var(--red-color)"; ]]]'
                stat2:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.magicmirror_memory_usage''].state
                      > 80) return "var(--red-color)"; ]]]'
                stat3:
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.magicmirror_cpu_thermal_1_temperature''].state
                      > 80) return "var(--red-color)"; ]]]'
                info:
                  - align-self: end
                  - justify-self: start
                  - text-align: left
                chips:
                  - margin-top: 15px
                  - justify-content: end
                  - align-self: start
          - type: custom:button-card
            layout_options:
              grid_columns: 2
            name: Quest 2
            icon: fab:meta
            entity: binary_sensor.quest_interactive
            show_state: true
            tap_action:
              action: navigate
              navigation_path: '#computer-quest'
            custom_fields:
              stat1: "[[[\n  var entity_id = 'sensor.quest_battery_level';\n  return\
                \ `<ha-icon icon=\"mdi:battery\" style=\"width: 24px; height: 24px;\
                \ color: var(--green-color);\"></ha-icon>\n    <span> CPU: <span style=\"\
                color: var(--text-color-sensor);\">${states[entity_id].state !== 'unavailable'\
                \ ? helpers.localize(states[entity_id], undefined, 0) : '?'}</span></span>`\n\
                ]]]"
              stat2: "[[[\n  var entity_id = 'sensor.quest_wifi_link_speed';\n  return\
                \ `<ha-icon icon=\"mdi:wifi\" style=\"width: 24px; height: 24px; color:\
                \ var(--green-color);\"></ha-icon>\n    <span> WiFi: <span style=\"\
                color: var(--text-color-sensor);\">${states[entity_id].state !== 'unavailable'\
                \ ? helpers.localize(states[entity_id], undefined, 0) : '?'}</span></span>`\n\
                ]]]"
              stat3: "[[[\n  var entity_id = 'sensor.quest_battery_temperature';\n\
                \  return `<ha-icon icon=\"mdi:thermometer\" style=\"width: 24px;\
                \ height: 24px; color: var(--green-color);\"></ha-icon>\n    <span>\
                \ Temp: <span style=\"color: var(--text-color-sensor);\">${states[entity_id].state\
                \ !== 'unavailable' ? helpers.localize(states[entity_id], undefined,\
                \ 0) : '?'}</span></span>`\n]]]"
              info: "[[[\n  return `<img src=\"https://img.shields.io/badge/Meta_Quest_2-0668E1?style=flat-square&logo=meta&logoColor=white&logoSize=auto&labelColor=555555\"\
                >`\n]]]"
              chips:
                card:
                  type: custom:mushroom-chips-card
                  card_mod:
                    style: "ha-card {\n  transition: all 0s;\n  --chip-background:\
                      \ var(--primary-background-color) !important;\n  --chip-box-shadow:\
                      \ none;\n  --chip-border-width: 0;\n  --chip-spacing: 0.1em;\n\
                      }\n"
                  chips: []
            styles:
              grid:
                - grid-template-columns: 1fr min-content
                - grid-template-rows: min-content min-content min-content min-content
                    min-content min-content min-content;
                - grid-template-areas: '"n i" "s chips" "info chips" "stat1 chips"
                    "stat2 chips" "stat3 chips" "stat4 chips"'
              card:
                - padding: 22px 8px 22px 22px
              img_cell:
                - justify-content: start
                - align-self: start
                - position: absolute
                - width: 100px
                - height: 100px
                - right: -20px
                - top: -20px
                - border-radius: 50%
                - background: '[[[ if (states["binary_sensor.quest_interactive"].state
                    == "off") return "var(--red-color)"; else return "var(--green-color)"
                    ]]]'
              icon:
                - width: 60px
                - color: rgba(0, 0, 0, 0.6)
              name:
                - justify-self: start
                - align-self: start
                - font-size: 20px
                - font-weight: 500
                - color: var(--primary-text-color)
              state:
                - min-height: 30px
                - justify-self: start
                - align-self: start
                - font-size: 14px
                - opacity: '0.7'
              custom_fields:
                stat1:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.quest_battery_level''].state
                      < 16) return "var(--red-color)"; ]]]'
                stat2:
                  - padding-bottom: 2px
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.quest_wifi_link_speed''].state
                      < 800) return "var(--red-color)"; ]]]'
                stat3:
                  - align-self: start
                  - justify-self: start
                  - font-size: 14px
                  - --text-color-sensor: '[[[ if (states[''sensor.quest_battery_temperature''].state
                      > 80) return "var(--red-color)"; ]]]'
                info:
                  - align-self: end
                  - justify-self: start
                  - text-align: left
                chips:
                  - margin-top: 15px
                  - justify-content: end
                  - align-self: start
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#computer-erebus'
                name: Erebus
                icon: mdi:desktop-tower
                button_type: name
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.erebus
                  target: {}
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n.bubble-sub-button-1\
                  \ {\n  display: ${hass.states['binary_sensor.erebus_mic_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-1 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-2\
                  \ {\n  display: ${hass.states['binary_sensor.erebus_webcam_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-2 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-3\
                  \ {\n  display: ${hass.states['sensor.erebus_windows_updates_software_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-4\
                  \ {\n  display: ${hass.states['sensor.erebus_windows_updates_driver_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-4 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}"
                sub_button:
                  - entity: binary_sensor.erebus_mic_active
                    show_background: false
                  - entity: binary_sensor.erebus_webcam_active
                    show_background: false
                  - entity: sensor.erebus_windows_updates_software_updates
                    show_background: false
                    show_state: true
                    icon: mdi:arrow-up-bold-circle
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Software Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: erebus
                              - entity: sensor.erebus_windows_updates_software_updates
                  - entity: sensor.erebus_windows_updates_driver_updates
                    show_background: false
                    show_state: true
                    icon: mdi:cog-refresh
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Driver Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: erebus
                              - entity: sensor.erebus_windows_updates_driver_updates
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:streamline-card
                    template: computer_power
                    variables:
                      - computer: erebus
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.erebus_connected
                        state_not: unavailable
                      - entity: binary_sensor.erebus_connected
                        state_not: unknown
                      - entity: binary_sensor.erebus_connected
                        state_not: 'off'
                    card:
                      type: custom:streamline-card
                      template: computer_apps
                      variables:
                        - computer: erebus
                  - type: conditional
                    conditions:
                      - entity: media_player.erebus
                        state_not: unavailable
                      - entity: media_player.erebus
                        state_not: unknown
                      - entity: media_player.erebus
                        state_not: 'off'
                    card:
                      type: custom:bubble-card
                      card_type: media-player
                      card_layout: large
                      cover_background: true
                      entity: media_player.erebus
                      hide:
                        power_button: true
                  - type: custom:streamline-card
                    template: uptime_card
                    variables:
                      - entity: binary_sensor.erebus_connected
                      - name: Erebus Up-Time
                      - icon: mdi:connection
                  - type: custom:streamline-card
                    template: four_graphs
                    variables:
                      - graph_1_name: CPU
                      - graph_1_icon: mdi:cpu-64-bit
                      - graph_1_entities:
                          - entity: sensor.erebus_cpu_load
                            name: Usage
                            color: var(--amber-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.erebus_cpu_clock_speed
                            name: Speed
                            color: var(--lime-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_2_name: GPU
                      - graph_2_icon: mdi:expansion-card
                      - graph_2_entities:
                          - entity: sensor.erebus_gpu_load
                            name: Load
                            color: var(--green-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.erebus_gpu_temperature
                            name: Temperature
                            color: var(--pink-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_3_name: Storage
                      - graph_3_icon: mdi:harddisk
                      - graph_3_entities:
                          - entity: sensor.erebus_storage_c
                            attribute: UsedSpacePercentage
                            unit: '%'
                            name: Win11
                            color: var(--blue-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.erebus_storage_b
                            attribute: UsedSpacePercentage
                            unit: '%'
                            name: Backup
                            color: var(--indigo-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.erebus_storage_d
                            attribute: UsedSpacePercentage
                            unit: '%'
                            name: Dev Drive
                            color: var(--lime-color)
                            show_state: true
                            show_points: false
                      - graph_4_name: RAM
                      - graph_4_icon: mdi:memory
                      - graph_4_entities:
                          - entity: sensor.erebus_memory_usage
                            name: Usage
                            color: var(--purple-color)
                            show_state: true
                            show_points: false
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#computer-nasya'
                name: Nasya
                icon: mdi:laptop
                button_type: name
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.nasya
                  target: {}
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n.bubble-sub-button-1\
                  \ {\n  display: ${hass.states['binary_sensor.nasya_mic_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-1 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-2\
                  \ {\n  display: ${hass.states['binary_sensor.nasya_webcam_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-2 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-3\
                  \ {\n  display: ${hass.states['sensor.nasya_windows_updates_software_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-4\
                  \ {\n  display: ${hass.states['sensor.nasya_windows_updates_driver_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-4 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}"
                sub_button:
                  - entity: binary_sensor.nasya_mic_active
                    show_background: false
                  - entity: binary_sensor.nasya_webcam_active
                    show_background: false
                  - entity: sensor.nasya_windows_updates_software_updates
                    show_background: false
                    show_state: true
                    icon: mdi:arrow-up-bold-circle
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Software Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: nasya
                              - entity: sensor.nasya_windows_updates_software_updates
                  - entity: sensor.nasya_windows_updates_driver_updates
                    show_background: false
                    show_state: true
                    icon: mdi:cog-refresh
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Driver Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: nasya
                              - entity: sensor.nasya_windows_updates_driver_updates
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:streamline-card
                    template: computer_power
                    variables:
                      - computer: nasya
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.nasya_connected
                        state_not: unavailable
                      - entity: binary_sensor.nasya_connected
                        state_not: unknown
                      - entity: binary_sensor.nasya_connected
                        state_not: 'off'
                    card:
                      type: custom:streamline-card
                      template: computer_apps
                      variables:
                        - computer: nasya
                  - type: conditional
                    conditions:
                      - entity: media_player.nasya
                        state_not: unavailable
                      - entity: media_player.nasya
                        state_not: unknown
                      - entity: media_player.nasya
                        state_not: 'off'
                    card:
                      type: custom:bubble-card
                      card_type: media-player
                      card_layout: large
                      cover_background: true
                      entity: media_player.nasya
                      hide:
                        power_button: true
                  - type: custom:streamline-card
                    template: uptime_card
                    variables:
                      - entity: binary_sensor.nasya_connected
                      - name: Nasya Up-Time
                      - icon: mdi:connection
                  - type: custom:streamline-card
                    template: four_graphs
                    variables:
                      - graph_1_name: CPU
                      - graph_1_icon: mdi:cpu-64-bit
                      - graph_1_entities:
                          - entity: sensor.nasya_cpu_load
                            name: Usage
                            color: var(--amber-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.nasya_cpu_clock_speed
                            name: Speed
                            color: var(--lime-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_2_name: GPU
                      - graph_2_icon: mdi:expansion-card
                      - graph_2_entities:
                          - entity: sensor.nasya_gpu_load
                            name: Load
                            color: var(--green-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.nasya_gpu_temperature
                            name: Temperature
                            color: var(--pink-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_3_name: Storage
                      - graph_3_icon: mdi:harddisk
                      - graph_3_entities:
                          - entity: sensor.nasya_storage_c
                            attribute: UsedSpacePercentage
                            unit: '%'
                            name: Win11
                            color: var(--blue-color)
                            show_state: true
                            show_points: false
                      - graph_4_name: RAM
                      - graph_4_icon: mdi:memory
                      - graph_4_entities:
                          - entity: sensor.nasya_memory_usage
                            name: Usage
                            color: var(--purple-color)
                            show_state: true
                            show_points: false
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#computer-ardena'
                name: Ardena
                icon: mdi:steam
                button_type: name
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.ardena
                  target: {}
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n.bubble-sub-button-2\
                  \ {\n  display: ${hass.states['binary_sensor.ardena_mic_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-2 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-3\
                  \ {\n  display: ${hass.states['binary_sensor.ardena_webcam_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-4\
                  \ {\n  display: ${hass.states['sensor.ardena_windows_updates_software_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-4 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-5\
                  \ {\n  display: ${hass.states['sensor.ardena_windows_updates_driver_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-5 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}"
                sub_button:
                  - entity: fan.computer
                    show_background: false
                  - entity: binary_sensor.ardena_mic_active
                    show_background: false
                  - entity: binary_sensor.ardena_webcam_active
                    show_background: false
                  - entity: sensor.ardena_windows_updates_software_updates
                    show_background: false
                    show_state: true
                    icon: mdi:arrow-up-bold-circle
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Software Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: ardena
                              - entity: sensor.ardena_windows_updates_software_updates
                  - entity: sensor.ardena_windows_updates_driver_updates
                    show_background: false
                    show_state: true
                    icon: mdi:cog-refresh
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Driver Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: ardena
                              - entity: sensor.ardena_windows_updates_driver_updates
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:streamline-card
                    template: computer_power
                    variables:
                      - computer: ardena
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.ardena_connected
                        state_not: unavailable
                      - entity: binary_sensor.ardena_connected
                        state_not: unknown
                      - entity: binary_sensor.ardena_connected
                        state_not: 'off'
                    card:
                      type: custom:streamline-card
                      template: computer_apps
                      variables:
                        - computer: ardena
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.ardena_connected
                        state: 'on'
                    card:
                      type: custom:streamline-card
                      template: computer_apps
                      variables:
                        - computer: ardena
                  - type: conditional
                    conditions:
                      - entity: media_player.ardena
                        state_not: unavailable
                      - entity: media_player.ardena
                        state_not: unknown
                      - entity: media_player.ardena
                        state_not: 'off'
                    card:
                      type: custom:bubble-card
                      card_type: media-player
                      cover_background: true
                      card_layout: large
                      entity: media_player.ardena
                      hide:
                        power_button: true
                  - type: custom:streamline-card
                    template: uptime_card
                    variables:
                      - entity: binary_sensor.ardena_connected
                      - name: Ardena Up-Time
                      - icon: mdi:connection
                  - type: custom:streamline-card
                    template: four_graphs
                    variables:
                      - graph_1_name: CPU
                      - graph_1_icon: mdi:cpu-64-bit
                      - graph_1_entities:
                          - entity: sensor.ardena_cpu_load
                            name: Usage
                            color: var(--amber-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.ardena_cpu_clock_speed
                            name: Speed
                            color: var(--lime-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_2_name: GPU
                      - graph_2_icon: mdi:expansion-card
                      - graph_2_entities:
                          - entity: sensor.ardena_gpu_load
                            name: Load
                            color: var(--green-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.ardena_gpu_temperature
                            name: Temperature
                            color: var(--pink-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_3_name: Storage
                      - graph_3_icon: mdi:harddisk
                      - graph_3_entities:
                          - entity: sensor.ardena_storage_c
                            attribute: UsedSpacePercentage
                            unit: '%'
                            name: Win11
                            color: var(--blue-color)
                            show_state: true
                            show_points: false
                      - graph_4_name: RAM
                      - graph_4_icon: mdi:memory
                      - graph_4_entities:
                          - entity: sensor.ardena_memory_usage
                            name: Usage
                            color: var(--purple-color)
                            show_state: true
                            show_points: false
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#computer-athos'
                name: Athos
                icon: mdi:gamepad
                button_type: name
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.hass_publish_sensors
                  data:
                    entity: media_player.athos
                  target: {}
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}\n.bubble-sub-button-1\
                  \ {\n  display: ${hass.states['binary_sensor.athos_mic_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-1 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-2\
                  \ {\n  display: ${hass.states['binary_sensor.athos_webcam_active']?.state\
                  \ === 'on' ? '' : 'none'} !important;\n}\n.bubble-sub-button-2 >\
                  \ ha-icon {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-3\
                  \ {\n  display: ${hass.states['sensor.athos_windows_updates_software_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}\n.bubble-sub-button-4\
                  \ {\n  display: ${hass.states['sensor.athos_windows_updates_driver_updates']?.state\
                  \ > 0 ? '' : 'none'} !important;\n}\n.bubble-sub-button-4 > ha-icon\
                  \ {\n  color: var(--red-color) !important;\n}"
                sub_button:
                  - entity: binary_sensor.athos_mic_active
                    show_background: false
                  - entity: binary_sensor.athos_webcam_active
                    show_background: false
                  - entity: sensor.athos_windows_updates_software_updates
                    show_background: false
                    show_state: true
                    icon: mdi:arrow-up-bold-circle
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Software Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: athos
                              - entity: sensor.athos_windows_updates_software_updates
                  - entity: sensor.athos_windows_updates_driver_updates
                    show_background: false
                    show_state: true
                    icon: mdi:cog-refresh
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: Driver Updates
                          content:
                            type: custom:streamline-card
                            template: windows_updates_list
                            variables:
                              - computer: athos
                              - entity: sensor.athos_windows_updates_driver_updates
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:streamline-card
                    template: computer_power
                    variables:
                      - computer: athos
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.athos_connected
                        state_not: unavailable
                      - entity: binary_sensor.athos_connected
                        state_not: unknown
                      - entity: binary_sensor.athos_connected
                        state_not: 'off'
                    card:
                      type: custom:streamline-card
                      template: computer_apps
                      variables:
                        - computer: athos
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.athos_connected
                        state: 'on'
                    card:
                      type: custom:streamline-card
                      template: computer_apps
                      variables:
                        - computer: athos
                  - type: conditional
                    conditions:
                      - entity: media_player.athos
                        state_not: unavailable
                      - entity: media_player.athos
                        state_not: unknown
                      - entity: media_player.athos
                        state_not: 'off'
                    card:
                      type: custom:bubble-card
                      card_type: media-player
                      cover_background: true
                      card_layout: large
                      entity: media_player.athos
                      hide:
                        power_button: true
                  - type: custom:streamline-card
                    template: uptime_card
                    variables:
                      - entity: binary_sensor.athos_connected
                      - name: Athos Up-Time
                      - icon: mdi:connection
                  - type: custom:streamline-card
                    template: four_graphs
                    variables:
                      - graph_1_name: CPU
                      - graph_1_icon: mdi:cpu-64-bit
                      - graph_1_entities:
                          - entity: sensor.athos_cpu_load
                            name: Usage
                            color: var(--amber-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.athos_cpu_clock_speed
                            name: Speed
                            color: var(--lime-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_2_name: GPU
                      - graph_2_icon: mdi:expansion-card
                      - graph_2_entities:
                          - entity: sensor.athos_gpu_load
                            name: Load
                            color: var(--green-color)
                            show_state: true
                            show_points: false
                          - entity: sensor.athos_gpu_temperature
                            name: Temperature
                            color: var(--pink-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_3_name: Storage
                      - graph_3_icon: mdi:harddisk
                      - graph_3_entities:
                          - entity: sensor.athos_storage_c
                            attribute: UsedSpacePercentage
                            unit: '%'
                            name: Win11
                            color: var(--blue-color)
                            show_state: true
                            show_points: false
                      - graph_4_name: RAM
                      - graph_4_icon: mdi:memory
                      - graph_4_entities:
                          - entity: sensor.athos_memory_usage
                            name: Usage
                            color: var(--purple-color)
                            show_state: true
                            show_points: false
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#computer-magicmirror'
                name: MagicMirror
                icon: mdi:apps
                button_type: slider
                tap_action:
                  action: toggle
                double_tap_action:
                  action: none
                hold_action:
                  action: none
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
                entity: light.magicmirror_monitor
                show_state: true
                show_attribute: true
                show_last_changed: false
                attribute: brightness
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: conditional
                        conditions:
                          - entity: binary_sensor.magicmirror_connected
                            state: 'on'
                        card:
                          type: custom:mushroom-template-card
                          entity: button.magicmirror_shutdown
                          layout: vertical
                          primary: Power
                          icon: mdi:power
                          icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                            }}'
                          tap_action:
                            action: none
                          hold_action:
                            action: call-service
                            service: button.press
                            target:
                              entity_id: button.magicmirror_shutdown
                          card_mod:
                            style: "ha-card {\n  margin-left: auto;\n  margin-right:\
                              \ auto;\n}\n"
                      - type: conditional
                        conditions:
                          - entity: binary_sensor.magicmirror_connected
                            state: 'on'
                        card:
                          type: custom:mushroom-template-card
                          entity: button.magicmirror_reboot
                          layout: vertical
                          primary: Reboot
                          icon: mdi:refresh
                          icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                            }}'
                          tap_action:
                            action: none
                          hold_action:
                            action: call-service
                            service: button.press
                            target:
                              entity_id: button.magicmirror_reboot
                          card_mod:
                            style: "ha-card {\n  margin-left: auto;\n  margin-right:\
                              \ auto;\n}\n"
                      - type: conditional
                        conditions:
                          - entity: binary_sensor.magicmirror_connected
                            state: 'on'
                        card:
                          type: custom:mushroom-template-card
                          entity: button.magicmirror_restart
                          layout: vertical
                          primary: Restart
                          icon: mdi:table-refresh
                          icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                            }}'
                          tap_action:
                            action: none
                          hold_action:
                            action: call-service
                            service: button.press
                            target:
                              entity_id: button.magicmirror_restart
                          card_mod:
                            style: "ha-card {\n  margin-left: auto;\n  margin-right:\
                              \ auto;\n}\n"
                      - type: conditional
                        conditions:
                          - entity: binary_sensor.magicmirror_connected
                            state: 'on'
                        card:
                          type: custom:mushroom-template-card
                          entity: button.magicmirror_refresh
                          layout: vertical
                          primary: Refresh
                          icon: mdi:web-refresh
                          icon_color: '{{ is_state(entity, "on") | iif("green", "grey")
                            }}'
                          tap_action:
                            action: none
                          hold_action:
                            action: call-service
                            service: button.press
                            target:
                              entity_id: button.magicmirror_refresh
                          card_mod:
                            style: "ha-card {\n  margin-left: auto;\n  margin-right:\
                              \ auto;\n}\n"
                  - type: custom:streamline-card
                    template: uptime_card
                    variables:
                      - entity: binary_sensor.magicmirror_connected
                      - name: MagicMirror Up-Time
                      - icon: mdi:connection
                  - type: custom:streamline-card
                    template: four_graphs
                    variables:
                      - graph_1_name: CPU
                      - graph_1_icon: mdi:cpu-64-bit
                      - graph_1_entities:
                          - entity: sensor.magicmirror_cpu_usage
                            name: Usage
                            color: var(--amber-color)
                            show_state: true
                            show_points: false
                      - graph_2_name: CPU Temp
                      - graph_2_icon: mdi:thermometer-lines
                      - graph_2_entities:
                          - entity: sensor.magicmirror_cpu_thermal_1_temperature
                            name: Temperature
                            color: var(--pink-color)
                            show_state: true
                            show_points: false
                            y_axis: secondary
                      - graph_3_name: Storage
                      - graph_3_icon: mdi:sd
                      - graph_3_entities:
                          - entity: sensor.magicmirror_disk_usage
                            name: Storage
                            color: var(--blue-color)
                            show_state: true
                            show_points: false
                      - graph_4_name: RAM
                      - graph_4_icon: mdi:memory
                      - graph_4_entities:
                          - entity: sensor.magicmirror_memory_usage
                            name: Usage
                            color: var(--purple-color)
                            show_state: true
                            show_points: false
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#computer-quest'
                name: Meta Quest 2
                icon: fab:meta
                button_type: state
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: none
                margin_top_mobile: -56px
                styles: "#header-container {\n  flex-direction: row-reverse;\n}\n\
                  #header-container > div {\n  margin: 0 0 0 14px !important;\n}\n\
                  bubble-card::after {\n  display: none !important;\n}"
                entity: binary_sensor.quest_interactive
                show_state: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:bar-card
                    card_mod:
                      style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                        \  text-shadow: 1px 1px var(--primary-background-color);\n\
                        }\n"
                    name: Quest 2 Battery Level
                    entities:
                      - entity: sensor.quest_battery_level
                    animation:
                      state: 'on'
                    positions:
                      indicator: inside
                    decimal: 0
                    severity:
                      - color: var(--red-color)
                        from: 0
                        to: 10
                      - color: var(--orange-color)
                        from: 10
                        to: 30
                      - color: var(--amber-color)
                        from: 30
                        to: 50
                      - color: var(--light-green-color)
                        from: 50
                        to: 80
                      - color: var(--green-color)
                        from: 80
                        to: 100
                  - type: custom:streamline-card
                    template: four_graphs
                    variables:
                      - graph_1_name: WiFi Speed
                      - graph_1_icon: mdi:wifi-arrow-left-right
                      - graph_1_entities:
                          - entity: sensor.quest_wifi_link_speed
                            color: var(--green-color)
                            show_state: false
                            show_points: false
                      - graph_2_name: WiFi Signal
                      - graph_2_icon: mdi:wifi
                      - graph_2_entities:
                          - entity: sensor.quest_wifi_signal_strength
                            color: var(--yellow-color)
                            show_state: false
                            show_points: false
                      - graph_3_name: Storage
                      - graph_3_icon: mdi:sd
                      - graph_3_entities:
                          - entity: sensor.quest_internal_storage
                            name: Storage
                            color: var(--blue-color)
                            show_state: true
                            show_points: false
                      - graph_4_name: Battery Temp
                      - graph_4_icon: mdi:battery-alert
                      - graph_4_entities:
                          - entity: sensor.quest_battery_temperature
                            name: Battery Temp
                            color: var(--red-color)
                            show_state: true
                            show_points: false
                card_mod:
                  style: "ha-card {\n  --ha-card-background: none;\n  --ha-card-border-width:\
                    \ 0;\n}\n"
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.computers
        icon: mdi:desktop-tower
        color: '{{ "teal" if is_state(entity, "on") else "grey" }}'
        content: '{{ expand(config.entity) | selectattr("state", "==", "on") | list
          | count }}'
      - type: custom:button-card
        template: badge
        entity: sensor.steam_zanix
        name: zanix
        show_entity_picture: true
        label: '[[[ return entity.state === ''online'' ? ''Online'' : ''Offline''
          ]]]'
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Steam
              content:
                type: custom:kb-steam-card
                entity: sensor.steam_zanix
                game_background: true
                card_mod:
                  style: "ha-card {\n  background: none;\n}\n"
        state:
          - value: online
            styles:
              card:
                - background: var(--green-color)
              name:
                - color: var(--black-color)
              label:
                - color: var(--black-color)
          - value: offline
            styles:
              icon:
                - filter: grayscale(100%)
        extra_styles: "@media (hover: hover) {\n  ha-card:hover {\n    background:\
          \ color-mix(in srgb, var(--grey-color) 4%, var(--card-background-color)\
          \ 100%);\n  }\n}\n]]]\n"
      - type: custom:button-card
        template: badge
        entity: sensor.steam_starchild
        name: starchild
        show_entity_picture: true
        label: '[[[ return entity.state === ''online'' ? ''Online'' : ''Offline''
          ]]]'
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              title: Steam
              content:
                type: custom:kb-steam-card
                entity: sensor.steam_starchild
                game_background: true
                card_mod:
                  style: "ha-card {\n  background: none;\n}\n"
        state:
          - value: online
            styles:
              card:
                - background: var(--green-color)
              name:
                - color: var(--black-color)
              label:
                - color: var(--black-color)
          - value: offline
            styles:
              icon:
                - filter: grayscale(100%)
        extra_styles: "@media (hover: hover) {\n  ha-card:hover {\n    background:\
          \ color-mix(in srgb, var(--grey-color) 4%, var(--card-background-color)\
          \ 100%);\n  }\n}\n]]]\n"
  - title: Bambu
    path: bambu
    icon: mdi:printer-3d
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: fapro:bambu-lab
            heading: Bambu P1S
            heading_style: title
            badges:
              - type: entity
                entity: sensor.bambu_p1s_power
              - type: custom:mushroom-template-badge
                entity: switch.bambu_p1s
                icon: mdi:power{{ iif(is_state(entity, "off"), "-off", "") }}
                label: Power
                content: '{{ state_translated(entity) }}'
                tap_action:
                  action: none
                hold_action:
                  action: toggle
                color: '{{ iif(is_state(entity, "on"), "green", "red") }}'
              - type: custom:mushroom-template-badge
                entity: binary_sensor.bambu_p1s_hms_errors
                icon: mdi:cogs
                tap_action:
                  action: navigate
                  navigation_path: '#printer-info'
        column_span: 2
      - type: grid
        cards:
          - type: custom:tabbed-card
            styles:
              --mdc-theme-primary: var(--state-active-color)
              --mdc-tab-color-default: var(--secondary-text-color)
            attributes:
              minWidth: true
            tabs:
              - card:
                  type: picture-elements
                  camera_image: camera.bambu_p1s_camera
                  camera_view: live
                  card_mod:
                    style: "ha-card {\n  border: none;\n}\n"
                  elements:
                    - type: custom:hui-element
                      card_type: horizontal-stack
                      style:
                        top: 52%
                        left: 49%
                        width: 100%
                        height: 100%
                        display: flex
                        justify-content: flex-end
                      cards:
                        - type: custom:mushroom-chips-card
                          chips:
                            - type: conditional
                              conditions:
                                - condition: state
                                  entity: binary_sensor.bambu_p1s_recording_timelapse
                                  state: 'on'
                              chip:
                                type: entity
                                entity: binary_sensor.bambu_p1s_recording_timelapse
                                icon_color: red
                                icon: mdi:circle
                                content_info: none
                        - type: custom:button-card
                          entity: sensor.bambu_p1s_nozzle_temperature
                          show_name: false
                          show_state: false
                          icon: "[[[\n  return variables.is_heating_up ? 'mdi:printer-3d-nozzle-heat'\
                            \ : 'mdi:printer-3d-nozzle'\n]]]\n"
                          tap_action:
                            action: navigate
                            navigation_path: '#temperature-nozzle'
                          variables:
                            target_temp: "[[[\n  let target = states['sensor.bambu_p1s_nozzle_target_temperature']?.state\n\
                              \  return (target ? `<span>${target}</span><span style=\"\
                              font-size: 8px;\"> °C</span>` : '')\n]]]\n"
                            is_heating_up: "[[[\n  return parseInt(states['sensor.bambu_p1s_nozzle_temperature'].state)\
                              \ < parseInt(states['sensor.bambu_p1s_nozzle_target_temperature'].state)\n\
                              ]]]\n"
                            is_cooling_down: "[[[\n  return parseInt(states['sensor.bambu_p1s_nozzle_target_temperature'].state)\
                              \ !== 0\n    && (parseInt(states['sensor.bambu_p1s_nozzle_temperature'].state)\
                              \ - 3) > parseInt(states['sensor.bambu_p1s_nozzle_target_temperature'].state)\n\
                              ]]]\n"
                          custom_fields:
                            target: '[[[ return variables.target_temp ]]]'
                            target_icon: "[[[\n  return '<ha-icon icon=\"mdi:target\"\
                              \ style=\"width: 10px;\"></ha-icon>'\n]]]\n"
                            temp: "[[[\n  return entity.state === 'unavailable' ?\
                              \ 'Off' : `<span>${entity.state}</span><span style=\"\
                              font-size: 10px;\"> °C</span>`\n]]]\n"
                          styles:
                            card:
                              - width: 75px
                              - height: 35px
                              - border-top-left-radius: 24px
                              - border-bottom-left-radius: 24px
                              - border-top-right-radius: 24px
                              - border-bottom-right-radius: 24px
                              - transition: background-color 1.5s ease, color 1.5s
                                  ease
                              - background-color: "[[[\n  if (variables.is_heating_up)\
                                  \ {\n    return 'rgb(88, 33, 41)'\n  } else if (variables.is_cooling_down)\
                                  \ {\n    return 'rgb(24, 34, 54)'\n  } else {\n\
                                  \    return 'rgb(28, 28, 28)'\n  }\n]]]\n"
                              - color: "[[[\n  if (variables.is_heating_up) {\n  \
                                  \  return 'rgb(208, 66, 93)'\n  } else if (variables.is_cooling_down)\
                                  \ {\n    return 'rgb(77, 113, 206)'\n  } else {\n\
                                  \    return 'grey'\n  }\n]]]\n"
                            grid:
                              - grid-template-areas: "[[[\n  if (variables.is_heating_up\
                                  \ || variables.is_cooling_down) {\n    return '\"\
                                  i i temp temp\" \"i i target_icon target\"'\n  }\
                                  \ else {\n    return '\"i temp\" \"i temp\"'\n \
                                  \ }\n]]]\n"
                              - grid-template-columns: auto
                              - grid-template-rows: auto
                            img_cell:
                              - align-self: center
                              - text-align: center
                              - margin-left: 7.5px
                            name:
                              - justify-self: center
                              - font-size: 12px
                            icon:
                              - width: 80%
                              - transition: color 1.5s ease
                              - color: "[[[\n  if (variables.is_heating_up) {\n  \
                                  \  return 'rgb(208, 66, 93)'\n  } else if (variables.is_cooling_down)\
                                  \ {\n    return 'rgb(77, 113, 206)'\n  } else {\n\
                                  \    return 'grey'\n  }\n]]]\n"
                            state:
                              - justify-self: center
                              - font-size: 12px
                            custom_fields:
                              target:
                                - justify-self: left
                                - font-size: 10px
                                - display: "[[[\n  return (variables.is_heating_up\
                                    \ || variables.is_cooling_down) ? '' : 'none';\n\
                                    ]]]\n"
                              target_icon:
                                - display: "[[[\n  return (variables.is_heating_up\
                                    \ || variables.is_cooling_down) ? '' : 'none';\n\
                                    ]]]\n"
                        - type: custom:button-card
                          entity: sensor.bambu_p1s_bed_temperature
                          show_name: false
                          show_state: false
                          icon: mdi:radiator
                          tap_action:
                            action: navigate
                            navigation_path: '#temperature-bed'
                          variables:
                            target_temp: "[[[\n  let target = states['sensor.bambu_p1s_target_bed_temperature']?.state\n\
                              \  return (target ? `<span>${target}</span><span style=\"\
                              font-size: 8px;\"> °C</span>` : '')\n]]]\n"
                            is_heating_up: "[[[\n  return parseInt(states['sensor.bambu_p1s_bed_temperature'].state)\
                              \ < parseInt(states['sensor.bambu_p1s_target_bed_temperature'].state)\n\
                              ]]]\n"
                            is_cooling_down: "[[[\n  return parseInt(states['sensor.bambu_p1s_target_bed_temperature'].state)\
                              \ !== 0\n    && (parseInt(states['sensor.bambu_p1s_bed_temperature'].state)\
                              \ - 3) > parseInt(states['sensor.bambu_p1s_target_bed_temperature'].state)\n\
                              ]]]\n"
                          custom_fields:
                            target: '[[[ return variables.target_temp ]]]'
                            target_icon: "[[[\n  return '<ha-icon icon=\"mdi:target\"\
                              \ style=\"width: 10px;\"></ha-icon>'\n]]]\n"
                            temp: "[[[\n  return entity.state === 'unavailable' ?\
                              \ 'Off' : `<span>${entity.state}</span><span style=\"\
                              font-size: 10px;\"> °C</span>`\n]]]\n"
                          styles:
                            card:
                              - width: 75px
                              - height: 35px
                              - border-top-left-radius: 24px
                              - border-bottom-left-radius: 24px
                              - border-top-right-radius: 24px
                              - border-bottom-right-radius: 24px
                              - transition: background-color 1.5s ease, color 1.5s
                                  ease
                              - background-color: "[[[\n  if (variables.is_heating_up)\
                                  \ {\n    return 'rgb(88, 33, 41)'\n  } else if (variables.is_cooling_down)\
                                  \ {\n    return 'rgb(24, 34, 54)'\n  } else {\n\
                                  \    return 'rgb(28, 28, 28)'\n  }\n]]]\n"
                              - color: "[[[\n  if (variables.is_heating_up) {\n  \
                                  \  return 'rgb(208, 66, 93)'\n  } else if (variables.is_cooling_down)\
                                  \ {\n    return 'rgb(77, 113, 206)'\n  } else {\n\
                                  \    return 'grey'\n  }\n]]]\n"
                            grid:
                              - grid-template-areas: "[[[\n  if (variables.is_heating_up\
                                  \ || variables.is_cooling_down) {\n    return '\"\
                                  i i temp temp\" \"i i target_icon target\"'\n  }\
                                  \ else {\n    return '\"i temp\" \"i temp\"'\n \
                                  \ }\n]]]\n"
                              - grid-template-columns: auto
                              - grid-template-rows: auto
                            img_cell:
                              - align-self: center
                              - text-align: center
                              - margin-left: 7.5px
                            name:
                              - justify-self: center
                              - font-size: 12px
                            icon:
                              - width: 80%
                              - transition: color 1.5s ease
                              - color: "[[[\n  if (variables.is_heating_up) {\n  \
                                  \  return 'rgb(208, 66, 93)'\n  } else if (variables.is_cooling_down)\
                                  \ {\n    return 'rgb(77, 113, 206)'\n  } else {\n\
                                  \    return 'grey'\n  }\n]]]\n"
                            state:
                              - justify-self: center
                              - font-size: 12px
                            custom_fields:
                              target:
                                - justify-self: left
                                - font-size: 10px
                                - display: "[[[\n  return (variables.is_heating_up\
                                    \ || variables.is_cooling_down) ? '' : 'none';\n\
                                    ]]]\n"
                              target_icon:
                                - display: "[[[\n  return (variables.is_heating_up\
                                    \ || variables.is_cooling_down) ? '' : 'none';\n\
                                    ]]]\n"
                attributes:
                  icon: mdi:camera-document
                  label: Camera
              - card:
                  type: picture-entity
                  entity: image.bambu_p1s_cover_image
                  camera_view: live
                  show_name: false
                  show_state: false
                attributes:
                  icon: mdi:cube-outline
                  label: Model
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: sensor.bambu_p1s_print_status
                    state: running
                  - condition: state
                    entity: sensor.bambu_p1s_print_status
                    state: pause
            card:
              type: horizontal-stack
              cards:
                - type: conditional
                  conditions:
                    - condition: state
                      entity: sensor.bambu_p1s_print_status
                      state: running
                  card:
                    type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_print_status
                    icon: mdi:pause
                    icon_color: yellow
                    layout: vertical
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      service_data:
                        entity_id: button.bambu_p1s_pause_printing
                    card_mod:
                      style:
                        .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                          \ none;\n  --ha-card-border-width: 0;\n  --icon-size: 48px;\n\
                          \  margin-top: 10px;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  box-shadow: 0 0 1px 15px\
                          \ rgba(var(--rgb-yellow), 0.1) !important;\n}\n"
                - type: conditional
                  conditions:
                    - condition: state
                      entity: sensor.bambu_p1s_print_status
                      state: pause
                  card:
                    type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_print_status
                    icon: mdi:play
                    icon_color: green
                    layout: vertical
                    tap_action:
                      action: none
                    hold_action:
                      action: call-service
                      service: button.press
                      data: {}
                      target:
                        entity_id: button.bambu_p1s_resume_printing
                    card_mod:
                      style:
                        .: "ha-card {\n    --ha-card-background: none;\n    --ha-card-box-shadow:\
                          \ none;\n    --ha-card-border-width: 0;\n    --icon-size:\
                          \ 48px;\n    margin-top: 10px;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  box-shadow: 0 0 1px 15px\
                          \ rgba(var(--rgb-green), 0.1) !important;\n}\n"
                - type: conditional
                  conditions:
                    - condition: or
                      conditions:
                        - condition: state
                          entity: sensor.bambu_p1s_print_status
                          state: running
                        - condition: state
                          entity: sensor.bambu_p1s_print_status
                          state: pause
                  card:
                    type: custom:mushroom-template-card
                    entity: sensor.bambu_p1s_print_status
                    icon: mdi:stop
                    icon_color: red
                    layout: vertical
                    tap_action:
                      action: call-service
                      confirmation:
                        text: Are you sure you want to cancel this print?
                      service: button.press
                      target:
                        entity_id: button.bambu_p1s_stop_printing
                    card_mod:
                      style:
                        .: "ha-card {\n    --ha-card-background: none;\n    --ha-card-box-shadow:\
                          \ none;\n    --ha-card-border-width: 0;\n    --icon-size:\
                          \ 48px;\n    margin-top: 10px;\n}\n"
                        mushroom-shape-icon$: ".shape {\n  box-shadow: 0 0 1px 15px\
                          \ rgba(var(--rgb-red), 0.1) !important;\n}\n"
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-template-columns: 1fr 1fr 1fr . 1fr . 1fr
              grid-template-rows: auto
              grid-template-areas: '"part aux cham . speed . light"

                '
            cards:
              - type: custom:button-card
                view_layout:
                  grid-area: part
                template: badge
                entity: fan.bambu_p1s_cooling_fan
                name: Part
                icon: mdi:fan-off
                label: "[[[\n  let speed = entity.attributes.percentage;\n  return\
                  \ speed ? speed + '%' : 'Off';\n]]]\n"
                tap_action:
                  action: navigate
                  navigation_path: '#fans-part'
                variables:
                  color: "[[[\n  if (entity.state === 'on') return 'var(--green-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 'on'
                    icon: mdi:fan
                    styles:
                      icon:
                        - color: var(--green-color)
                        - animation: "[[[\n  return 'fan-on ' + (11 - (entity.attributes.percentage\
                            \ / 10)) + 's linear infinite';\n]]]\n"
                        - transition: animation-duration 1s ease-in-out
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                  \ fan-on {\n    from { transform: rotate(0deg); }\n    to { transform:\
                  \ rotate(360deg); }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                view_layout:
                  grid-area: aux
                template: badge
                entity: fan.bambu_p1s_aux_fan
                name: Aux
                icon: mdi:fan-off
                label: "[[[\n  let speed = entity.attributes.percentage;\n  return\
                  \ speed ? speed + '%' : 'Off';\n]]]\n"
                tap_action:
                  action: navigate
                  navigation_path: '#fans-aux'
                variables:
                  color: "[[[\n  if (entity.state === 'on') return 'var(--green-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 'on'
                    icon: mdi:fan
                    styles:
                      icon:
                        - color: var(--green-color)
                        - animation: "[[[\n  return 'fan-on ' + (11 - (entity.attributes.percentage\
                            \ / 10)) + 's linear infinite';\n]]]\n"
                        - transition: animation-duration 1s ease-in-out
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                  \ fan-on {\n    from { transform: rotate(0deg); }\n    to { transform:\
                  \ rotate(360deg); }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                view_layout:
                  grid-area: cham
                template: badge
                entity: fan.bambu_p1s_chamber_fan
                name: Cham
                icon: mdi:fan-off
                label: "[[[\n  let speed = entity.attributes.percentage;\n  return\
                  \ speed ? speed + '%' : 'Off';\n]]]\n"
                tap_action:
                  action: navigate
                  navigation_path: '#fans-chamber'
                variables:
                  color: "[[[\n  if (entity.state === 'on') return 'var(--green-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 'on'
                    icon: mdi:fan
                    styles:
                      icon:
                        - color: var(--green-color)
                        - animation: "[[[\n  return 'fan-on ' + (11 - (entity.attributes.percentage\
                            \ / 10)) + 's linear infinite';\n]]]\n"
                        - transition: animation-duration 1s ease-in-out
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  @keyframes\
                  \ fan-on {\n    from { transform: rotate(0deg); }\n    to { transform:\
                  \ rotate(360deg); }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                view_layout:
                  grid-area: speed
                template: badge
                entity: sensor.bambu_p1s_speed_profile
                name: Speed
                icon: mdi:gauge-empty
                label: "[[[\n  return entity.state === 'unavailable' ? 'Off' : helpers.localize(entity);\n\
                  ]]]\n"
                tap_action:
                  action: navigate
                  navigation_path: '#settings-speed'
                variables:
                  color: "[[[\n  if (entity.state === 'silent') return 'var(--blue-color)';\n\
                    \  else if (entity.state === 'standard') return 'var(--green-color)';\n\
                    \  else if (entity.state === 'sport') return 'var(--orange-color)';\n\
                    \  else if (entity.state === 'ludicrous') return 'var(--red-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: silent
                    icon: mdi:gauge-empty
                    styles:
                      icon:
                        - color: var(--blue-color)
                  - value: standard
                    icon: mdi:gauge-low
                    styles:
                      icon:
                        - color: var(--green-color)
                  - value: sport
                    icon: mdi:gauge
                    styles:
                      icon:
                        - color: var(--orange-color)
                  - value: ludicrous
                    icon: mdi:gauge-full
                    styles:
                      icon:
                        - color: var(--red-color)
                  - value: unavailable
                    icon: mdi:gauge-empty
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
              - type: custom:button-card
                view_layout:
                  grid-area: light
                template: badge
                entity: light.bambu_p1s_chamber_light
                name: Light
                icon: mdi:led-strip-variant-off
                label: "[[[\n  return entity.state === 'unavailable' ? 'Off' : helpers.localize(entity);\n\
                  ]]]\n"
                tap_action:
                  action: call-service
                  service: light.toggle
                  target:
                    entity_id: light.bambu_p1s_chamber_light
                variables:
                  color: "[[[\n  if (entity.state === 'on') return 'var(--amber-color)';\n\
                    \  else return 'var(--grey-color)';\n]]]\n"
                state:
                  - value: 'on'
                    icon: mdi:led-strip-variant
                    styles:
                      icon:
                        - color: var(--amber-color)
                extra_styles: "[[[\n  return `\n  @media (hover: hover) {\n    ha-card:hover\
                  \ {\n      background: color-mix(in srgb, ${variables.color} 4%,\
                  \ var(--card-background-color) 100%);\n    }\n  }\n  `\n  ]]]\n"
          - type: custom:bubble-card
            card_type: button
            button_type: state
            card_layout: large-2-rows
            name: Bambu P1S
            entity: sensor.bambu_p1s_task_name
            show_icon: false
            show_attribute: true
            show_state: true
            button_action:
              tap_action:
                action: none
            sub_button:
              - entity: sensor.bambu_p1s_print_progress
                icon: mdi:progress-clock
                show_background: false
                show_state: true
              - entity: sensor.bambu_p1s_current_stage
                show_background: false
                show_state: true
              - entity: sensor.bambu_p1s_current_layer
                icon: mdi:layers
                show_state: true
                show_background: false
              - entity: sensor.bambu_p1s_remaining_time
                icon: mdi:clock-end
                show_state: false
                show_background: false
                tap_action:
                  action: call-service
                  service: input_boolean.toggle
                  target:
                    entity_id: input_boolean.bambu_p1s_end_time_switch
            styles: "${card.querySelector('.bubble-name').innerText =\n  hass.states['sensor.bambu_p1s_status']?.state\
              \ !== 'offline'\n  ? hass.states['sensor.bambu_p1s_task_name']?.state\
              \ : 'Bambu P1S'}\n\n${card.querySelector('.bubble-state').innerText\
              \ =\n  hass.states['sensor.bambu_p1s_current_stage']?.state === 'changing_filament'\n\
              \  ? 'Changing Filament' : ''}\n\n${card.querySelector('.bubble-sub-button-3\
              \ .bubble-sub-button-name-container').innerText =\n  hass.states['sensor.bambu_p1s_status']?.state\
              \ !== 'offline'\n  ? hass.states['sensor.bambu_p1s_current_layer']?.state\
              \ + \" / \"\n  + hass.states['sensor.bambu_p1s_total_layer_count']?.state\
              \ :\n  'Off'}\n\n.bubble-sub-button-4 {\n  display: ${hass.states['sensor.bambu_p1s_stage']?.state\
              \ === 'idle' ? 'none' : ''} !important;\n}\n"
            card_mod:
              style: "{% set progress = states('sensor.bambu_p1s_print_progress')\
                \ | float / 100 %}\n\n{% set pct_diff = 1.0 - progress %} {% set r\
                \ = min(255, pct_diff * 2 *\n255) | round(0) %} {% set g = min(255,\
                \ progress * 2 * 255) | round(0) %}\n{% set font_color = (r, g, 0,\
                \ 1) %} {% set bg_color = (r, g, 0, 0.4) %}\n\n.bubble-button-background::before\
                \ {\n  content: \"\";\n  height: 75px;\n  width: {{ progress * 100\
                \ }}%;\n  background-color: rgba{{ bg_color }};\n}\n\n{% set toggle_state\
                \ = states('input_boolean.bambu_p1s_end_time_switch') %}\n\n{% set\
                \ end_time = states('sensor.bambu_p1s_end_time') | as_timestamp %}\n\
                {% set time_to_end = states('sensor.bambu_p1s_remaining_time') | int\
                \ %}\n{% set hours = (time_to_end / 60) | int %}\n{% set minutes =\
                \ (time_to_end % 60) %}\n\n.bubble-sub-button-4::before {\n  {% if\
                \ toggle_state == 'on' %}\n    {% if end_time | timestamp_custom('%Y-%m-%d')\
                \ == now().date() | string %}\n      content: \"{{ end_time | timestamp_custom('%H:%M')\
                \ }}\";\n    {% else %}\n      content: \"{{ end_time | timestamp_custom('%m/%d\
                \ %H:%M') }}\";\n    {% endif %}\n  {% else %}\n    content: \"{{\
                \ '{:01}h {:01}m'.format(hours, minutes) }}\";\n  {% endif %}\n  margin-left:\
                \ 3px;\n}\n"
      - type: grid
        cards:
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-template-columns: 20% 80%
              grid-template-rows: auto
              grid-template-areas: '"ext ams"'
            cards:
              - type: heading
                heading: EXT
                heading_style: subtitle
                badges:
                  - type: custom:mushroom-template-badge
              - type: heading
                heading: AMS
                heading_style: subtitle
                badges:
                  - type: custom:mushroom-template-badge
                    entity: sensor.bambu_p1s_ams_humidity_index
                    content: '{{ states(entity) }}'
                    icon: mdi:water-opacity
                    color: "{% if is_state(entity, \"1\") %}\n  green\n{% elif is_state(entity,\
                      \ \"2\") %}\n  light-green\n{% elif is_state(entity, \"3\")\
                      \ %}\n  yellow\n{% elif is_state(entity, \"4\") %}\n  orange\n\
                      {% elif is_state(entity, \"5\") %}\n  red\n{% else %}\n  grey\n\
                      {% endif %}"
                    tap_action:
                      action: more-info
          - type: custom:vertical-stack-in-card
            cards:
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 20% 80%
                  grid-template-rows: auto
                  grid-template-areas: '"ext ams"'
                cards:
                  - type: horizontal-stack
                    cards:
                      - type: custom:mushroom-template-card
                        entity: sensor.bambu_p1s_external_spool_external_spool
                        secondary: "{%- if is_state(entity, \"unknown\") -%}\n  -\n\
                          {%- else -%}\n  {{ state_translated(entity) }}\n{%- endif\
                          \ -%}"
                        multiline_secondary: true
                        icon: "{%- if is_state(entity, \"unknown\") -%}\n  mdi:help-circle\n\
                          {%- elif is_state(entity, \"Empty\") -%}\n  mdi:circle-outline\n\
                          {%- else -%}\n  mdi:circle-slice-8\n{%- endif -%}"
                        icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                          ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                          \ \"color\") }}\n{%- endif -%}"
                        layout: vertical
                        tap_action:
                          action: navigate
                          navigation_path: '#filament-external'
                        card_mod:
                          style:
                            .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                              \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                              \ 48px;\n  margin-top: 10px;\n}\n"
                            mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                              \ \"active\", true) %}\n  --shape-animation: ping 2s\
                              \ infinite;\n  {% elif states(config.entity) not in\
                              \ [\"Empty\", \"unknown\"] %}\n  box-shadow: 0 0 1px\
                              \ 15px rgba(111,111,111, 0.2) !important;\n  {% endif\
                              \ %}\n}\n@keyframes ping {\n  0% { box-shadow: 0 0 1px\
                              \ 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                              \ 0 0 1px 15px transparent; }\n}\n"
                  - type: horizontal-stack
                    cards:
                      - type: custom:mushroom-template-card
                        entity: sensor.bambu_p1s_ams_tray_1
                        secondary: "{%- if is_state(entity, \"unknown\") -%}\n  -\n\
                          {%- else -%}\n  {{ state_translated(entity) }}\n{%- endif\
                          \ -%}"
                        multiline_secondary: true
                        icon: "{%- if is_state(entity, \"unknown\") -%}\n  mdi:help-circle\n\
                          {%- elif is_state(entity, \"Empty\") -%}\n  mdi:circle-outline\n\
                          {%- else -%}\n  mdi:circle-slice-8\n{%- endif -%}"
                        icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                          ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                          \ \"color\") }}\n{%- endif -%}"
                        layout: vertical
                        tap_action:
                          action: navigate
                          navigation_path: '#filament-ams-1-slot-1'
                        card_mod:
                          style:
                            .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                              \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                              \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                              \ and states(config.entity) not in [\"Empty\", \"unknown\"\
                              ] %}\nha-card:after {\n  content: \"{{ state_attr(config.entity,\
                              \ \"remain\") }}%\";\n  position: absolute;\n  font-weight:\
                              \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size:\
                              \ 12px;\n}\n{% endif %}\n"
                            mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                              \ \"active\", true) %}\n  --shape-animation: ping 2s\
                              \ infinite;\n  {% elif states(config.entity) not in\
                              \ [\"Empty\", \"unknown\"] %}\n  box-shadow: 0 0 1px\
                              \ 15px rgba(111,111,111, 0.2) !important;\n  {% endif\
                              \ %}\n}\n@keyframes ping {\n  0% { box-shadow: 0 0 1px\
                              \ 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                              \ 0 0 1px 15px transparent; }\n}\n"
                      - type: custom:mushroom-template-card
                        entity: sensor.bambu_p1s_ams_tray_2
                        secondary: "{%- if is_state(entity, \"unknown\") -%}\n  -\n\
                          {%- else -%}\n  {{ state_translated(entity) }}\n{%- endif\
                          \ -%}"
                        multiline_secondary: true
                        icon: "{%- if is_state(entity, \"unknown\") -%}\n  mdi:help-circle\n\
                          {%- elif is_state(entity, \"Empty\") -%}\n  mdi:circle-outline\n\
                          {%- else -%}\n  mdi:circle-slice-8\n{%- endif -%}"
                        icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                          ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                          \ \"color\") }}\n{%- endif -%}"
                        layout: vertical
                        tap_action:
                          action: navigate
                          navigation_path: '#filament-ams-1-slot-2'
                        card_mod:
                          style:
                            .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                              \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                              \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                              \ and states(config.entity) not in [\"Empty\", \"unknown\"\
                              ] %}\nha-card:after {\n  content: \"{{ state_attr(config.entity,\
                              \ \"remain\") }}%\";\n  position: absolute;\n  font-weight:\
                              \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size:\
                              \ 12px;\n}\n{% endif %}\n"
                            mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                              \ \"active\", true) %}\n  --shape-animation: ping 2s\
                              \ infinite;\n  {% elif states(config.entity) not in\
                              \ [\"Empty\", \"unknown\"] %}\n  box-shadow: 0 0 1px\
                              \ 15px rgba(111,111,111, 0.2) !important;\n  {% endif\
                              \ %}\n}\n@keyframes ping {\n  0% { box-shadow: 0 0 1px\
                              \ 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                              \ 0 0 1px 15px transparent; }\n}\n"
                      - type: custom:mushroom-template-card
                        entity: sensor.bambu_p1s_ams_tray_3
                        secondary: "{%- if is_state(entity, \"unknown\") -%}\n  -\n\
                          {%- else -%}\n  {{ state_translated(entity) }}\n{%- endif\
                          \ -%}"
                        multiline_secondary: true
                        icon: "{%- if is_state(entity, \"unknown\") -%}\n  mdi:help-circle\n\
                          {%- elif is_state(entity, \"Empty\") -%}\n  mdi:circle-outline\n\
                          {%- else -%}\n  mdi:circle-slice-8\n{%- endif -%}"
                        icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                          ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                          \ \"color\") }}\n{%- endif -%}"
                        layout: vertical
                        tap_action:
                          action: navigate
                          navigation_path: '#filament-ams-1-slot-3'
                        card_mod:
                          style:
                            .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                              \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                              \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                              \ and states(config.entity) not in [\"Empty\", \"unknown\"\
                              ] %}\nha-card:after {\n  content: \"{{ state_attr(config.entity,\
                              \ \"remain\") }}%\";\n  position: absolute;\n  font-weight:\
                              \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size:\
                              \ 12px;\n}\n{% endif %}\n"
                            mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                              \ \"active\", true) %}\n  --shape-animation: ping 2s\
                              \ infinite;\n  {% elif states(config.entity) not in\
                              \ [\"Empty\", \"unknown\"] %}\n  box-shadow: 0 0 1px\
                              \ 15px rgba(111,111,111, 0.2) !important;\n  {% endif\
                              \ %}\n}\n@keyframes ping {\n  0% { box-shadow: 0 0 1px\
                              \ 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                              \ 0 0 1px 15px transparent; }\n}\n"
                      - type: custom:mushroom-template-card
                        entity: sensor.bambu_p1s_ams_tray_4
                        secondary: "{%- if is_state(entity, \"unknown\") -%}\n  -\n\
                          {%- else -%}\n  {{ state_translated(entity) }}\n{%- endif\
                          \ -%}"
                        multiline_secondary: true
                        icon: "{%- if is_state(entity, \"unknown\") -%}\n  mdi:help-circle\n\
                          {%- elif is_state(entity, \"Empty\") -%}\n  mdi:circle-outline\n\
                          {%- else -%}\n  mdi:circle-slice-8\n{%- endif -%}"
                        layout: vertical
                        tap_action:
                          action: navigate
                          navigation_path: '#filament-ams-1-slot-4'
                        icon_color: "{%- if states(entity) in [\"Empty\", \"unknown\"\
                          ] -%}\n  disabled\n{%- else -%}\n  {{ state_attr(entity,\
                          \ \"color\") }}\n{%- endif -%}"
                        card_mod:
                          style:
                            .: "ha-card {\n  --ha-card-background: none;\n  --ha-card-box-shadow:\
                              \ none;\n  --ha-card-border-width: 0;\n  --icon-size:\
                              \ 48px;\n  margin-top: 10px;\n}\n{% if has_value(config.entity)\
                              \ and states(config.entity) not in [\"Empty\", \"unknown\"\
                              ] %}\nha-card:after {\n  content: \"{{ state_attr(config.entity,\
                              \ \"remain\") }}%\";\n  position: absolute;\n  font-weight:\
                              \ bolder;\n  top: -2px;\n  right: 2px;\n  font-size:\
                              \ 12px;\n}\n{% endif %}\n"
                            mushroom-shape-icon$: ".shape {\n  {% if is_state_attr(config.entity,\
                              \ \"active\", true) %}\n  --shape-animation: ping 2s\
                              \ infinite;\n  {% elif states(config.entity) not in\
                              \ [\"Empty\", \"unknown\"] %}\n  box-shadow: 0 0 1px\
                              \ 15px rgba(111,111,111, 0.2) !important;\n  {% endif\
                              \ %}\n}\n@keyframes ping {\n  0% { box-shadow: 0 0 1px\
                              \ 15px rgba(255,254,249, 0.25); }\n  100% { box-shadow:\
                              \ 0 0 1px 15px transparent; }\n}\n"
            card_mod:
              style: "ha-card {\n  --ha-card-border-width: 0;\n}\n"
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#printer-info'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 10vh
              - type: custom:bubble-card
                card_type: separator
                name: General Info
              - type: custom:button-card
                show_state: false
                show_label: false
                tap_action:
                  action: none
                variables:
                  value_font_color: grey
                custom_fields:
                  printer_image: "[[[\n  return `\n    <div style=\"display: flex;\
                    \ justify-content: flex-end;\">\n      <img\n        src=\"/local/logos/p1s.png\"\
                    \n        style=\"width: 100px;\"\n      />\n    </div>\n  `;\n\
                    ]]]\n"
                  printer_serial: "[[[\n  let state = states['sensor.bambu_p1s_serial']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >Printer Serial</span>\n      <span style=\"overflow: show; color:\
                    \ ${variables.value_font_color}\">${state === 'unavailable' ?\
                    \ 'Unknown' : state}</span>\n    </div>\n  `;\n]]]\n"
                  ams_serial: "[[[\n  let state = states['sensor.bambu_p1s_ams_serial']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >AMS Serial</span>\n      <span style=\"display: block; color:\
                    \ ${variables.value_font_color}\">${state === 'unavailable' ?\
                    \ 'Unknown' : state}</span>\n    </div>\n  `;\n]]]\n"
                  printer_fw_v: "[[[\n  let state = states['sensor.bambu_p1s_sw_version']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >Printer Firmware</span>\n      <span style=\"display: block;\
                    \ color: ${variables.value_font_color}\">${state === 'unavailable'\
                    \ ? 'Unknown' : state}</span>\n    </div>\n  `;\n]]]\n"
                  ams_fw_v: "[[[\n  let state = states['sensor.bambu_p1s_ams_sw_version']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >AMS Firmware</span>\n      <span style=\"display: block; color:\
                    \ ${variables.value_font_color}\">${state === 'unavailable' ?\
                    \ 'Unknown' : state}</span>\n    </div>\n  `;\n]]]\n"
                  nozzle_type: "[[[\n  const titleCase = (s) => s.replace(/^_*(.)|_+(.)/g,\
                    \ (s, c, d) => c ? c.toUpperCase() : ' ' + d.toUpperCase())\n\
                    \  let state = states['sensor.bambu_p1s_nozzle_type']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >Nozzle Type</span>\n      <span style=\"display: block; color:\
                    \ ${variables.value_font_color}\">${state === 'unavailable' ?\
                    \ 'Unknown' : titleCase(state)}</span>\n    </div>\n  `;\n]]]\n"
                  nozzle_diameter: "[[[\n  let state = states['sensor.bambu_p1s_nozzle_size']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >Nozzle Diameter</span>\n      <span style=\"display: block; color:\
                    \ ${variables.value_font_color}\">${state === 'unavailable' ?\
                    \ 'Unknown' : state + 'mm'}</span>\n    </div>\n  `;\n]]]\n"
                  wifi_strength: "[[[\n  let state = states['sensor.bambu_p1s_wi_fi_signal']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >WiFi Signal</span>\n      <span style=\"display: block; color:\
                    \ ${variables.value_font_color}\">${state === 'unavailable' ?\
                    \ 'Unknown' : state + 'dBm'}</span>\n    </div>\n  `;\n]]]\n"
                  power_used: "[[[\n  let state = states['sensor.bambu_p1s_energy']?.state;\n\
                    \  return `\n    <div style=\"text-align: center; font-size: 12px;\
                    \ justify-self: center;\">\n      <span style=\"display: block;\"\
                    >Power Used</span>\n      <span style=\"display: block; color:\
                    \ ${variables.value_font_color}\">${state === 'unavailable' ?\
                    \ 'Unknown' : state + 'kWh'}</span>\n    </div>\n  `;\n]]]\n"
                styles:
                  card:
                    - background-color: color-mix(in srgb, var(--disabled-color) 12%,
                        var(--card-background-color) 100%)
                    - padding-left: 10px
                    - padding-right: 10px
                  grid:
                    - grid-template-areas: '"nozzle_type . nozzle_diameter . printer_image"

                        "wifi_strength . power_used . printer_image"

                        "printer_fw_v . ams_fw_v . printer_image"

                        "printer_serial . ams_serial . printer_image"

                        '
                    - grid-template-columns: auto 1fr auto 1fr 100px
                    - grid-template-rows: auto
                    - text-align: start
                  custom_fields:
                    printer_image:
                      - justify-self: right
                      - width: 150px
                      - height: 150px
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#hms'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 10vh
              - type: custom:bubble-card
                card_type: separator
                name: Health Management System
              - type: markdown
                card_mod:
                  style: "ha-card {\n  --ha-card-background: color-mix(in srgb, var(--disabled-color)\
                    \ 12%, var(--card-background-color) 100%);\n}\n"
                content: "{%- set entity_id = \"binary_sensor.bambu_p1s_hms_errors\"\
                  \ -%}\n{%- set errors = namespace(message=[],severity=[],url=[])\
                  \ -%}\n{%- for attribute, value in states[entity_id].attributes.items()\
                  \ -%}\n  {%- if attribute.split('-') | count > 1 -%}\n    {%- set\
                  \ id, type = attribute.split('-') -%}\n    {%- if type | count >\
                  \ 1 -%}\n      {%- if type == \"Error\" -%}\n        {% set errors.message\
                  \ = dict(errors.message, **{id: value}) %}\n      {%- endif -%}\n\
                  \      {%- if type == \"Severity\" -%}\n        {% set errors.severity\
                  \ = dict(errors.severity, **{id: value}) %}\n      {%- endif -%}\n\
                  \      {%- if type == \"Wiki\" -%}\n        {% set errors.url =\
                  \ dict(errors.url, **{id: value}) %}\n      {%- endif -%}\n    {%-\
                  \ endif -%}\n  {%- endif -%}\n{%- endfor -%}\n{%- set levels = {\n\
                  \  \"fatal\": \"mdi:alert-decagram\",\n  \"serious\": \"mdi:alert-circle\"\
                  ,\n  \"common\": \"mdi:minus-circle\",\n  \"info\": \"mdi:information\"\
                  ,\n  \"unknown\": \"mdi:help-circle\"\n} -%}\n{%- if errors.message|count\
                  \ == 0 -%}\n  No Problems\n{%- endif -%}\n{% for id in errors.message\
                  \ %}\n<ha-icon icon=\"{{ levels[errors.severity[id]] }}\"></ha-icon>\
                  \ {{ errors.message[id] }}\n<a href=\"{{ errors.url[id] }}\">Support</a>\n\
                  {% endfor %}"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temperature-nozzle'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 10vh
              - type: custom:bubble-card
                card_type: separator
                name: Nozzle Temperature
              - type: custom:bubble-card
                card_type: button
                button_type: slider
                name: Nozzle
                entity: sensor.bambu_p1s_nozzle_temperature
                show_state: true
                sub_button:
                  - name: Target
                    icon: mdi:printer-3d-nozzle-heat
                    show_background: false
                    show_name: false
                    show_state: true
                    entity: sensor.bambu_p1s_nozzle_target_temperature
                    tap_action:
                      action: none
                  - name: Decrease
                    icon: mdi:minus
                    show_name: false
                    show_icon: true
                    show_background: false
                    tap_action:
                      action: call-service
                      service: number.set_value
                      service_data:
                        entity_id: number.bambu_p1s_set_nozzle_temp
                        value: '[[[ return 220; ]]]'
                      target: {}
                  - name: Increase
                    icon: mdi:plus
                    show_name: false
                    show_icon: true
                    show_background: false
                    tap_action:
                      action: call-service
                      service: script.increment_3d_printer_nozzle_temp
                      target: {}
                styles: ".bubble-name, .bubble-state {\n  font-weight: bold;\n}\n\
                  .bubble-icon {\n  color: var(--red-color) !important;\n}\n.bubble-range-fill\
                  \ {\n  background: rgba(200, 25, 25, .5) !important;\n}\n"
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 1fr auto 1fr auto 1fr
                  grid-template-rows: auto
                  grid-template-areas: '". off . changing ."

                    '
                cards:
                  - type: custom:button-card
                    view_layout:
                      grid-area: 'off'
                    name: 'Off'
                    show_state: false
                    icon: mdi:printer-3d-nozzle-off
                    tap_action:
                      action: call-service
                      service: number.set_value
                      data:
                        value: '0'
                      target:
                        entity_id: number.bambu_p1s_set_nozzle_temp
                    custom_fields:
                      temp: 0
                    styles:
                      card:
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                        - color: grey
                        - padding: 5px
                        - width: 75px
                      grid:
                        - grid-template-areas: '"i n" "i temp"'
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                      icon:
                        - width: 20px
                        - color: grey
                      state:
                        - justify-self: center
                        - font-size: 12px
                      custom_fields:
                        temp:
                          - justify-self: left
                          - font-size: 10px
                  - type: custom:button-card
                    view_layout:
                      grid-area: changing
                    name: Changing
                    show_state: false
                    icon: mdi:circle-slice-6
                    tap_action:
                      action: call-service
                      service: number.set_value
                      data:
                        value: '250'
                      target:
                        entity_id: number.bambu_p1s_set_nozzle_temp
                    custom_fields:
                      temp: 250
                    styles:
                      card:
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                        - color: grey
                        - padding: 5px
                        - width: 100px
                      grid:
                        - grid-template-areas: '"i n" "i temp"'
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                      icon:
                        - width: 20px
                        - color: grey
                      custom_fields:
                        temp:
                          - justify-self: left
                          - font-size: 10px
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  grid-template-columns: 1fr auto 1fr auto 1fr auto 1fr
                  grid-template-rows: auto
                  grid-template-areas: '". pla . tpu . abs ."

                    '
                cards:
                  - type: custom:button-card
                    view_layout:
                      grid-area: pla
                    name: PLA
                    show_state: false
                    icon: mdi:thermometer-low
                    tap_action:
                      action: call-service
                      service: number.set_value
                      data:
                        value: '220'
                      target:
                        entity_id: number.bambu_p1s_set_nozzle_temp
                    custom_fields:
                      temp: 220
                    styles:
                      card:
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                        - color: grey
                        - padding: 5px
                        - width: 100px
                      grid:
                        - grid-template-areas: '"i n" "i temp"'
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                      icon:
                        - width: 20px
                        - color: grey
                      state:
                        - justify-self: center
                        - font-size: 12px
                      custom_fields:
                        temp:
                          - justify-self: left
                          - font-size: 10px
                  - type: custom:button-card
                    view_layout:
                      grid-area: tpu
                    name: TPU/PETG
                    show_state: false
                    icon: mdi:thermometer
                    tap_action:
                      action: call-service
                      service: number.set_value
                      data:
                        value: '250'
                      target:
                        entity_id: number.bambu_p1s_set_nozzle_temp
                    custom_fields:
                      temp: 250
                    styles:
                      card:
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                        - color: grey
                        - padding: 5px
                        - width: 100px
                      grid:
                        - grid-template-areas: '"i n" "i temp"'
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                      icon:
                        - width: 20px
                        - color: grey
                      state:
                        - justify-self: center
                        - font-size: 12px
                      custom_fields:
                        temp:
                          - justify-self: left
                          - font-size: 10px
                  - type: custom:button-card
                    view_layout:
                      grid-area: abs
                    name: ABS/ASA
                    show_state: false
                    icon: mdi:thermometer-high
                    tap_action:
                      action: call-service
                      service: number.set_value
                      data:
                        value: '275'
                      target:
                        entity_id: number.bambu_p1s_set_nozzle_temp
                    custom_fields:
                      temp: 275
                    styles:
                      card:
                        - border-top-left-radius: 24px
                        - border-bottom-left-radius: 24px
                        - border-top-right-radius: 24px
                        - border-bottom-right-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                        - color: grey
                        - padding: 5px
                        - width: 100px
                      grid:
                        - grid-template-areas: '"i n" "i temp"'
                        - grid-template-columns: auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                      icon:
                        - width: 20px
                        - color: grey
                      state:
                        - justify-self: center
                        - font-size: 12px
                      custom_fields:
                        temp:
                          - justify-self: left
                          - font-size: 10px
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.bambu_p1s_nozzle_temperature
                  - entity: sensor.bambu_p1s_nozzle_target_temperature
                    color: var(--red-color)
                    show_state: false
                    show_legend: false
                    show_fill: false
                name: Nozzle Temperature
                icon: mdi:printer-3d-nozzle
                hours_to_show: 12
                points_per_hour: 60
                lower_bound: 0
                aggregate_func: max
                font_size_header: 12
                font_size: 70
                line_width: 2
                smoothing: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temperature-bed'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 10vh
              - type: custom:bubble-card
                card_type: separator
                name: Temperatures
              - type: custom:bubble-card
                card_type: button
                button_type: slider
                name: Bed
                entity: sensor.bambu_p1s_bed_temperature
                show_state: true
                sub_button:
                  - name: Target
                    icon: mdi:target
                    show_background: false
                    show_name: false
                    show_state: true
                    entity: sensor.bambu_p1s_target_bed_temperature
                    tap_action:
                      action: none
                  - name: Decrease
                    icon: mdi:minus
                    show_name: false
                    show_icon: true
                    show_background: false
                    tap_action:
                      action: call-service
                      service: script.decrement_3d_printer_bed_temp
                  - name: Increase
                    icon: mdi:plus
                    show_name: false
                    show_icon: true
                    show_background: false
                    tap_action:
                      action: call-service
                      service: script.increment_3d_printer_bed_temp
                styles: ".bubble-name, .bubble-state {\n  font-weight: bold;\n}\n\
                  .bubble-range-fill {\n  background: rgba(200, 25, 25, .5) !important;\n\
                  }\n.bubble-sub-button-1 {\n  display: ${hass.states['sensor.bambu_p1s_target_bed_temperature'].state\
                  \ !== hass.states['sensor.bambu_p1s_bed_temperature'].state ? ''\
                  \ : 'none'} !important;\n}\n"
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.bambu_p1s_bed_temperature
                  - entity: sensor.bambu_p1s_target_bed_temperature
                    color: var(--red-color)
                    show_state: false
                    show_legend: false
                    show_fill: false
                name: Bed Temperature
                icon: mdi:radiator
                hours_to_show: 12
                points_per_hour: 60
                lower_bound: 0
                aggregate_func: max
                font_size_header: 12
                font_size: 70
                line_width: 2
                smoothing: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#fans-part'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 70vh
              - type: custom:bubble-card
                card_type: button
                button_type: slider
                entity: fan.bambu_p1s_cooling_fan
                show_name: true
                name: Part Cooling Fan
                show_attribute: true
                attribute: percentage
                tap_action:
                  action: call-service
                  service: fan.turn_off
                  target:
                    entity_id: fan.bambu_p1s_cooling_fan
                styles: ".bubble-icon {\n  color: ${hass.states['fan.bambu_p1s_cooling_fan'].state\
                  \ === 'on' ? 'rgb(78, 171, 80)' : 'grey'} !important;\n}\n.bubble-range-fill\
                  \ {\n  background: var(--green-color) !important;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#fans-aux'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 70vh
              - type: custom:bubble-card
                card_type: button
                button_type: slider
                entity: fan.bambu_p1s_aux_fan
                show_name: true
                name: Auxiliary Cooling Fan
                show_attribute: true
                attribute: percentage
                tap_action:
                  action: call-service
                  service: fan.turn_off
                  target:
                    entity_id: fan.bambu_p1s_aux_fan
                styles: ".bubble-icon {\n  color: ${hass.states['fan.bambu_p1s_aux_fan'].state\
                  \ === 'on' ? 'rgb(78, 171, 80)' : 'grey'} !important;\n}\n.bubble-range-fill\
                  \ {\n  background: var(--green-color) !important;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#fans-chamber'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 70vh
              - type: custom:bubble-card
                card_type: button
                button_type: slider
                entity: fan.bambu_p1s_chamber_fan
                show_name: true
                name: Chamber Fan
                show_attribute: true
                attribute: percentage
                tap_action:
                  action: call-service
                  service: fan.turn_off
                  target:
                    entity_id: fan.bambu_p1s_chamber_fan
                styles: ".bubble-icon {\n  color: ${hass.states['fan.bambu_p1s_chamber_fan'].state\
                  \ === 'on' ? 'rgb(78, 171, 80)' : 'grey'} !important;\n}\n.bubble-range-fill\
                  \ {\n  background: var(--green-color) !important;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#settings-speed'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 70vh
              - type: custom:bubble-card
                card_type: separator
                name: Speed
                sub_button:
                  - name: Decrease
                    icon: mdi:minus
                    entity: sensor.bambu_p1s_speed_percent
                    show_background: false
                    tap_action:
                      action: call-service
                      service: script.decrement_3d_printer_speed
                      target: {}
                  - name: Speed %
                    icon: mdi:gauge
                    entity: number.bambu_p1s_set_speed_percent
                    show_background: false
                    show_name: false
                    show_state: true
                    show_icon: false
                    tap_action:
                      action: none
                  - name: Increase
                    icon: mdi:plus
                    entity: sensor.bambu_p1s_speed_percent
                    show_background: false
                    tap_action:
                      action: call-service
                      service: script.increment_3d_printer_speed
                      target: {}
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    entity: sensor.bambu_p1s_speed_profile
                    name: Silent
                    show_state: false
                    icon: mdi:gauge-empty
                    tap_action:
                      action: navigate
                      navigation_path: '#settings-speed'
                    state:
                      - value: silent
                        styles:
                          card:
                            - background-color: var(--state-active-color)
                          name:
                            - color: var(--black-color)
                          icon:
                            - color: var(--black-color)
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                      grid:
                        - grid-template-areas: '"i n"'
                        - grid-template-columns: auto auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                        - color: var(--grey-color)
                      icon:
                        - width: 24px
                        - color: var(--grey-color)
                  - type: custom:button-card
                    entity: sensor.bambu_p1s_speed_profile
                    name: Standard
                    show_state: false
                    icon: mdi:gauge-low
                    tap_action:
                      action: navigate
                      navigation_path: '#settings-speed'
                    state:
                      - value: standard
                        styles:
                          card:
                            - background-color: var(--state-active-color)
                          name:
                            - color: var(--black-color)
                          icon:
                            - color: var(--black-color)
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                      grid:
                        - grid-template-areas: '"i n"'
                        - grid-template-columns: auto auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                        - color: var(--grey-color)
                      icon:
                        - width: 24px
                        - color: var(--grey-color)
                  - type: custom:button-card
                    entity: sensor.bambu_p1s_speed_profile
                    name: Sport
                    show_state: false
                    icon: mdi:gauge
                    tap_action:
                      action: navigate
                      navigation_path: '#settings-speed'
                    state:
                      - value: sport
                        styles:
                          card:
                            - background-color: var(--state-active-color)
                          name:
                            - color: var(--black-color)
                          icon:
                            - color: var(--black-color)
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                      grid:
                        - grid-template-areas: '"i n"'
                        - grid-template-columns: auto auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                        - color: var(--grey-color)
                      icon:
                        - width: 24px
                        - color: var(--grey-color)
                  - type: custom:button-card
                    entity: sensor.bambu_p1s_speed_profile
                    name: Ludicrous
                    show_state: false
                    icon: mdi:gauge-full
                    tap_action:
                      action: navigate
                      navigation_path: '#settings-speed'
                    state:
                      - value: ludicrous
                        styles:
                          card:
                            - background-color: var(--state-active-color)
                          name:
                            - color: var(--black-color)
                          icon:
                            - color: var(--black-color)
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: color-mix(in srgb, var(--disabled-color)
                            12%, var(--card-background-color) 100%)
                      grid:
                        - grid-template-areas: '"i n"'
                        - grid-template-columns: auto auto
                        - grid-template-rows: auto
                      img_cell:
                        - align-self: center
                        - text-align: start
                      name:
                        - justify-self: left
                        - font-size: 12px
                        - color: var(--grey-color)
                      icon:
                        - width: 24px
                        - color: var(--grey-color)
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#filament-external'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 50vh
              - type: custom:bubble-card
                card_type: separator
                name: External Filament
                sub_button:
                  - entity: sensor.bambu_p1s_external_spool_external_spool
                    show_state: false
                    show_attribute: true
                    attribute: type
                    show_icon: false
                  - entity: sensor.bambu_p1s_external_spool_external_spool
                    show_state: false
                    show_attribute: true
                    attribute: tray_sub_brands
                    show_icon: false
                  - entity: sensor.bambu_p1s_external_spool_external_spool
                    show_state: false
                    icon: mdi:circle
                    show_icon: true
                styles: ".bubble-sub-button-1 {\n  display: ${hass.states['sensor.bambu_p1s_external_spool_external_spool'].attributes.tray_sub_brands\
                  \ == null ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 {\n\
                  \  color: ${hass.states['sensor.bambu_p1s_external_spool_external_spool'].attributes.color}\
                  \ !important;\n}\n"
              - type: custom:bubble-card
                card_type: button
                button_type: state
                name: Temperature
                entity: sensor.bambu_p1s_external_spool_external_spool
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_external_spool_external_spool
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_min
                    icon: mdi:thermometer-low
                    show_background: false
                  - entity: sensor.bambu_p1s_external_spool_external_spool
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_max
                    icon: mdi:thermometer-high
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: state
                name: Drying
                entity: sensor.bambu_p1s_external_spool_external_spool
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_external_spool_external_spool
                    show_state: false
                    show_attribute: true
                    attribute: drying_temp
                    icon: mdi:thermometer
                    show_background: false
                  - entity: sensor.bambu_p1s_external_spool_external_spool
                    show_state: false
                    show_attribute: true
                    attribute: drying_time
                    icon: mdi:clock
                    show_background: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#filament-ams-1-slot-1'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 50vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS Slot 1
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    show_attribute: true
                    attribute: type
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    show_attribute: true
                    attribute: tray_sub_brands
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    icon: mdi:circle
                    show_icon: true
                styles: ".bubble-sub-button-1 {\n  display: ${hass.states['sensor.bambu_p1s_ams_tray_1'].attributes.tray_sub_brands\
                  \ == null ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 {\n\
                  \  color: ${hass.states['sensor.bambu_p1s_ams_tray_1'].attributes.color}\
                  \ !important;\n}\n"
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Temperature
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_min
                    icon: mdi:thermometer-low
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_max
                    icon: mdi:thermometer-high
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Drying
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    show_attribute: true
                    attribute: drying_temp
                    icon: mdi:thermometer
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    show_attribute: true
                    attribute: drying_time
                    icon: mdi:clock
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Serial
                entity: sensor.bambu_p1s_ams_tray_1
                icon: phu:3d-filament
                show_icon: false
                show_state: false
                show_attribute: true
                attribute: tray_uuid
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_1
                    show_state: false
                    show_attribute: true
                    attribute: tray_uuid
                    show_icon: false
                    show_background: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#filament-ams-1-slot-2'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 50vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS Slot 2
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    show_attribute: true
                    attribute: type
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    show_attribute: true
                    attribute: tray_sub_brands
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    icon: mdi:circle
                    show_icon: true
                styles: ".bubble-sub-button-1 {\n  display: ${hass.states['sensor.bambu_p1s_ams_tray_2'].attributes.tray_sub_brands\
                  \ == null ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 {\n\
                  \  color: ${hass.states['sensor.bambu_p1s_ams_tray_2'].attributes.color}\
                  \ !important;\n}\n"
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Temperature
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_min
                    icon: mdi:thermometer-low
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_max
                    icon: mdi:thermometer-high
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Drying
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    show_attribute: true
                    attribute: drying_temp
                    icon: mdi:thermometer
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    show_attribute: true
                    attribute: drying_time
                    icon: mdi:clock
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Serial
                icon: phu:3d-filament
                show_icon: false
                show_state: false
                show_attribute: true
                attribute: tray_uuid
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_2
                    show_state: false
                    show_attribute: true
                    attribute: tray_uuid
                    show_icon: false
                    show_background: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#filament-ams-1-slot-3'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 50vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS Slot 3
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    show_attribute: true
                    attribute: type
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    show_attribute: true
                    attribute: tray_sub_brands
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    icon: mdi:circle
                    show_icon: true
                styles: ".bubble-sub-button-1 {\n  display: ${hass.states['sensor.bambu_p1s_ams_tray_3'].attributes.tray_sub_brands\
                  \ == null ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 {\n\
                  \  color: ${hass.states['sensor.bambu_p1s_ams_tray_3'].attributes.color}\
                  \ !important;\n}\n"
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Temperature
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_min
                    icon: mdi:thermometer-low
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_max
                    icon: mdi:thermometer-high
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Drying
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    show_attribute: true
                    attribute: drying_temp
                    icon: mdi:thermometer
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    show_attribute: true
                    attribute: drying_time
                    icon: mdi:clock
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Serial
                icon: phu:3d-filament
                show_icon: false
                show_state: false
                show_attribute: true
                attribute: tray_uuid
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_3
                    show_state: false
                    show_attribute: true
                    attribute: tray_uuid
                    show_icon: false
                    show_background: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#filament-ams-1-slot-4'
                show_header: false
                margin_top_desktop: 50vh
                width_desktop: 50vw
                margin_top_mobile: 50vh
              - type: custom:bubble-card
                card_type: separator
                name: AMS Slot 4
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    show_attribute: true
                    attribute: type
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    show_attribute: true
                    attribute: tray_sub_brands
                    show_icon: false
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    icon: mdi:circle
                    show_icon: true
                styles: ".bubble-sub-button-1 {\n  display: ${hass.states['sensor.bambu_p1s_ams_tray_4'].attributes.tray_sub_brands\
                  \ == null ? '' : 'none'} !important;\n}\n.bubble-sub-button-3 {\n\
                  \  color: ${hass.states['sensor.bambu_p1s_ams_tray_4'].attributes.color}\
                  \ !important;\n}\n"
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Temperature
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_min
                    icon: mdi:thermometer-low
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    show_attribute: true
                    attribute: nozzle_temp_max
                    icon: mdi:thermometer-high
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Drying
                icon: mdi:printer-3d-nozzle-heat
                show_attribute: false
                show_state: false
                show_icon: false
                button_action:
                  tap_action:
                    action: none
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    show_attribute: true
                    attribute: drying_temp
                    icon: mdi:thermometer
                    show_background: false
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    show_attribute: true
                    attribute: drying_time
                    icon: mdi:clock
                    show_background: false
              - type: custom:bubble-card
                card_type: button
                button_type: name
                name: Serial
                icon: phu:3d-filament
                show_icon: false
                show_state: false
                show_attribute: true
                attribute: tray_uuid
                sub_button:
                  - entity: sensor.bambu_p1s_ams_tray_4
                    show_state: false
                    show_attribute: true
                    attribute: tray_uuid
                    show_icon: false
                    show_background: false
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: binary_sensor.bambu_p1s_hms_errors
        label: Errors
        content: '{{ state_translated(entity) }}'
        icon: mdi:{{ iif(is_state(entity, "on"), "alert-circle", "check-circle") }}
        color: '{{ iif(is_state(entity, "on"), "red", "green") }}'
        tap_action:
          action: navigate
          navigation_path: '#hms'
        visibility:
          - condition: state
            entity: binary_sensor.bambu_p1s_hms_errors
            state: 'on'
  - title: Power
    path: power
    icon: mdi:power-plug
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            icon: mdi:power-plug
            heading: Power
            heading_style: title
        column_span: 3
      - type: grid
        cards:
          - type: heading
            icon: mdi:directions-fork
            heading: Energy Distribution
            heading_style: subtitle
          - type: custom:power-flow-card-plus
            entities:
              grid:
                entity: sensor.emporiavue_main_total_power
                secondary_info: {}
              fossil_fuel_percentage:
                entity: sensor.electricity_maps_grid_fossil_fuel_percentage
                color_value: false
                secondary_info:
                  entity: sensor.electricity_maps_grid_low_carbon_percentage
                  unit_of_measurement: '%'
                color_icon: true
              home:
                color_icon: true
                secondary_info: {}
              individual:
                - entity: sensor.emporiavue_sub_total_power
                  name: Sub Panel
                  secondary_info: {}
                - entity: sensor.emporiavue_main_a_c_power
                  name: A/C
                  icon: mdi:air-conditioner
                  display_zero_tolerance: 10
                  secondary_info: {}
                - entity: sensor.emporiavue_main_range_power
                  name: Range
                  icon: mdi:stove
                  display_zero_tolerance: 10
                - entity: sensor.emporiavue_sub_furnace_power
                  name: Furnace
                  icon: mdi:hvac
                  display_zero_tolerance: 10
            clickable_entities: true
            display_zero_lines:
              mode: show
              transparency: 50
              grey_color:
                - 189
                - 189
                - 189
            use_new_flow_rate_model: true
            w_decimals: 0
            kw_decimals: 1
            min_flow_rate: 0.75
            max_flow_rate: 6
            max_expected_power: 2000
            min_expected_power: 0.01
            watt_threshold: 1000
            transparency_zero_lines: 0
            dashboard_link: /energy
      - type: grid
        cards:
          - type: heading
            icon: mdi:currency-usd
            heading: Cost
            heading_style: subtitle
          - type: grid
            square: false
            columns: 3
            cards:
              - type: custom:mushroom-template-card
                entity: sensor.minute_power_cost
                primary: '{{ "${:.2f}".format(float(states(entity), 0)) }}'
                secondary: Minute
                tap_action:
                  action: more-info
                card_mod:
                  style:
                    mushroom-state-info$: ".container {\n  --card-primary-line-height:\
                      \ 1em;\n  --card-primary-font-size: 30px;\n}\n.primary {\n \
                      \ font-family: \"Segoe UI Variable Static Text\", \"Segoe UI\"\
                      , SegoeUI, -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\n\
                      \  font-weight: 100 !important;\n}\n"
              - type: custom:mushroom-template-card
                entity: sensor.day_power_cost
                primary: '{{ "${:.2f}".format(float(states(entity), 0)) }}'
                secondary: Day
                tap_action:
                  action: more-info
                card_mod:
                  style:
                    mushroom-state-info$: ".container {\n  --card-primary-line-height:\
                      \ 1em;\n  --card-primary-font-size: 30px;\n}\n.primary {\n \
                      \ font-family: \"Segoe UI Variable Static Text\", \"Segoe UI\"\
                      , SegoeUI, -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\n\
                      \  font-weight: 100 !important;\n}\n"
              - type: custom:mushroom-template-card
                entity: sensor.month_power_cost
                primary: '{{ "${:.2f}".format(float(states(entity), 0)) }}'
                secondary: Month
                tap_action:
                  action: more-info
                card_mod:
                  style:
                    mushroom-state-info$: ".container {\n  --card-primary-line-height:\
                      \ 1em;\n  --card-primary-font-size: 30px;\n}\n.primary {\n \
                      \ font-family: \"Segoe UI Variable Static Text\", \"Segoe UI\"\
                      , SegoeUI, -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\n\
                      \  font-weight: 100 !important;\n}\n"
          - type: custom:mushroom-template-card
            entity: select.monthly_energy
            primary: "{%- set tariffs = {\n  \"summer_tier_1\": \"Summer Tier 1\"\
              ,\n  \"summer_tier_2\": \"Summer Tier 2\",\n  \"summer_tier_3\": \"\
              Summer Tier 3\",\n  \"winter_tier_1\": \"Winter Tier 1\",\n  \"winter_tier_2\"\
              : \"Winter Tier 2\",\n  \"winter_tier_3\": \"Winter Tier 3\",\n} -%}\n\
              {% set value = states(entity) %}\n{{ tariffs[value] }}"
            secondary: '{{ states("sensor.tariff_price", with_unit=True) }}'
            icon: mdi:transmission-tower
            icon_color: "{%- set tariffs = {\n  \"summer_tier_1\": \"yellow\",\n \
              \ \"summer_tier_2\": \"orange\",\n  \"summer_tier_3\": \"red\",\n  \"\
              winter_tier_1\": \"purple\",\n  \"winter_tier_2\": \"blue\",\n  \"winter_tier_3\"\
              : \"cyan\",\n} -%}\n{% set value = states(entity) %}\n{{ tariffs[value]\
              \ }}"
            tap_action:
              action: more-info
            layout_options:
              grid_columns: full
        column_span: 1
      - type: grid
        cards:
          - type: heading
            icon: mdi:flash
            heading: Realtime Power
            heading_style: title
          - type: heading
            heading: System
            heading_style: subtitle
          - type: custom:bar-card
            card_mod:
              style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n  text-shadow:\
                \ 1px 1px var(--primary-background-color);\n}\n"
            min: 0
            height: 30px
            positions:
              indicator: inside
            entities:
              - entity: sensor.emporiavue_main_total_power
                name: Total Power
                icon: mdi:transmission-tower
                min: 0
                max: 48000
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 9600
                  - color: var(--light-green-color)
                    from: 9600
                    to: 19200
                  - color: var(--amber-color)
                    from: 19200
                    to: 28800
                  - color: var(--orange-color)
                    from: 28800
                    to: 38400
                  - color: var(--red-color)
                    from: 38400
                    to: 48000
              - entity: sensor.emporiavue_main_phase_a_power
                name: Main Phase A
                icon: mdi:home-analytics
                max: 24000
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 4800
                  - color: var(--light-green-color)
                    from: 4800
                    to: 9600
                  - color: var(--amber-color)
                    from: 9600
                    to: 14400
                  - color: var(--orange-color)
                    from: 14400
                    to: 19200
                  - color: var(--red-color)
                    from: 19200
                    to: 24000
              - entity: sensor.emporiavue_main_phase_b_power
                name: Main Phase B
                icon: mdi:home-analytics
                max: 24000
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 4800
                  - color: var(--light-green-color)
                    from: 4800
                    to: 9600
                  - color: var(--amber-color)
                    from: 9600
                    to: 14400
                  - color: var(--orange-color)
                    from: 14400
                    to: 19200
                  - color: var(--red-color)
                    from: 19200
                    to: 24000
          - type: custom:bar-card
            card_mod:
              style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n  text-shadow:\
                \ 1px 1px var(--primary-background-color);\n}\n"
            min: 0
            height: 30px
            positions:
              indicator: inside
            entities:
              - entity: sensor.emporiavue_sub_total_power
                name: Sub Total Power
                icon: mdi:transmission-tower
                max: 19200
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 3840
                  - color: var(--light-green-color)
                    from: 3840
                    to: 7680
                  - color: var(--amber-color)
                    from: 7680
                    to: 11520
                  - color: var(--orange-color)
                    from: 11520
                    to: 15360
                  - color: var(--red-color)
                    from: 15360
                    to: 19200
              - entity: sensor.emporiavue_sub_phase_a_power
                name: Sub Phase A
                icon: mdi:home-analytics
                max: 9600
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 1920
                  - color: var(--light-green-color)
                    from: 1920
                    to: 3840
                  - color: var(--amber-color)
                    from: 3840
                    to: 5760
                  - color: var(--orange-color)
                    from: 5760
                    to: 7680
                  - color: var(--red-color)
                    from: 7680
                    to: 9600
              - entity: sensor.emporiavue_sub_phase_b_power
                name: Sub Phase B
                icon: mdi:home-analytics
                max: 9600
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 1920
                  - color: var(--light-green-color)
                    from: 1920
                    to: 3840
                  - color: var(--amber-color)
                    from: 3840
                    to: 5760
                  - color: var(--orange-color)
                    from: 5760
                    to: 7680
                  - color: var(--red-color)
                    from: 7680
                    to: 9600
          - type: vertical-stack
            cards:
              - type: heading
                heading: Main
                heading_style: subtitle
              - type: custom:bar-card
                card_mod:
                  style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                    \  text-shadow: 1px 1px var(--primary-background-color);\n}\n"
                min: 0
                max: 2400
                decimal: 1
                height: 30px
                positions:
                  indicator: inside
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 480
                  - color: var(--light-green-color)
                    from: 480
                    to: 960
                  - color: var(--amber-color)
                    from: 960
                    to: 1440
                  - color: var(--orange-color)
                    from: 1440
                    to: 1920
                  - color: var(--red-color)
                    from: 1920
                    to: 2400
                entities:
                  - entity: sensor.emporiavue_main_balance_power
                    name: Main Balance
                    icon: mdi:home-analytics
                    max: 9600
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 1920
                      - color: var(--light-green-color)
                        from: 1920
                        to: 3840
                      - color: var(--amber-color)
                        from: 3840
                        to: 5760
                      - color: var(--orange-color)
                        from: 5760
                        to: 7680
                      - color: var(--red-color)
                        from: 7680
                        to: 9600
                  - entity: sensor.emporiavue_main_a_c_power
                    name: Air Conditioner
                    icon: mdi:air-conditioner
                    max: 7200
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 1440
                      - color: var(--light-green-color)
                        from: 1440
                        to: 2880
                      - color: var(--amber-color)
                        from: 2880
                        to: 4320
                      - color: var(--orange-color)
                        from: 4320
                        to: 5760
                      - color: var(--red-color)
                        from: 5760
                        to: 7200
                  - entity: sensor.emporiavue_main_dryer_power
                    name: Dryer
                    icon: mdi:tumble-dryer
                    max: 7200
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 1440
                      - color: var(--light-green-color)
                        from: 1440
                        to: 2880
                      - color: var(--amber-color)
                        from: 2880
                        to: 4320
                      - color: var(--orange-color)
                        from: 4320
                        to: 5760
                      - color: var(--red-color)
                        from: 5760
                        to: 7200
                  - entity: sensor.emporiavue_main_dishwasher_disposal_power
                    name: Dishwasher / Disposal
                    icon: mdi:dishwasher
                  - entity: sensor.emporiavue_main_garage_laundry_outside_lights_power
                    name: Garage, Laundry, Outside Lights
                    icon: mdi:lightbulb-group
                    max: 1800
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 360
                      - color: var(--light-green-color)
                        from: 360
                        to: 720
                      - color: var(--amber-color)
                        from: 720
                        to: 1080
                      - color: var(--orange-color)
                        from: 1080
                        to: 1440
                      - color: var(--red-color)
                        from: 1440
                        to: 1800
                  - entity: sensor.emporiavue_main_garage_outlets_power
                    name: Garage Outlets
                    icon: mdi:power-plug
                  - entity: sensor.emporiavue_main_kitchen_dining_lights_power
                    name: Kitchen, Dining Lights
                    icon: mdi:lightbulb-group
                    max: 1800
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 360
                      - color: var(--light-green-color)
                        from: 360
                        to: 720
                      - color: var(--amber-color)
                        from: 720
                        to: 1080
                      - color: var(--orange-color)
                        from: 1080
                        to: 1440
                      - color: var(--red-color)
                        from: 1440
                        to: 1800
                  - entity: sensor.emporiavue_main_kitchen_outlets_1_power
                    name: Kitchen Outlets 1
                    icon: mdi:power-plug
                  - entity: sensor.emporiavue_main_kitchen_outlets_2_power
                    name: Kitchen Outlets 2
                    icon: mdi:power-plug
                  - entity: sensor.emporiavue_main_microwave_power
                    name: Microwave
                    icon: mdi:microwave
                  - entity: sensor.emporiavue_main_outside_outlet_power
                    name: Outside Outlet
                    icon: mdi:power-plug
                    max: 1800
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 360
                      - color: var(--light-green-color)
                        from: 360
                        to: 720
                      - color: var(--amber-color)
                        from: 720
                        to: 1080
                      - color: var(--orange-color)
                        from: 1080
                        to: 1440
                      - color: var(--red-color)
                        from: 1440
                        to: 1800
                  - entity: sensor.emporiavue_main_range_power
                    name: Range
                    icon: mdi:stove
                    max: 9600
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 1920
                      - color: var(--light-green-color)
                        from: 1920
                        to: 3840
                      - color: var(--amber-color)
                        from: 3840
                        to: 5760
                      - color: var(--orange-color)
                        from: 5760
                        to: 7680
                      - color: var(--red-color)
                        from: 7680
                        to: 9600
                  - entity: sensor.emporiavue_main_washer_power
                    name: Washer
                    icon: mdi:washing-machine
          - type: vertical-stack
            cards:
              - type: heading
                heading: Sub
                heading_style: subtitle
              - type: custom:bar-card
                card_mod:
                  style: "bar-card-name,\nbar-card-value {\n  font-weight: 500;\n\
                    \  text-shadow: 1px 1px var(--primary-background-color);\n}\n"
                min: 0
                max: 1800
                decimal: 1
                height: 30px
                positions:
                  indicator: inside
                severity:
                  - color: var(--green-color)
                    from: 0
                    to: 360
                  - color: var(--light-green-color)
                    from: 360
                    to: 720
                  - color: var(--amber-color)
                    from: 720
                    to: 1080
                  - color: var(--orange-color)
                    from: 1080
                    to: 1440
                  - color: var(--red-color)
                    from: 1440
                    to: 1800
                entities:
                  - entity: sensor.emporiavue_sub_balance_power
                    name: Sub Balance
                    icon: mdi:home-analytics
                    max: 9600
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 1920
                      - color: var(--light-green-color)
                        from: 1920
                        to: 3840
                      - color: var(--amber-color)
                        from: 3840
                        to: 5760
                      - color: var(--orange-color)
                        from: 5760
                        to: 7680
                      - color: var(--red-color)
                        from: 7680
                        to: 9600
                  - entity: sensor.emporiavue_sub_basement_bath_outlet_power
                    name: Basement Bath Outlet
                    icon: mdi:hair-dryer
                    max: 2400
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 480
                      - color: var(--light-green-color)
                        from: 480
                        to: 960
                      - color: var(--amber-color)
                        from: 960
                        to: 1440
                      - color: var(--orange-color)
                        from: 1440
                        to: 1920
                      - color: var(--red-color)
                        from: 1920
                        to: 2400
                  - entity: sensor.emporiavue_sub_basement_bedrooms_power
                    name: Basement Bedrooms
                    icon: mdi:home-floor-0
                  - entity: sensor.emporiavue_sub_basement_lights_utility_room_power
                    name: Basement Lights/Utility Room
                    icon: mdi:progress-wrench
                  - entity: sensor.emporiavue_sub_bathroom_outlets_power
                    name: Bathroom Outlets
                    icon: mdi:hair-dryer
                    max: 2400
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 480
                      - color: var(--light-green-color)
                        from: 480
                        to: 960
                      - color: var(--amber-color)
                        from: 960
                        to: 1440
                      - color: var(--orange-color)
                        from: 1440
                        to: 1920
                      - color: var(--red-color)
                        from: 1920
                        to: 2400
                  - entity: sensor.emporiavue_sub_bedroom_lights_power
                    name: Bedroom Lights
                    icon: mdi:lightbulb-group
                  - entity: sensor.emporiavue_sub_eve_outlet_power
                    name: Eve Outlet
                    icon: mdi:rounded-corner
                    max: 2400
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 480
                      - color: var(--light-green-color)
                        from: 480
                        to: 960
                      - color: var(--amber-color)
                        from: 960
                        to: 1440
                      - color: var(--orange-color)
                        from: 1440
                        to: 1920
                      - color: var(--red-color)
                        from: 1920
                        to: 2400
                  - entity: sensor.emporiavue_sub_family_room_power
                    name: Family Room
                    icon: mdi:gamepad-circle
                  - entity: sensor.emporiavue_sub_furnace_power
                    name: Furnace
                    icon: mdi:hvac
                  - entity: sensor.emporiavue_sub_hall_bath_lights_main_bed_outlets_power
                    name: Hall, Bath Lights/Main Bed Outlets
                    icon: mdi:home-floor-1
                  - entity: sensor.emporiavue_sub_hall_bedroom_outlets_entry_outside_lights_power
                    name: Hall, Bedroom Outlets/Entry, Outside Lights
                    icon: mdi:home-floor-1
                  - entity: sensor.emporiavue_sub_kitchen_island_power
                    name: Kitchen Island
                    icon: mdi:table-chair
                    max: 2400
                    severity:
                      - color: var(--green-color)
                        from: 0
                        to: 480
                      - color: var(--light-green-color)
                        from: 480
                        to: 960
                      - color: var(--amber-color)
                        from: 960
                        to: 1440
                      - color: var(--orange-color)
                        from: 1440
                        to: 1920
                      - color: var(--red-color)
                        from: 1920
                        to: 2400
                  - entity: sensor.emporiavue_sub_living_room_power
                    name: Living Room
                    icon: mdi:sofa-single
                  - entity: sensor.emporiavue_sub_theater_family_room_outlets_basement_lighting_power
                    name: Theater, Family Outlets/Basement Lighting
                    icon: mdi:theater
        column_span: 2
      - type: grid
        cards:
          - type: heading
            heading: Measurements
            heading_style: title
            icon: mdi:chart-line-variant
          - type: vertical-stack
            cards:
              - type: heading
                heading: Main
                heading_style: subtitle
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_main_phase_a_voltage
                    primary_info: state
                    secondary_info: name
                    name: Phase A voltage
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_main_phase_b_voltage
                    primary_info: state
                    secondary_info: name
                    name: Phase B voltage
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_main_phase_a_current
                    primary_info: state
                    secondary_info: name
                    name: Phase A current
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_main_phase_b_current
                    primary_info: state
                    secondary_info: name
                    name: Phase B current
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_main_phase_a_frequency
                    primary_info: state
                    secondary_info: name
                    name: Phase A frequency
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_main_phase_b_phase_angle
                    primary_info: state
                    secondary_info: name
                    name: Phase B phase
          - type: vertical-stack
            cards:
              - type: heading
                heading: Sub
                heading_style: subtitle
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_sub_phase_a_voltage
                    primary_info: state
                    secondary_info: name
                    name: Phase A voltage
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_sub_phase_b_voltage
                    primary_info: state
                    secondary_info: name
                    name: Phase B voltage
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_sub_phase_a_current
                    primary_info: state
                    secondary_info: name
                    name: Phase A current
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_sub_phase_b_current
                    primary_info: state
                    secondary_info: name
                    name: Phase B current
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_sub_phase_a_frequency
                    primary_info: state
                    secondary_info: name
                    name: Phase A frequency
                  - type: custom:mushroom-entity-card
                    entity: sensor.emporiavue_sub_phase_b_phase_angle
                    primary_info: state
                    secondary_info: name
                    name: Phase B phase
        column_span: 2
      - type: grid
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 1023px)'
        cards:
          - type: custom:bubble-card
            card_type: horizontal-buttons-stack
            highlight_current_view: true
            1_icon: mdi:home-assistant
            1_link: main
            2_icon: mdi:sofa-single
            2_link: living
            3_icon: mdi:fridge-variant
            3_link: kitchen
            4_icon: mdi:gamepad-circle
            4_link: family
            5_icon: mdi:projector
            5_link: theater
            6_icon: mdi:chair-rolling
            6_link: josh-office
            7_icon: mdi:skull
            7_link: amy-office
            8_icon: mdi:robot
            8_link: ethan
            9_icon: mdi:unicorn-variant
            9_link: emma
            10_icon: mdi:bed-king
            10_link: main-bed
            11_icon: mdi:progress-wrench
            11_link: utility
            12_icon: mdi:spa
            12_link: outside
            13_icon: mdi:garage-variant
            13_link: garage
            14_icon: mdi:shield
            14_link: security
            15_icon: mdi:thermostat-box
            15_link: climate
            16_icon: mdi:lightbulb-group
            16_link: lights
            17_icon: mdi:desktop-tower
            17_link: computer
            18_icon: mdi:printer-3d
            18_link: bambu
            19_icon: mdi:power-plug
            19_link: power
    dense_section_placement: true
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        entity: sensor.emporiavue_main_total_daily
        content: '{{ int(states(entity), 0) }} kWh'
        icon: mdi:calendar-today
        tap_action:
          action: more-info
        label: Today
      - type: custom:mushroom-template-badge
        entity: sensor.emporiavue_main_total_monthly
        content: '{{ int(states(entity), 0) }} kWh'
        icon: mdi:calendar-month
        tap_action:
          action: more-info
        label: This Month
