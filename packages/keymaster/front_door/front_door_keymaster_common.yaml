## WARNING ##
# This file is automatically generated, any changes
# will be overwritten.

##################################################
################  COMMON ENTITIES  ###############
##################################################

##################  influxdb:  ###################
influxdb:
  exclude:
    entity_globs:
      - sensor.front_door_code_slot_*
      - sensor.connected_front_door_*

###############  input_boolean:  #################
input_boolean:
  front_door_lock_notifications:
    name: Lock Notifications
    icon: mdi:lock-alert
  front_door_dooraccess_notifications:
    name: Door Notifications
    icon: mdi:door-closed-lock
  front_door_reset_lock:
    name: Reset Lock
    icon: mdi:lock-reset
  keymaster_front_door_autolock:
    name: Auto Lock
    icon: mdi:key-remove
  keymaster_front_door_retry:
    name: Retry Auto Lock
    icon: mdi:lock-clock

###################  script:  ####################
script:
  keymaster_front_door_manual_notify:
    alias: 'ðŸ”‘ Front Door Manual Notify'
    description: 'Sends notifications on Front Door lock events'
    icon: mdi:lock-smart
    sequence:
      - action: script.notify_mobile
        data:
          who: '{{ who | default("parents") }}'
          title: '{{ title }}'
          message: '{{ message }}'
          notification_icon: mdi:lock-smart
          color: "#03a9f4"
          icon_url: local/icons/lock-smart.png
          group: Security
      - action: script.notify_hass_agent
        data:
          entity:
            - media_player.erebus
          title: '{{ title }}'
          message: '{{ message }}'

  keymaster_front_door_reset_lock:
    alias: 'ðŸ”‘ Front Door Reset Lock'
    description: 'Sends a notificaiton when the lock is reset'
    icon: mdi:lock-smart
    sequence:
      - action: script.keymaster_front_door_manual_notify
        data_template:
          title: "Front Door Lock"
          message: "Lock was reset"
          who: joshua

  keymaster_front_door_reset_codeslot:
    alias: 'ðŸ”‘ Front Door Reset Code Slot'
    description: 'Resets a code slot'
    icon: mdi:lock-smart
    mode: parallel
    fields:
      code_slot:
        description: The code slot to reset
        example: 1
    variables:
      # Constant used later to loop through day specific entities
      days: ["sun", "mon", "tue", "wed", "thu", "fri", "sat"]
    sequence:
      - action: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.enabled_front_door_{{ code_slot | string }}"
      - action: input_text.set_value
        data_template:
          entity_id: "input_text.front_door_name_{{ code_slot | string }}"
          value: ""
      - action: input_text.set_value
        data_template:
          entity_id: "input_text.front_door_pin_{{ code_slot | string }}"
          value: ""
      - action: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.notify_front_door_{{ code_slot | string }}"
      - action: input_number.set_value
        data_template:
          entity_id: "input_number.accesscount_front_door_{{ code_slot | string }}"
          value: "0"
      - action: input_datetime.set_datetime
        data_template:
          entity_id: "input_datetime.start_date_front_door_{{ code_slot | string }}"
          datetime: >-
            {{ now().strftime('%Y-%m-%d 00:00') }}
      - action: input_datetime.set_datetime
        data_template:
          entity_id: "input_datetime.end_date_front_door_{{ code_slot | string }}"
          datetime: >-
            {{ now().strftime('%Y-%m-%d 00:00') }}
      - action: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.daterange_front_door_{{ code_slot | string }}"
      - action: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.accesslimit_front_door_{{ code_slot | string }}"
      - action: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.reset_codeslot_front_door_{{ code_slot | string }}"
      # Loop through each day of the week and reset the entities related to each one
      - repeat:
          count: 7
          sequence:
            - action: input_datetime.set_datetime
              data_template:
                entity_id: "input_datetime.{{ days[repeat.index - 1] }}_start_date_front_door_{{ code_slot | string }}"
                time: "{{ now().replace(hour=00,minute=00,second=00).strftime('%H:%M:%S') }}"
            - action: input_datetime.set_datetime
              data_template:
                entity_id: "input_datetime.{{ days[repeat.index - 1] }}_end_date_front_door_{{ code_slot | string }}"
                time: "{{ now().replace(hour=00,minute=00,second=00).strftime('%H:%M:%S') }}"
            - action: input_boolean.turn_on
              data_template:
                entity_id: "input_boolean.{{ days[repeat.index - 1] }}_front_door_{{ code_slot | string }}"
            - action: input_boolean.turn_on
              data_template:
                entity_id: "input_boolean.{{ days[repeat.index - 1] }}_inc_front_door_{{ code_slot | string }}"

  keymaster_front_door_start_timer:
    alias: 'ðŸ”‘ Front Door Start Timer'
    icon: mdi:clock-start
    sequence:
      - condition: state
        entity_id: input_boolean.keymaster_front_door_autolock
        state: "on"
      - condition: state
        entity_id: lock.front_door
        state: "unlocked"
      - action: timer.cancel
        entity_id: timer.keymaster_front_door_autolock
      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ has_value('input_text.keymaster_front_door_autolock_door_time_night')
                    and not is_state('input_text.keymaster_front_door_autolock_door_time_night', '') }}
              - condition: state
                entity_id: schedule.front_door_auto_lock
                state: "on"
            sequence:
              - action: timer.start
                metadata: {}
                data:
                  duration: >-
                    {{ states('input_text.keymaster_front_door_autolock_door_time_night') }}
                target:
                  entity_id: timer.keymaster_front_door_autolock
          - conditions:
              - condition: template
                value_template: >-
                  {{ has_value('input_text.keymaster_front_door_autolock_door_time_day')
                    and not is_state('input_text.keymaster_front_door_autolock_door_time_day', '') }}
              - condition: state
                entity_id: schedule.front_door_auto_lock
                state: "off"
            sequence:
              - action: timer.start
                metadata: {}
                data:
                  duration: >-
                    {{ states('input_text.keymaster_front_door_autolock_door_time_day') }}
                target:
                  entity_id: timer.keymaster_front_door_autolock

  boltchecked_lock_front_door:
    alias: 'ðŸ”‘ Front Door Boltchecked'
    icon: mdi:lock-open-check
    sequence:
      - action: lock.lock
        data:
          entity_id: lock.front_door

  boltchecked_retry_front_door:
    alias: 'ðŸ”‘ Front Door Boltchecked Retry'
    icon: mdi:lock-reset
    sequence:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.keymaster_front_door_retry
      - action: persistent_notification.create
        data_template:
          title: "Front Door Lock"
          message: >-
            {{ 'Unable to lock Front Door as the sensor indicates the door is currently opened. The operation will be automatically retried when the door is closed.'}}

###################  automation:  ####################
automation:
  - alias: "ðŸ”‘ Front Door Reset Codeslot"
    id: keymaster_front_door_reset_codeslot
    trigger:
      entity_id: input_boolean.reset_codeslot_front_door_1,input_boolean.reset_codeslot_front_door_2,input_boolean.reset_codeslot_front_door_3,input_boolean.reset_codeslot_front_door_4,input_boolean.reset_codeslot_front_door_5,input_boolean.reset_codeslot_front_door_6,input_boolean.reset_codeslot_front_door_7,input_boolean.reset_codeslot_front_door_8
      platform: state
      to: "on"
    action:
      - action: script.keymaster_front_door_reset_codeslot
        data_template:
          code_slot: "{{ trigger.entity_id.split('_')[-1] }}"

  - alias: "ðŸ”‘ Front Door Lock Notifications"
    id: keymaster_front_door_lock_notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: front_door
    condition:
      - condition: template
        value_template: "{{ trigger.event.data.action_code is undefined or trigger.event.data.code_slot == 0 }}"
      - condition: state
        entity_id: input_boolean.front_door_lock_notifications
        state: "on"
    action:
      - action: script.keymaster_front_door_manual_notify
        data_template:
          title: Front Door Lock
          message: "{{ trigger.event.data.action_text }} {% if trigger.event.data.code_slot > 0 %}({{ trigger.event.data.code_slot_name }}){% endif %}"
          who: joshua

  - alias: "ðŸ”‘ Front Door User Notifications"
    id: keymaster_front_door_user_notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: front_door
    condition:
      - condition: template
        value_template: "{{ trigger.event.data.code_slot > 0 }}"
      - condition: template
        value_template: "{{ is_state('input_boolean.notify_front_door_' + trigger.event.data.code_slot | string, 'on') }}"
    action:
      - action: script.keymaster_front_door_manual_notify
        data_template:
          title: Front Door Lock
          message: "{{ trigger.event.data.action_text }} ({{ trigger.event.data.code_slot_name }})"

  - alias: "ðŸ”‘ Front Door Open and Close"
    id: keymaster_front_door_open_and_close
    trigger:
      entity_id: binary_sensor.front_door_window_door_is_open
      platform: state
    condition:
      - condition: state
        entity_id: "input_boolean.front_door_dooraccess_notifications"
        state: "on"
      - condition: template
        value_template: "{{ trigger.from_state.state in ('on', 'off') and trigger.to_state.state in ('on', 'off') }}"
    action:
      - action: script.keymaster_front_door_manual_notify
        data_template:
          title: Front Door Lock
          message: "{% if trigger.to_state.state == 'on' %}Door Opened{% else %}Door Closed{% endif %}"

  - alias: "ðŸ”‘ Front Door Changed Code"
    id: keymaster_front_door_changed_code
    trigger:
      entity_id: input_text.front_door_pin_1,input_text.front_door_pin_2,input_text.front_door_pin_3,input_text.front_door_pin_4,input_text.front_door_pin_5,input_text.front_door_pin_6,input_text.front_door_pin_7,input_text.front_door_pin_8
      platform: state
    condition:
      - condition: template
        value_template: >-
          {{
            is_state('input_boolean.enabled_front_door_' + trigger.entity_id.split('_')[-1], 'on')
            and
            (trigger.from_state.state != trigger.to_state.state)
          }}
    action:
      - action: persistent_notification.create
        data_template:
          title: Front Door Lock
          message: >-
            {{ 'The PIN for Front Door code slot ' + trigger.entity_id.split('_')[-1] + ' was changed. Please enable it in order to make it active.'}}
      - action: input_boolean.turn_off
        data_template:
          entity_id: >-
            {{ 'input_boolean.enabled_front_door_' + trigger.entity_id.split('_')[-1] }}

  - alias: "ðŸ”‘ Front Door Reset"
    id: keymaster_front_door_reset
    trigger:
      entity_id: input_boolean.front_door_reset_lock
      platform: state
      from: "off"
      to: "on"
    action:
      - action: script.keymaster_front_door_reset_lock
      - action: input_boolean.turn_off
        entity_id: input_boolean.front_door_reset_lock

  - alias: "ðŸ”‘ Front Door Decrement Access Count"
    id: keymaster_front_door_decrement_access_count
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: front_door
    condition:
      - condition: template
        # make sure decrementing access entries is enabled
        value_template: "{{ is_state('input_boolean.accesslimit_front_door_' + trigger.event.data.code_slot | string, 'on') }}"
      - condition: template
        # Check for Keypad Unlock code
        value_template: >-
          {{
            trigger.event.data.code_slot > 0
            and
            (trigger.event.data.action_code is undefined or trigger.event.data.action_code in (6, 19))
          }}
    action:
      - action: input_number.decrement
        data_template:
          entity_id: "{{ 'input_number.accesscount_front_door_' + trigger.event.data.code_slot | string }}"

  - alias: "ðŸ”‘ Front Door Locked"
    id: keymaster_front_door_locked
    trigger:
      entity_id: lock.front_door
      platform: state
      to: locked
    action:
      - action: timer.cancel
        entity_id: timer.keymaster_front_door_autolock
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_front_door_retry

  - alias: "ðŸ”‘ Retry Bolt Closed Front Door"
    id: keymaster_retry_bolt_closed_front_door
    trigger:
      platform: state
      entity_id: binary_sensor.front_door_window_door_is_open
      to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_front_door_retry
        state: "on" 
      - condition: state
        entity_id: input_boolean.keymaster_front_door_autolock
        state: "on"
    action:
      - action: persistent_notification.create
        data_template:
          title: Front Door Lock
          message: >-
            {{ 'The Front Door sensor indicates the door has been closed, re-attempting to lock.'}}
      - action: lock.lock
        entity_id: lock.boltchecked_front_door

  - alias: "ðŸ”‘ Front Door Opened"
    id: keymaster_front_door_opened
    trigger:
      platform: state
      entity_id: binary_sensor.front_door_window_door_is_open
      to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_front_door_autolock
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ has_value('input_text.keymaster_front_door_autolock_door_time_night')
                    and not is_state('input_text.keymaster_front_door_autolock_door_time_night', '') }}
              - condition: state
                entity_id: schedule.front_door_auto_lock
                state: "on"
            sequence:
              - action: timer.start
                metadata: {}
                data:
                  duration: >-
                    {{ states('input_text.keymaster_front_door_autolock_door_time_night') }}
                target:
                  entity_id: timer.keymaster_front_door_autolock
          - conditions:
              - condition: template
                value_template: >-
                  {{ has_value('input_text.keymaster_front_door_autolock_door_time_day')
                    and not is_state('input_text.keymaster_front_door_autolock_door_time_day', '') }}
              - condition: state
                entity_id: schedule.front_door_auto_lock
                state: "off"
            sequence:
              - action: timer.start
                metadata: {}
                data:
                  duration: >-
                    {{ states('input_text.keymaster_front_door_autolock_door_time_day') }}
                target:
                  entity_id: timer.keymaster_front_door_autolock

  - alias: "ðŸ”‘ Front Door Lock Schedule"
    id: keymaster_front_door_lock_schedule
    trigger:
      - platform: state
        entity_id:
          - schedule.front_door_auto_lock
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_front_door_autolock
        state: "on"
    action:
      - action: script.turn_on
        entity_id: script.keymaster_front_door_start_timer
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_front_door_retry

  - alias: "ðŸ”‘ Front Door Unlocked Start Auto-lock"
    id: keymaster_front_door_unlocked_start_autolock
    trigger:
      entity_id: lock.front_door
      platform: state
      to: unlocked
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_front_door_autolock
        state: "on"
    action:
      - action: script.turn_on
        entity_id: script.keymaster_front_door_start_timer
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_front_door_retry

  - alias: "ðŸ”‘ Front Door Timer Finished"
    id: keymaster_front_door_timer_finished
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_front_door_autolock
        state: "on"
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.keymaster_front_door_autolock
    action:
      - action: lock.lock
        entity_id: lock.boltchecked_front_door

  - alias: "ðŸ”‘ Front Door Timer Canceled"
    id: keymaster_front_door_timer_canceled
    trigger:
      platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.keymaster_front_door_autolock
    action:
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_front_door_retry

  - alias: "ðŸ”‘ Front Door Disable Auto-lock"
    id: keymaster_front_door_disable_auto_lock
    trigger:
      entity_id: input_boolean.keymaster_front_door_autolock
      platform: state
      to: "off"
    action:
      - action: timer.cancel
        entity_id:
          - timer.keymaster_front_door_autolock
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_front_door_retry

  - alias: "ðŸ”‘ Front Door Enable Auto-lock"
    id: keymaster_front_door_enable_auto_lock
    trigger:
      entity_id: input_boolean.keymaster_front_door_autolock
      platform: state
      to: "on"
    action:
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_front_door_retry
      - action: timer.cancel
        entity_id:
          - timer.keymaster_front_door_autolock
      - action: script.turn_on
        entity_id: script.keymaster_front_door_start_timer

###################  timer:  ####################
timer:
  keymaster_front_door_autolock:
    name: "Auto Lock Timer"
    restore: true

###################  lock:  ####################
lock:
  - platform: template
    name: Boltchecked Front Door
    unique_id: "lock.boltchecked_front_door"
    value_template: "{{ is_state('lock.front_door', 'locked') }}"
    lock:
      action: "{{ 'script.boltchecked_retry_front_door' if (is_state('binary_sensor.front_door_window_door_is_open', 'on')) else 'script.boltchecked_lock_front_door' }}"
    unlock:
      action: lock.unlock
      data:
        entity_id: lock.front_door


###############  input_text:  #################
input_text:
  front_door_lockname:
    initial: front_door
    name: "Lock Name"

  keymaster_front_door_autolock_door_time_day:
    name: "Front Door Day Auto Lock HH:MM:SS"
  keymaster_front_door_autolock_door_time_night:
    name: "Front Door Night Auto Lock HH:MM:SS"
