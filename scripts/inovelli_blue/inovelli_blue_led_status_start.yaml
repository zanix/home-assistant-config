---
inovelli_blue_led_status_start:
  alias: 'Inovelli Blue LED - Status Start (Zigbee2MQTT)'
  description: 'Set a LED effect, wait for a delay, and set to a new effect.'
  icon: mdi:led-off
  mode: parallel

  fields:
    entity_id:
      name: Entities
      description: Inovelli devices to set effects.
      example: light.family_room
      required: true
      selector:
        entity:
          domain:
            - light
            - switch
          integration: mqtt
          multiple: true
    led:
      name: LED
      description: Choose which LED to control. Default is All. (You can also enter the number value directly)
      selector:
        select:
          custom_value: true
          options:
            - All
            - Led 1
            - Led 2
            - Led 3
            - Led 4
            - Led 5
            - Led 6
            - Led 7
    color_start:
      name: Start LED Color
      description: (You can also enter the number value directly)
      required: true
      selector:
        select:
          custom_value: true
          options:
            - "Off"
            - Red
            - Orange
            - Yellow
            - Green
            - Cyan
            - Teal
            - Blue
            - Purple
            - Light Pink
            - Pink
            - White
    level_start:
      name: Start LED brightness level
      description: Value from 0 (off) to 100 (100% brightness).
      example: '100'
      selector:
        number:
          min: 1
          max: 100
    effect_start:
      name: Start Effect
      example: Pulse
      required: true
      selector:
        select:
          custom_value: true
          options:
            - 'Off'
            - 'Clear'
            - 'Solid'
            - 'Aurora'
            - 'Chase'
            - 'Fast Blink'
            - 'Fast Chase'
            - 'Fast Falling'
            - 'Fast Rising'
            - 'Fast Siren'
            - 'Medium Blink'
            - 'Medium Falling'
            - 'Medium Rising'
            - 'Open/Close'
            - 'Pulse'
            - 'Slow Blink'
            - 'Slow Chase'
            - 'Slow Falling'
            - 'Slow Rising'
            - 'Slow Siren'
            - 'Small to Big'
    duration:
      name: Duration
      description: How long should the effect run?
      selector:
        select:
          custom_value: true
          options:
            - 'Off'
            - 1 Second
            - 2 Seconds
            - 3 Seconds
            - 4 Seconds
            - 5 Seconds
            - 6 Seconds
            - 7 Seconds
            - 8 Seconds
            - 9 Seconds
            - 10 Seconds
            - 15 Seconds
            - 20 Seconds
            - 25 Seconds
            - 30 Seconds
            - 35 Seconds
            - 40 Seconds
            - 45 Seconds
            - 50 Seconds
            - 55 Seconds
            - 1 Minute
            - 2 Minutes
            - 3 Minutes
            - 4 Minutes
            - 5 Minutes
            - 6 Minutes
            - 7 Minutes
            - 8 Minutes
            - 9 Minutes
            - 10 Minutes
            - 15 Minutes
            - 20 Minutes
            - 25 Minutes
            - 30 Minutes
            - 35 Minutes
            - 40 Minutes
            - 45 Minutes
            - 50 Minutes
            - 55 Minutes
            - 1 Hour
            - 2 Hours
            - 3 Hours
            - 4 Hours
            - 5 Hours
            - 6 Hours
            - 7 Hours
            - 8 Hours
            - 9 Hours
            - 10 Hours
            - 15 Hours
            - 20 Hours
            - 1 Day
            - 2 Days
            - 3 Days
            - 4 Days
            - 5 Days
            - Indefinitely
            - Forever
    color_end:
      name: End LED Color
      description: (You can also enter the number value directly)
      required: true
      selector:
        select:
          custom_value: true
          options:
            - "Off"
            - Red
            - Orange
            - Yellow
            - Green
            - Cyan
            - Teal
            - Blue
            - Purple
            - Light Pink
            - Pink
            - White
    level_end:
      name: End LED brightness level
      description: Value from 0 (off) to 100 (100% brightness).
      example: '100'
      required: true
      selector:
        number:
          min: 1
          max: 100
    effect_end:
      name: End Effect
      example: Pulse
      required: true
      selector:
        select:
          custom_value: true
          options:
            - 'Off'
            - 'Clear'
            - 'Solid'
            - 'Aurora'
            - 'Chase'
            - 'Fast Blink'
            - 'Fast Chase'
            - 'Fast Falling'
            - 'Fast Rising'
            - 'Fast Siren'
            - 'Medium Blink'
            - 'Medium Falling'
            - 'Medium Rising'
            - 'Open/Close'
            - 'Pulse'
            - 'Slow Blink'
            - 'Slow Chase'
            - 'Slow Falling'
            - 'Slow Rising'
            - 'Slow Siren'
            - 'Small to Big'
    enable_debug:
      name: Enable debug output?
      selector:
        boolean:

  variables:
    # Set to true to create a "persistent_notification" with debugging information.
    debug: '{{ iif(enable_debug is defined, enable_debug, false) }}'

    entity_list: '{{ entity_id }}'

    # Convert LED number to value
    leds:
      'all': -1
      'led 1': 0
      'led 2': 1
      'led 3': 2
      'led 4': 3
      'led 5': 4
      'led 6': 5
      'led 7': 6
    led: '{{ led | default("all") }}'
    led_value: >-
      {% if led | int(default=-2) == -2 %}
        {{ leds[led | lower] | int(default=-1) }}
      {% else %}
        {{ led | int(default=-1) }}
      {% endif %}

    level_start: '{{ level_start | default(40) }}'
    level_end: '{{ level_end | default(40) }}'

    # Convert Color to value
    colors:
      'off': 0
      'red': 1
      'orange': 21
      'yellow': 42
      'green': 85
      'cyan': 127
      'teal': 145
      'blue': 170
      'purple': 195
      'light pink': 220
      'lightpink': 220
      'pink': 234
      'white': 255
    color_start: '{{ color_start | default("red") }}'
    color_start_value: >-
      {% if color_start | int(default=-1) == -1 %}
        {{ colors[color_start | lower] | int(default=0) }}
      {% else %}
        {{ color_start | int(default=0) }}
      {% endif %}
    color_end: '{{ color_end | default("red") }}'
    color_end_value: >-
      {% if color_end | int(default=-1) == -1 %}
        {{ colors[color_end | lower] | int(default=0) }}
      {% else %}
        {{ color_end | int(default=0) }}
      {% endif %}

    # Convert Effect to value
    effects:
      'off': 'off'
      'clear': 'clear_effect'
      'solid': 'solid'
      'aurora': 'aurora'
      'chase': 'chase'
      'fast blink': 'fast_blink'
      'fast chase': 'fast_chase'
      'fast falling': 'fast_falling'
      'fast rising': 'fast_rising'
      'fast siren': 'fast_siren'
      'medium blink': 'medium_blink'
      'medium falling': 'medium_falling'
      'medium rising': 'medium_rising'
      'open/close': 'open_close'
      'open close': 'open_close'
      'pulse': 'pulse'
      'slow blink': 'slow_blink'
      'slow chase': 'slow_chase'
      'slow falling': 'slow_falling'
      'slow rising': 'slow_rising'
      'slow siren': 'slow_siren'
      'small to big': 'small_to_big'
    effect_start: '{{ effect_start | default("clear") }}'
    effect_start_value: >-
      {% if effect_start | lower in effects %}
        {{ effects[effect_start | lower] }}
      {% else %}
        {{ effect_start | lower }}
      {% endif %}
    effect_end: '{{ effect_end | default("clear") }}'
    effect_end_value: >-
      {% if effect_end | lower in effects %}
        {{ effects[effect_end | lower] }}
      {% else %}
        {{ effect_end | lower }}
      {% endif %}

    # Convert Duration to value
    durations:
      'off': 0
      '1 second': 1
      '2 seconds': 2
      '3 seconds': 3
      '4 seconds': 4
      '5 seconds': 5
      '6 seconds': 6
      '7 seconds': 7
      '8 seconds': 8
      '9 seconds': 9
      '10 seconds': 10
      '15 seconds': 15
      '20 seconds': 20
      '25 seconds': 25
      '30 seconds': 30
      '35 seconds': 35
      '40 seconds': 40
      '45 seconds': 45
      '50 seconds': 50
      '55 seconds': 55
      '1 minute': 60
      '2 minutes': 62
      '3 minutes': 63
      '4 minutes': 64
      '5 minutes': 65
      '6 minutes': 66
      '7 minutes': 67
      '8 minutes': 68
      '9 minutes': 69
      '10 minutes': 70
      '15 minutes': 75
      '20 minutes': 80
      '25 minutes': 85
      '30 minutes': 90
      '35 minutes': 95
      '40 minutes': 100
      '45 minutes': 105
      '50 minutes': 110
      '55 minutes': 115
      '1 hour': 120
      '2 hours': 122
      '3 hours': 123
      '4 hours': 124
      '5 hours': 125
      '6 hours': 126
      '7 hours': 127
      '8 hours': 128
      '9 hours': 129
      '10 hours': 130
      '15 hours': 135
      '20 hours': 140
      '1 day': 144
      '2 days': 168
      '3 days': 192
      '4 days': 216
      '5 days': 240
      'indefinitely': 255
      'forever': 255
    duration: '{{ duration | default("indefinitely") }}'
    duration_value: >-
      {% if duration | int(default=-1) == -1 %}
        {{ durations[duration | lower] | int(default=255) }}
      {% else %}
        {{ duration | int(default=255) }}
      {% endif %}

  sequence:
    # Loop through each entity_id
    - repeat:
        for_each: '{{ entity_list }}'
        sequence:
          # Set enable_debug = true above to provide output troubleshooting information.
          - if:
              - condition: template
                value_template: '{{ debug == true }}'
            then:
              - service: persistent_notification.create
                data:
                  notification_id: 'inovelli_blue_led_status_start'
                  title: 'DEBUG: script.inovelli_blue_led_status_start'
                  message: |-
                    entity: {{ repeat.item }}
                    led: {{ led_value }}
                    color_start: {{ color_start }} ({{ color_start_value }})
                    level_start: {{ level_start }}
                    effect_start: {{ effect_start }} ({{ effect_start_value }})
                    color_end: {{ color_end }} ({{ color_end_value }})
                    level_end: {{ level_end }}
                    effect_end: {{ effect_end }} ({{ effect_end_value }})
                    duration: {{ duration }} ({{ duration_value }})

          - service: script.inovelli_blue_led
            data:
              entity_id:
                - '{{ repeat.item }}'
              led: '{{ led_value }}'
              color: '{{ color_start_value }}'
              level: '{{ level_start }}'
              effect: '{{ effect_start_value }}'
              duration: '{{ duration_value }}'
              enable_debug: '{{ debug }}'

          - delay:
              seconds: '{{ duration_value }}'

          - service: script.inovelli_blue_led
            data:
              entity_id:
                - '{{ repeat.item }}'
              led: '{{ led_value }}'
              color: '{{ color_end_value }}'
              level: '{{ level_end }}'
              effect: '{{ effect_end_value }}'
              duration: 'Indefinitely'
              enable_debug: '{{ debug }}'
