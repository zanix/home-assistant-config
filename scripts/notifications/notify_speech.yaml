---
notify_speech:
  alias: '[Notify] Speech'
  description: 'Notify users via Text-to-speech'
  icon: mdi:text-to-speech
  mode: parallel

  fields:
    media_player:
      description: 'Media Player'
      example: media_player.living_room_speaker
      selector:
        entity:
          domain: media_player
    message:
      description: 'Message of the notification'
      example: 'Message text'
      selector:
        text:

  sequence:
    - if:
        - condition: state
          entity_id: input_boolean.audio_notifications
          state: 'on'
        - condition: template
          value_template: >-
            {% set current_time = (now().second + (now().minute * 60) + (now().hour * 3600)) %}
            {% set start = state_attr('input_datetime.audio_notifications_start', 'timestamp') | int %}
            {% set end = state_attr('input_datetime.audio_notifications_end', 'timestamp') | int %}
            {% set nap_start = state_attr('input_datetime.nap_time_start', 'timestamp') | int %}
            {% set nap_end = state_attr('input_datetime.nap_time_end', 'timestamp') | int %}
            {{ (start <= current_time <= end) and (nap_start > current_time or current_time > nap_end) }}

      then:
        - service: script.say
          data:
            media_player: '{{ media_player }}'
            message: '{{ message }}'
