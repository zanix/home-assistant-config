---
notify_join:
  alias: '[Notify] Join'
  description: 'Notify Join devices'
  icon: mdi:content-copy
  mode: parallel

  fields:
    who:
      description: 'Which device to send to [ shield_living_room, shield_family_room, shield_master_bedroom, shield_all ]'
      example: 'shield_all'
    title:
      description: 'Title of the notification'
      example: 'Startup: Home Assistant is Up and Running!'
      selector:
        text:
    message:
      description: 'Message of the notification'
      example: 'Message text'
      selector:
        text:
    icon:
      description: 'Notification icon. If this image has transparency, it will also be used as the status bar icon if smallicon is not set.'
      example: 'local/icon.png'
      selector:
        text:
    smallicon:
      description: 'Notification status bar icon'
      example: 'local/icon.png'
      selector:
        text:
    image:
      description: 'Publicly available URL for an image to show up in the notification'
      example: 'local/image.png'
      selector:
        text:
    sound:
      description: 'Publicly available URL for a sound to play with the notification'
      example: 'local/sound.mp3'
      selector:
        text:
    url:
      description: 'Action when clicking the notification'
      example: 'lovelace/main'
      selector:
        text:
    group:
      description: 'Message group'
      example: 'Home Assistant'
      selector:
        text:
    tag:
      description: 'Unique tag for the notification'
      example: 'tag'
      selector:
        text:
    actions:
      description: 'A list of actions for Join notification buttons'
      example: ''
      selector:
        action:

  # Set local variables for reuse in this script.
  variables:
    notification_service: 'notify.{{ who|default("shield_living_room", true) }}'
    image_path: |
      {%- if image is string -%}
        {%- if image.startswith("http") -%}
          {{ image }}
        {%- else -%}
          {{ states.sensor.base_url.state }}/{{ image }}
        {%- endif -%}
      {%- endif -%}
    icon_path: |
      {%- if icon is string -%}
        {%- if icon.startswith("http") -%}
          {{ icon }}
        {%- else -%}
          {{ states.sensor.base_url.state }}/{{ icon }}
        {%- endif -%}
      {%- endif -%}
    smallicon_path: |
      {%- if smallicon is string -%}
        {%- if smallicon.startswith("http") -%}
          {{ smallicon }}
        {%- else -%}
          {{ states.sensor.base_url.state }}/{{ smallicon }}
        {%- endif -%}
      {%- endif -%}
    sound_path: |
      {%- if sound is string -%}
        {%- if sound.startswith("http") -%}
          {{ sound }}
        {%- else -%}
          {{ states.sensor.base_url.state }}/{{ sound }}
        {%- endif -%}
      {%- endif -%}
    group_id: '{{ group|default("Home Assistant") }}'

  sequence:
    # Only send if enabled.
    # - condition: state
    #   entity_id: input_boolean.mobile_notifications
    #   state: 'on'

    - if:
        - condition: template
          value_template: '{{ message not in ["clear_notification", "remove_channel", "TTS"] }}'

      then:
        - service: '{{ notification_service }}'
          data:
            title: '{{ title }}'
            message: '{{ message }}'
            data:
              icon: '{{ icon_path|default(none, true) }}'
              smallicon: '{{ smallicon_path|default(states.sensor.base_url.state ~ "/local/icons/home-assistant.png", true) }}'
              image: '{{ image_path|default(none, true) }}'
              sound: '{{ sound_path|default(none, true) }}'
              url: '{{ url|default(none, true) }}'
              category: '{{ group_id }}'
              notification_id: '{{ tag|default(none, true) }}'
              actions: '{{ actions|default(none, true) }}'
