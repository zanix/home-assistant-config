---
notify_mobile:
  alias: '[Notify] Mobile'
  description: 'Notify users via mobile devices.'
  icon: mdi:cellphone-message
  mode: parallel

  fields:
    who:
      name: Who
      description: Which person to send to.
      example: joshua
      required: true
      selector:
        select:
          mode: dropdown
          custom_value: true
          options:
            - label: Joshua
              value: joshua
            - label: Amy
              value: amy
            - label: Parents
              value: parents
            - label: Kids
              value: kids
            - label: Family
              value: family
    title:
      name: Title
      example: "Startup: Home Assistant is Up and Running!"
      selector:
        text:
    subtitle:
      name: Subtitle
      example: Subject for long text
      selector:
        text:
    message:
      name: Message
      example: Message text
      selector:
        text:
          multiline: true
    notification_icon:
      name: Notification Icon
      description: Set the notification status bar icon to any icon from Material Design.
      example: mdi:home-assistant
      selector:
        icon:
    icon_url:
      name: Icon
      example: local/icons/home-assistant.png
      selector:
        text:
    image:
      name: Image
      description: Overrides icon when used.
      example: local/image.png
      selector:
        text:
    video:
      name: Video
      description: Overrides icon and image when used.
      example: local/video.mp4
      selector:
        text:
    camera:
      name: Camera
      description: Camera stream to attach.
      example: camera.doorbell
      selector:
        entity:
          domain: camera
    url:
      name: URL
      description: Action when clicking the notification.
      example: lovelace/main
      selector:
        text:
    group:
      name: Message group
      example: Home Assistant
      selector:
        text:
    tag:
      name: Tag
      description: Unique tag for the notification.
      example: tag
      selector:
        text:
    actions:
      name: Actions
      description: A list of actions for actionable notifications.
      example: ""
      selector:
        object:
    channel:
      name: Notification Channel
      description: Set the notification channel.
      example: alarm_stream
      selector:
        text:
    importance:
      name: Notification Channel Importance
      description: Set the notification channel importance.
      selector:
        select:
          mode: dropdown
          options:
            - high
            - default
            - low
            - min
    priority:
      name: Priority
      description: Set the priority level (also sets ttl to 0).
      selector:
        select:
          mode: dropdown
          options:
            - high
            - default
            - low
            - min
    sticky:
      name: Sticky
      description: Keep the notification from being dismissed when the user selects it.
      selector:
        constant:
          value: "true"
          label: Sticky
    color:
      name: Notification Color
      description: Set the color of the notification.
      selector:
        text:
    vibration:
      name: Vibration Pattern
      description: Set the vibration pattern for the channel.
      selector:
        text:
    enable_debug:
      name: Enable debug output?
      selector:
        constant:
          value: true
          label: Enabled

  sequence:
    - alias: Set local variables for reuse in this script.
      variables:
        debug: "{{ iif(enable_debug is defined, enable_debug, false) }}"
        notification_service: notify.{{ who }}
        title: "{{ title | default('', true) }}"
        message: "{{ message | default('', true) }}"
        data:
          subject: "{{ subtitle | default(none, true) }}"
          clickAction: "{{ url | default('lovelace/main', true) }}"
          group: "{{ group | default('Home Assistant') }}"
          channel: "{{ channel | default(none, true) }}"
          importance: "{{ importance | default(none, true) }}"
          priority: "{{ priority | default(none, true) }}"
          ttl: "{{ iif(priority == 'high', '0', none) }}"
          tag: "{{ tag | default(none, true) }}"
          sticky: "{{ sticky | default(none, true) }}"
          actions: "{{ actions | default(none, true) }}"
          icon_url: "{{ icon_url | default(none, true) }}"
          image: "{{ image | default(none, true) }}"
          video: "{{ video | default(none, true) }}"
          camera: "{{ camera | default(none, true) }}"
          notification_icon: "{{ notification_icon | default(none, true) }}"
          color: |-
            {%- if color is defined -%}
              {%- if color is string -%}
                {{ color }}
              {%- elif color is iterable -%}
                #{{ "%02x%02x%02x" | format(color[0], color[1], color[2]) }}
              {%- endif -%}
            {%- else -%}
              {{ none }}
            {%- endif -%}
          vibrationPattern: "{{ vibration | default(none, true) }}"
        notify_data: |-
          {%- set _ = namespace(data={}) -%}
          {%- for k, v in data.items() -%}
            {%- if not v == None -%}
              {%- set _.data = dict(_.data, **{k:v}) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ _.data }}

    - alias: >-
        Set enable_debug = true above to provide output troubleshooting
        information.
      if:
        - condition: template
          value_template: "{{ debug == true }}"
      then:
        - action: persistent_notification.create
          data:
            notification_id: notify_mobile
            title: "DEBUG: script.notify_mobile"
            message: |-
              send_message: {{ states("input_boolean.mobile_notifications") }}
              notification_service: {{ notification_service }}
              title: {{ title }}
              message: {{ message }}
              data: {{ notify_data }}

    - alias: Only send the message if notifications are enabled.
      condition: state
      entity_id: input_boolean.mobile_notifications
      state: "on"

    - choose:
        - alias: Send camera stream.
          conditions:
            - condition: template
              value_template: "{{ camera is string }}"
          sequence:
            - alias: Send notification message.
              action: "{{ notification_service }}"
              data:
                title: "{{ title }}"
                message: "{{ message }}"
                data: |-
                  {%- set notify_data = dict(notify_data, **{
                    "image": "/api/camera_proxy/" ~ camera,
                    "tag": camera | replace(".", "_")
                  }) -%}
                  {{ notify_data }}

        - alias: Send an image.
          conditions:
            - condition: template
              value_template: "{{ image is string }}"
          sequence:
            - alias: Send notification message.
              action: "{{ notification_service }}"
              data:
                title: "{{ title }}"
                message: "{{ message }}"
                data: |-
                  {%- set notify_data = dict(notify_data, **{
                    "image": image
                  }) -%}
                  {{ notify_data }}

        - alias: Send a video.
          conditions:
            - condition: template
              value_template: "{{ video is string }}"
          sequence:
            - alias: Send notification message.
              action: "{{ notification_service }}"
              data:
                title: "{{ title }}"
                message: "{{ message }}"
                data: |-
                  {%- set notify_data = dict(notify_data, **{
                    "video": video
                  }) -%}
                  {{ notify_data }}

      default:
        - alias: Send a basic, link, or actionable notification message.
          action: "{{ notification_service }}"
          data:
            title: "{{ title }}"
            message: "{{ message }}"
            data: |-
              {%- set notify_data = dict(notify_data, **{
                "icon_url": icon_url | default("local/icons/home-assistant.png")
              }) -%}
              {{ notify_data }}
