---
# Source: https://github.com/brianhanifin/Home-Assistant-Config/blob/master/scripts/notifications/inovelli_led/inovelli_led.yaml
#
# Calculation References:
#   https://nathanfiscus.github.io/inovelli-notification-calc/
#   https://community.inovelli.com/t/home-assistant-2nd-gen-switch-rgb-working/168/62
#   https://docs.google.com/spreadsheets/d/14wTP4OL4hkDK3Et5kYL4fyxPIK_R9JR3cgFxSa6dhyw/edit?usp=sharing
#
# Changes:
#   May 26, 2022
#   1. First release removing support for the deprecated OpenZWave and ZWave integrations.
#   2. Added support for the White LED color.
#     * @kschlichter and @mwav3 thank you for your help.
#     * Support for the color white was supposedly added to the LZW31-SN dimmer
#       in Firmware 1.45 accoding to Inovelli <https://support.inovelli.com/portal/en/kb/articles/firmware-change-log-lzw31-sn-dimmer-switch-red-series>.
#     * I ended up having to flash both LZW31-SN Z-Wave 1.61 and LZW31-SN Holtek 1.45 firmware twice
#       before I could see white light.
#   3. Added support Added support to send the same notification to multiple Inovelli switches and dimmers.
#      (Thanks to Danny Schuh)'s contribution to the blueprint.)
#
inovelli_led:
  alias: 'Inovelli LED'
  description: 'Set LED effects for Inovelli switches and dimmers.'
  icon: mdi:led-on
  mode: parallel

  variables:
    # Set to true to create a "persistent_notification" with debugging information.
    debug: '{{ iif(enable_debug is defined, enable_debug, false) }}'

    entity_list: '{{ entity_id }}'
    level: "{{ level|default(4)|int(default=0) }}"
    duration: '{{ duration|default("Indefinitely")|title }}'
    effect: '{{ effect|default("Blink")|title }}'

    parameters:
      dimmer: 16
      combo_light: 24
      combo_fan: 25
      switch: 8
    colors: !include ../../templates/inovelli_colors_values.yaml
    durations: !include ../../templates/inovelli_durations_values.yaml
    effects_dimmer:
      'Off': 0
      'Solid': 1
      'Chase': 2
      'Fast Blink': 3
      'Blink': 4
      'Pulse': 5
    effects_switch:
      'Off': 0
      'Solid': 1
      'Chase': 3
      'Fast Blink': 2
      'Blink': 3
      'Pulse': 4

  sequence:
    - variables:
        level: '{{ level|default(4)|int(default=0) }}'
        duration: '{{ durations[duration] }}'
        color: |-
          {% if color is not number %}
            {% set color = color|default("Yellow")|title %}
          {% else %}
            {% set color = color|int(default=0) %}
          {% endif %}
          {{ colors[color|title]|int(default=0) }}

    # Loop through each entity_id
    - repeat:
        for_each: '{{ entity_list }}'
        sequence:
          - variables:
              # Automatically extract the model name.
              model_name: |-
                {% set model_name = device_attr(repeat.item, "model") %}
                {% if "-" in model_name %}
                  {{ model_name.split("-")[0] }}
                {% else %}
                  {{ model_name }}
                {% endif %}
              # 1st. Use the automatically detected "model_name".
              # 2nd. Assume the model type is "dimmer".
              model_type: |-
                {% if model_name is string %}
                  {% if "LZW31" in model_name %}
                    dimmer
                  {% elif "LZW36" in model_name %}
                    {% set domain = repeat.item.split(".")[0] %}
                    {% if domain == "fan" %}
                      combo_fan
                    {% else %}
                      combo_light
                    {% endif %}
                  {% else %}
                    switch
                  {% endif %}
                {% else %}
                  dimmer
                {% endif %}
              parameter: "{{ parameters[model_type|lower]|int(default=0) }}"
              effect: |-
                {% if model_type == "switch" %}
                  {{- effects_switch[effect|default("Blink")|title] }}
                {% else %}
                  {{- effects_dimmer[effect|default("Blink")|title] }}
                {% endif %}

              # Perform the Inovelli math.
              inovelli_math: |-
                {% if effect|int(default=0) > 0 %}
                  {{ color|int(default=0) + (level|int(default=0) * 256) + (duration|int(default=0) * 65536) + (effect|int(default=0) * 16777216) }}
                {% else %}
                  0
                {% endif %}

          # Set debug = true above to provide output troubleshooting information.
          - choose:
              - conditions:
                  - '{{ debug == true }}'
                sequence:
                  - service: script.debug
                    data:
                      id: 'inovelli_led'
                      title: 'DEBUG: script.inovelli_led'
                      message: |
                        device: {{ repeat.item }}
                        model_name: {{ model_name }}
                        model_type: {{ model_type }}
                        color: {{ color|title }}
                        level: {{ level }}
                        duration: {{ duration|title }}
                        effect: {{ effect|title }}
                        parameter: {{ parameter }}
                        inovelli_math: {{ inovelli_math }}

          # Clear the previous effect.
          - service: zwave_js.bulk_set_partial_config_parameters
            target:
              entity_id: "{{ repeat.item }}"
            data:
              parameter: "{{ parameter }}"
              value: '16714410'

          # Start the new effect, unless we were just turning it off.
          - choose:
              - conditions: '{{ inovelli_math > 0 }}'
                sequence:
                  - service: zwave_js.bulk_set_partial_config_parameters
                    target:
                      entity_id: "{{ repeat.item }}"
                    data:
                      parameter: "{{ parameter }}"
                      value: "{{ inovelli_math }}"

  fields:
    entity_id:
      name: Entities
      description: Inovelli devices to set effects.
      example: light.family_room
      required: true
      selector:
        entity:
          domain:
            - light
            - switch
          integration: zwave_js
          multiple: true
    color:
      name: 'LED Color'
      default: Yellow
      example: Yellow
      selector:
        select:
          options: !include ../../templates/inovelli_colors_select.yaml
    level:
      name: Brightness level
      description: Value from 0 (off) to 10 (100% brightness).
      default: 4
      example: '4'
      selector:
        number:
          min: 0
          max: 10
    effect:
      name: 'Effect'
      default: Blink
      example: Blink
      selector:
        select:
          options: !include ../../templates/inovelli_effects_select.yaml
    duration:
      name: 'Duration'
      description: 'How long should the effect run?'
      default: Indefinitely
      example: 10 seconds
      selector:
        select:
          options: !include ../../templates/inovelli_durations_select.yaml
    enable_debug:
      name: Enable debug output?
      default: false
      selector:
        boolean:
