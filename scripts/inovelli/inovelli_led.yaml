---
# Calculation References:
#   https://nathanfiscus.github.io/inovelli-notification-calc/
#   https://community.inovelli.com/t/home-assistant-2nd-gen-switch-rgb-working/168/62
#   https://docs.google.com/spreadsheets/d/1bEpujdvBPZY9Fl61PZLUWuHanD2VAkRORFZ5D9xjLzA/edit?usp=sharing
#
# Changes:
#   July 22, 2020: Incorporating changes from Kevin Schlichter.
#     https://github.com/kschlichter/Home-Assistant-Inovelli-Red-Dimmer-Switch
#
#   September 17, 2020: There are some massive improvements to my version of this code. Here are the highlights:
#     1. Choose - using the recently added choose: feature a separate call has been created for the Z-wave and OZW
#        versions of the service call.
#     2. Variables - using 0.115’s new variables: feature the variables sent each service call only have to be
#        calculated once.
#     3. Supported Features - I realized that I could probably tell the difference between modules using the
#        “supported_features” attribute of each switch. For example my dimmer’s supported features is “33”.
#
#   September 18, 2020: Added "model" parameter with options of dimmer, switch, combo_light, combo_fan. This replaces
#     supported_features as the combo fan/light switch also had the same supported_features value.
#
#   February 24, 2021: Added support for Z-Wave JS in place of OpenZwave (ozw).
#     The ozw code is remarked out for those that still need it.
#
#   February 27, 2021:
#     1. Added zwave_integration at top of "variables:" section to allow users to define which integration is
#        installed ("zwave", "ozw", "zwave_js"). I just don't see a simple way to auto-detect this.
#     2. Added a comment describing the "model" variable.
#     3. Replaced personal "script.debug" service call with universal "persistent_notification.create".
#        Unremarking these lines could help you troubleshoot why something isn't working as expected.
#     4. Updated broken spreadsheet link with public copy stored in my Google Docs account.
#        Thanks for the heads up Kevin Schlichter!
#
#   March 26, 2021
#     1. Added fields to help users experimenting in the Services Developer Tool.
#
#   April 3, 2021
#   Incorporated @firstof9's changes:
#     1. Set execution mode to "parallel" to all this script to potentially run on more than one devices simultaneously.
#     2. Implement ZWave JS's new zwave_js.bulk_set_partial_config_parameters command.
#   Source: https://gist.github.com/firstof9/b88d072a81c54b314fe7ddb901fc5c29
#
#   May 10, 2021
#   Incorporated @koconut's corrected "Off code".
#   Source: https://community.home-assistant.io/t/inovelli-z-wave-red-series-notification-led/165483/146
#
inovelli_led:
  alias: 'Inovelli LED'
  description: 'Set a LED effect for Inovelli switches'
  icon: mdi:led-on
  mode: parallel

  variables:
    # * Use the passed model type ("dimmer", "switch", "combo_light") when present.
    # * If not present, then attempt to identify the type using the device "model" attribute.
    # * Otherwise assume the model type is "dimmer".
    model: |
      {%- if model is string -%}
        {{ model }}
      {%- elif device_attr(entity_id, "model") is string -%}
        {%- if "LZW31" in device_attr(entity_id, "model") -%}
          dimmer
        {%- elif "LZW36" in device_attr(entity_id, "model") -%}
          combo_light
        {%- else -%}
          switch
        {%- endif -%}
      {%- else -%}
        dimmer
      {%- endif -%}
    parameters:
      dimmer: 16
      combo_light: 24
      combo_fan: 25
      switch: 8
    # Only used for debug output.
    node_id: '{{ state_attr(entity_id, "node_id") }}'
    color: |
      {%- if color is not number -%}
        {{ color|default("Yellow")|title }}
      {%- else -%}
        {{ color|int }}
      {%- endif -%}
    level: '{{ level|default(4)|int }}'
    duration: '{{ duration|default("Indefinitely")|title }}'
    effect: '{{ effect|default("Blink")|title }}'
    colors: !include ../../templates/inovelli_colors_values.yaml
    durations: !include ../../templates/inovelli_durations_values.yaml
    effects_dimmer:
      'Off': 0
      'Solid': 1
      'Chase': 2
      'Fast Blink': 3
      'Blink': 4
      'Pulse': 5
    effects_switch:
      'Off': 0
      'Solid': 1
      'Chase': 3
      'Fast Blink': 2
      'Blink': 3
      'Pulse': 4

  sequence:
    # Perform the Inovelli math.
    - variables:
        parameter: '{{ parameters[model|lower] }}'
        color: '{{ colors[color|title]|int }}'
        duration: '{{ durations[duration|title] }}'
        effect: |
          {%- if model == "switch" -%}
            {{ effects_switch[effect|title] }}
          {%- else -%}
            {{ effects_dimmer[effect|title] }}
          {%- endif -%}
        inovelli_math: '{{ color|int + (level|int * 256) + (duration|int * 65536) + (effect|int * 16777216) }}'

    # Set enabled to true to provide a notification with troubleshooting information.
    - service: script.debug
      enabled: false
      data:
        id: 'inovelli_led'
        title: 'DEBUG: script.inovelli_led'
        message: |
          model: {{ model }}
          color: '{{ color|title }}'
          level: '{{ level }}'
          duration: '{{ duration|title }}'
          effect: '{{ effect|title }}'
          node_id: '{{ node_id }}'
          parameter: '{{ parameter }}'
          value: '{{ inovelli_math }}'

    # Clear the previous effect.
    - service: zwave_js.bulk_set_partial_config_parameters
      target:
        entity_id: '{{ entity_id }}'
      data:
        parameter: '{{ parameter }}'
        value: '16714410'

    # Start the new effect, unless we were just turning it off.
    - if:
        - condition: template
          value_template: '{{ inovelli_math > 0 }}'
      then:
        - service: zwave_js.bulk_set_partial_config_parameters
          target:
            entity_id: "{{ entity_id }}"
          data:
            parameter: "{{ parameter }}"
            value: "{{ inovelli_math }}"

  fields:
    entity_id:
      description: 'Light or switch'
      example: 'switch.inovelli_lzw30_sn_switch_red_series'
      selector:
        device:
          integration: zwave_js
          manufacturer: Inovelli
    model:
      description: 'Device type (optional)'
      example: dimmer
      selector:
        select:
          options:
            - dimmer
            - switch
            - combo_light
            - combo_fan
    color:
      description: 'LED Color'
      example: Red
      selector:
        select:
          options: !include ../../templates/inovelli_colors_select.yaml
    effect:
      description: 'Effect to use'
      example: Pulse
      selector:
        select:
          options: !include ../../templates/inovelli_effects_select.yaml
    duration:
      description: 'How long should the effect run?'
      example: 10 seconds
      selector:
        select:
          options: !include ../../templates/inovelli_durations_select.yaml
    level:
      description: 'LED brightness'
      example: '10'
      selector:
        number:
          min: 1
          max: 10
