---
inovelli_led_status_start:
  alias: "Inovelli LED [Status Start]"
  description: "Set a LED effect and check for state "
  icon: mdi:led-off

  fields:
    entity_id:
      description: "ZWave entity"
      example: "zwave.inovelli_lzw30_sn_switch_red_series"
    model:
      description: "Device type [ dimmer | switch | combo_light | combo_fan ]"
      example: "dimmer"
    color:
      description: "LED Color [ 0-255 | Off | Red | Orange | Yellow | Green | Cyan | Teal | Blue | Purple | Light Pink | Pink | White ]"
      example: "Red"
    level:
      description: "LED brightness [ 1-10 ]"
      example: "10"
    duration:
      description: "How long to initially apply the effect"
      example: "15 Seconds"
    effect:
      description: "Effect to use [ Off | Solid | Chase | Fast Blink | Blink | Pulse ]"
      example: "Pulse"
    state_entity:
      description: "Entity to monitor"
      example: "cover.garage_door"
    state:
      description: "State value"
      example: "open"

  variables:
    entity_id: '{{ entity_id|default("zwave.inovelli_lzw30_sn_switch_red_series") }}'
    model: |
      {%- if model is string -%}
        {{ model }}
      {%- elif state_attr(entity_id, 'product_name') is string -%}
        {%- if 'LZW31' in state_attr(entity_id, 'product_name') -%}
          dimmer
        {%- elif 'LZW36' in state_attr(entity_id, 'product_name') -%}
          combo_light
        {%- else -%}
          switch
        {%- endif -%}
      {%- else -%}
        dimmer
      {%- endif -%}
    color: |
      {%- if color is not number -%}
        {{ color|default("Yellow")|title }}
      {%- else -%}
        {{ color|int }}
      {%- endif -%}
    level: '{{ level|default("8")|int }}'
    duration: '{{ duration|default("15 Seconds")|title }}'
    effect: '{{ effect|default("Blink")|title }}'
    state_entity: '{{ state_entity|default("none") }}'
    state: '{{ state|default("false") }}'

  sequence:
    - service: script.inovelli_led
      data:
        entity_id: "{{ entity_id }}"
        model: "{{ model }}"
        color: "{{ color }}"
        effect: "{{ effect }}"
        duration: "{{ duration }}"
        level: "{{ level }}"

    # If the state remains after a short delay then change the effect to something less attention grabbing.
    - delay:
        seconds: 14
    - condition: template
      value_template: "{{ states(state_entity) == state }}"

    - service: script.inovelli_led
      data_template:
        entity_id: "{{ entity_id }}"
        model: "{{ model }}"
        color: "{{ color }}"
        effect: Solid
        duration: Indefinitely
        level: 4
