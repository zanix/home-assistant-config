---
alias: "[Notify] Garage Door Left Open"
description: "Sends notification if the garage door is open longer than 30 minutes"
trigger:
  platform: time_pattern
  minutes: "*"
condition:
  condition: and
  conditions:
    - condition: state
      entity_id: cover.garage_door
      state: "open"
    - condition: state
      entity_id: sensor.occupancy_garage
      state: "Clear"
    - condition: template
      value_template: >-
        {%- set entity = states.cover.garage_door -%}
        {%- set current = as_timestamp(now()) -%}
        {%- if entity.state -%}
          {%- set changed = ((current - as_timestamp(entity.last_changed)) / 60)|int -%}
          {{ changed >= 30 and changed % 30 == 0 }}
        {% endif -%}
variables:
  message: >-
    {%- macro parse_last_changed(entity) -%}
      {%- if entity.state -%}
        {%- set uptime = (as_timestamp(now()) - as_timestamp(entity.last_changed))|int -%}
        {%- set minutes = ((uptime % 3600) / 60)|int -%}
        {%- set hours = ((uptime % 86400) / 3600)|int -%}
        {%- set days = (uptime / 86400)|int -%}
        {%- if days > 0 -%}
          {{ days }} day{% if days > 1 %}s{% endif %}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if days > 0 %} {% endif -%}
          {{ hours }} hour{% if hours > 1 %}s{% endif %}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if hours > 0 or days > 0 %} {% endif -%}
          {{ minutes }} minute{% if minutes > 1 %}s{% endif %}
        {%- endif -%}
      {% endif -%}
    {%- endmacro -%}
    The {{ state_attr('cover.garage_door', 'friendly_name') }} has been open for {{ parse_last_changed(states.cover.garage_door) }}.
action:
  - service: notify.join_all
    data_template:
      title: Garage Door Open
      message: "{{ message }}"
      data:
        icon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/garage-open.png"
        smallicon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/home-assistant.png"

  - condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.voice_alerts
        state: "on"
      - condition: time
        after: "07:00:00"
        before: "21:00:00"

  - service: tts.cloud_say
    entity_id: media_player.living_room_speaker
    data_template:
      message: "{{ message }}"
      cache: false
