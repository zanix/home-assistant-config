blueprint:
  name: Z2M - Inovelli 2-in-1 switch + dimmer Scene Controls
  description: |
    For Inovelli Blue Series 2-in-1 switch + dimmer, model VZM31-SN
    Allows setting a few different actions such as 2,3,4,5 clicking the up/down and config buttons.

  domain: automation
  source_url: https://community.home-assistant.io/t/z2m-inovelli-blue-series-2-in-1-switch-dimmer/484422
  input:
    switch:
      name: Switch
      description: Inovelli Switch (action). For example, "event.INOVELLI_SWITCH_action"
      selector:
        entity:
          domain: event
    config_held:
      name: Hold Config
      description: Action to run
      default: []
      selector:
        action:
    config_release:
      name: Release Config
      description: Action to run
      default: []
      selector:
        action:
    config_single:
      name: Single Click Config
      description: Action to run
      default: []
      selector:
        action:
    config_double:
      name: Double Click Config
      description: Action to run
      default: []
      selector:
        action:
    config_triple:
      name: 3x Click Config
      description: Action to run
      default: []
      selector:
        action:
    config_quadruple:
      name: 4x Click Config
      description: Action to run
      default: []
      selector:
        action:
    config_quintuple:
      name: 5x Click Config
      description: Action to run
      default: []
      selector:
        action:
    down_held:
      name: Hold Down
      description: Action to run
      default: []
      selector:
        action:
    down_release:
      name: Release Down
      description: Action to run
      default: []
      selector:
        action:
    down_single:
      name: Single Click Down
      description: This will trigger an/some action(s), but also, it will probably turn off the switch locally.
      default: []
      selector:
        action:
    down_double:
      name: Double Click Down
      description: Action to run
      default: []
      selector:
        action:
    down_triple:
      name: 3x Click Down
      description: Action to run
      default: []
      selector:
        action:
    down_quadruple:
      name: 4x Click Down
      description: Action to run
      default: []
      selector:
        action:
    down_quintuple:
      name: 5x Click Down
      description: Action to run
      default: []
      selector:
        action:
    up_held:
      name: Hold Up
      description: Action to run
      default: []
      selector:
        action:
    up_release:
      name: Release Up
      description: Action to run
      default: []
      selector:
        action:
    up_single:
      name: Single Click Up
      description: This will trigger an/some action(s), but also, it will probably turn on the switch locally.
      default: []
      selector:
        action:
    up_double:
      name: Double Click Up
      description: Action to run
      default: []
      selector:
        action:
    up_triple:
      name: 3x Click Up
      description: Action to run
      default: []
      selector:
        action:
    up_quadruple:
      name: 4x Click Up
      description: Action to run
      default: []
      selector:
        action:
    up_quintuple:
      name: 5x Click Up
      description: Action to run
      default: []
      selector:
        action:



mode: parallel
max_exceeded: silent


triggers:
  - trigger: state
    entity_id: !input switch
    not_from: unavailable

actions:
  - variables:
      command: "{{ trigger.to_state.attributes.event_type }}"
  - choose:
      - conditions:
          - "{{ command == 'config_double' }}"
        sequence: !input config_double
      - conditions:
          - "{{ command == 'config_held' }}"
        sequence: !input config_held
      - conditions:
          - "{{ command == 'config_quadruple' }}"
        sequence: !input config_quadruple
      - conditions:
          - "{{ command == 'config_quintuple' }}"
        sequence: !input config_quintuple
      - conditions:
          - "{{ command == 'config_release' }}"
        sequence: !input config_release
      - conditions:
          - "{{ command == 'config_single' }}"
        sequence: !input config_single
      - conditions:
          - "{{ command == 'config_triple' }}"
        sequence: !input config_triple
      - conditions:
          - "{{ command == 'down_double' }}"
        sequence: !input down_double
      - conditions:
          - "{{ command == 'down_held' }}"
        sequence: !input down_held
      - conditions:
          - "{{ command == 'down_quadruple' }}"
        sequence: !input down_quadruple
      - conditions:
          - "{{ command == 'down_quintuple' }}"
        sequence: !input down_quintuple
      - conditions:
          - "{{ command == 'down_release' }}"
        sequence: !input down_release
      - conditions:
          - "{{ command == 'down_single' }}"
        sequence: !input down_single
      - conditions:
          - "{{ command == 'down_triple' }}"
        sequence: !input down_triple
      - conditions:
          - "{{ command == 'up_double' }}"
        sequence: !input up_double
      - conditions:
          - "{{ command == 'up_held' }}"
        sequence: !input up_held
      - conditions:
          - "{{ command == 'up_quadruple' }}"
        sequence: !input up_quadruple
      - conditions:
          - "{{ command == 'up_quintuple' }}"
        sequence: !input up_quintuple
      - conditions:
          - "{{ command == 'up_release' }}"
        sequence: !input up_release
      - conditions:
          - "{{ command == 'up_single' }}"
        sequence: !input up_single
      - conditions:
          - "{{ command == 'up_triple' }}"
        sequence: !input up_triple
