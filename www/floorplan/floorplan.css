/**
 * Animations
 */

/* Door open clockwise */
@keyframes doorOpen {
  100% { transform: rotate(90deg); }
}
@keyframes doorClose {
  0% { transform: rotate(90deg); }
  100% { transform: none; }
}

/* Door open counter-clockwise */
@keyframes doorOpenCCW {
  100% { transform: rotate(-90deg); }
}
@keyframes doorCloseCCW {
  0% { transform: rotate(-90deg); }
  100% { transform: none; }
}

/* Door Angled open clockwise */
@keyframes doorOpenDownRight {
  100% { transform: rotate(45deg); }
}
@keyframes doorCloseDownRight {
  0% { transform: rotate(45deg); }
  100% { transform: rotate(-45deg); }
}

/* Door Angled open counter-clockwise */
@keyframes doorOpenDownLeft {
  100% { transform: rotate(-45deg); }
}
@keyframes doorCloseDownLeft {
  0% { transform: rotate(-45deg); }
  100% { transform: rotate(45deg); }
}

/* Door slide open left/right */
@keyframes slideRight {
  0% { transform: translateX(0%); }
  100% { transform: translateX(-100%); }
}
@keyframes slideLeft {
  0% { transform: translateX(-100%); }
  100% { transform: none; }
}

/* Door slide open up/down */
@keyframes slideUp {
  0% { transform: translateY(0%); }
  100% { transform: translateY(-100%); }
}
@keyframes slideDown {
  0% { transform: translateY(-100%); }
  100% { transform: none; }
}

/* Fade */
@keyframes fadeIn {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes fadeOut {
  0% { opacity: 1; }
  100% { opacity: 0; }
}

/* Breathing */
@keyframes breathing {
  0% { transform: scale(1); }
  25% { transform: scale(0.6); }
  60% { transform: scale(3); }
  100% { transform: scale(1); }
}

/* Spinning */
@keyframes spin {
  100% { transform: rotate(-360deg); }
}

/* Cleaning */
@keyframes cleaning {
  0% {
    transform: rotate(0deg) translate(0px);
  }
  5% {
    transform: rotate(0deg) translate(0px, -3px);
  }
  10% {
    transform: rotate(0deg) translate(0px, 1px);
  }
  15% {
    transform: rotate(0deg) translate(0px);
  }
  20% {
    transform: rotate(30deg) translate(0px);
  }
  25% {
    transform: rotate(30deg) translate(0px, -3px);
  }
  30% {
    transform: rotate(30deg) translate(0px, 1px);
  }
  35% {
    transform: rotate(30deg) translate(0px);
  }
  40% {
    transform: rotate(0deg) translate(0px);
  }
  45% {
    transform: rotate(-30deg) translate(0px);
  }
  50% {
    transform: rotate(-30deg) translate(0px, -3px);
  }
  55% {
    transform: rotate(-30deg) translate(0px, 1px);
  }
  60% {
    transform: rotate(-30deg) translate(0px);
  }
  70% {
    transform: rotate(0deg) translate(0px);
  }
  100% {
    transform: rotate(0deg);
  }
}

#background {
  fill: transparent;
}

/* SVG shapes */

svg, svg * {
  pointer-events: all !important;
  transition: fill 1.5s ease, stroke 1.5s ease;
}

/* .floorplan-shape {
  transition: fill 2s ease, stroke 2s ease;
} */

/* Hover */
.floorplan-shape:hover,
g.floorplan-hover > :not(text):hover,
g.floorplan-click > :not(text):hover,
g.floorplan-long-click > :not(text):hover,
:not(text).floorplan-hover:hover,
:not(text).floorplan-click:hover, 
:not(text).floorplan-long-click:hover {
  stroke: #03a9f4 !important;
  stroke-width: 2px !important;
  stroke-opacity: 1 !important;
  paint-order: markers stroke fill !important;
}

/* Static Text */

.static-text {
  font-family: var(--paper-font-title_-_font-family);
  font-weight: bold;
  fill: #ffffa6;
}

/* Bootstrap success */

.success-text {
  fill: #3c763d !important;
}

.success-background, .success-text-background {
  fill: #dff0d8 !important;
  fill-opacity: 1 !important;
  stroke: #d6e9c6 !important;
  stroke-width: 1px !important;
}

/* Bootstrap info */

.info-text {
  fill: #31708f !important;
}

.info-background, .info-text-background {
  fill: #d9edf7 !important;
  fill-opacity: 1 !important;
  stroke: #bce8f1 !important;
  stroke-width: 1px !important;
}

/* Bootstrap warning */

.warning-text {
  fill: #8a6d3b !important;
}

.warning-background, .warning-text-background  {
  fill: #fcf8e3 !important;
  fill-opacity: 1 !important;
  stroke: #faebcc !important;
  stroke-width: 1px !important;
}

/* Bootstrap danger */

.danger-text {
  fill: #a94442 !important;
}

.danger-background, .danger-text-background {
  fill: #f2dede !important;
  fill-opacity: 1 !important;
  stroke: #ebccd1 !important;
  stroke-width: 1px !important;
}

/* Visibility */

.layer-visible {
}

.layer-hidden {
  display: none;
}

/* Last motion entity */

.last-motion {
  stroke: #808080 !important;
  stroke-width: 1px !important;
  stroke-opacity: 1 !important;
}


/* Origin points /*
/* Set as a class in SVG in many cases */

.origin-tl {
  transform-origin: top left;
}
.origin-tr {
  transform-origin: top right;
}
.origin-bl {
  transform-origin: bottom left;
}
.origin-br {
  transform-origin: bottom right;
}

/* Locks */

.unlocked {
  fill: var(--red-color) !important;
}
.locked {
  fill: var(--lime-color) !important;
}

/* Motion */

.room-no-motion {
  fill-opacity: 0 !important;
  cursor: default !important;
}
.room-motion {
  fill-opacity: 1 !important;
  cursor: default !important;
}

/* Alarm Panel */

.alarm-disarmed {
  fill: #3c763d !important;
}
.alarm-armed {
  fill: #8a6d3b !important;
}

/* Camera */

.camera-idle,
.camera-recording {
  fill: var(--light-blue-color) !important;
}

/* Light */

.light-off,
.light-off > * {
  fill: #585959 !important;
}
.light-on,
.light-on > * {
  fill: var(--yellow-color) !important;
}

/* Doors / Windows */

.door,
.slider,
.slider > .fill {
  animation-duration: 2s;
  animation-fill-mode: forwards;
  transform-box: fill-box;
}
.slider.closed,
.door.closed,
.window-closed,
.slider.closed > .fill {
  fill: #00adee !important;
}
.slider.open,
.door.open,
.window-open,
.slider.open > .fill {
  fill: var(--red-color) !important;
}
.door.d-r {
  transform: rotate(-45deg);
}
.door.d-l {
  transform: rotate(45deg);
}

.door.closed { animation-name: doorClose; }
.door.open { animation-name: doorOpen; }
.door.ccw.closed { animation-name: doorCloseCCW; }
.door.ccw.open { animation-name: doorOpenCCW; }
.door.d-r.closed { animation-name: doorCloseDownRight; }
.door.d-r.open { animation-name: doorOpenDownRight; }
.door.d-l.closed { animation-name: doorCloseDownLeft; }
.door.d-l.open { animation-name: doorOpenDownLeft; }

/* Leak Sensors */

.leak-on {
  animation: breathing 1s ease-out infinite normal;
  stroke: var(--red-color) !important;
  fill: var(--red-color) !important;
  fill-opacity: 0.60;
  transition: fill 0.5s ease;
  stroke-opacity: 0.75 !important;
  stroke-width: 2px !important;
  transform-box: fill-box;
  transform-origin: center;
}
.leak-off {
  stroke: var(--blue-color) !important;
  transition: fill 0.5s ease;
  stroke-opacity: 0.75 !important;
  stroke-width: 2px !important;
}

/* Fans */

.spin {
  animation-name: spin;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  transform-origin: 50% 50%;
  transform-box: fill-box;
}

/* Slider */

.slider.right.closed { animation-name: slideRight; }
.slider.right.open { animation-name: slideLeft; }
.slider.up.closed { animation-name: slideDown; }
.slider.up.open { animation-name: slideUp; }

.slider.left.closed { animation-name: slideLeft; }
.slider.left.open { animation-name: slideRight; }
.slider.down.closed { animation-name: slideDown; }
.slider.down.open { animation-name: slideUp; }

/* Temperature sensor */

.temp-very-low-background > tspan {
  fill: #d9edf7 !important;
  fill-opacity: 1 !important;
}
.temp-below-average-background > tspan {
  fill: #dcefe8 !important;
  fill-opacity: 1 !important;
}
.temp-average-background > tspan {
  fill: #dff0d8 !important;
  fill-opacity: 1 !important;
}
.temp-very-high-background > tspan {
  fill: #f2dede !important;
  fill-opacity: 1 !important;
}

/* Media player, Device */

.device-off,
.mediaplayer-off {
  fill: var(--red-color) !important;
}
.device-on {
  fill: var(--lime-color) !important;
}
.mediaplayer-on {
  fill: var(--amber-color) !important;
}
.mediaplayer-idle {
  fill: var(--blue-grey-color) !important;
}
.mediaplayer-standby {
  fill: var(--light-blue-color) !important;
}
.mediaplayer-paused {
  fill: var(--yellow-color) !important;
}
.mediaplayer-playing {
  fill: var(--cyan-color) !important;
}

/* Robot vacuum */

.vacuum-off {
  fill: #585959 !important;
}
.vacuum-on {
  fill: var(--cyan-color) !important;
  animation: cleaning 10s linear infinite;
  transform-box: fill-box;
  transform-origin: center;
}
.vacuum-charging {
  fill: var(--orange-color) !important;
}
.vacuum-paused {
  fill: var(--yellow-color) !important;
}
.vacuum-return {
  fill: var(--purple-color) !important;
}
