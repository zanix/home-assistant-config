!function(){"use strict";var t=t||Object.getPrototypeOf(customElements.get("home-assistant-main"));const{html:e,css:i}=t.prototype;console.info("%c BATTERY-STATE-CARD %c 1.1.1","color: white; background: forestgreen; font-weight: 700;","color: forestgreen; background: white; font-weight: 700;");const n=(t,e="warn")=>{console[e]("[battery-state-card] "+t)},a=t=>(t=t.replace("#",""),{r:parseInt(t.substr(0,2),16),g:parseInt(t.substr(2,2),16),b:parseInt(t.substr(4,2),16)});class r{constructor(t,e,i){this.config=t,this.appearance=e,this.action=i,this._level="Unknown",this._charging=!1,this.updated=!1,this.colorPattern=/^#[A-Fa-f0-9]{6}$/,this._name=t.name||t.entity}get data_required_for(){var t;return(null===(t=this.config.charging_state)||void 0===t?void 0:t.entity_id)?[this.config.entity,this.config.charging_state.entity_id]:[this.config.entity]}set name(t){this.updated=this._name!=t,this._name=t}get name(){return this._name}set level(t){this.updated=this._level!=t,this._level=t}get level(){return isNaN(Number(this._level)),this._level}set charging(t){this.updated=this.updated||this.charging!=t,this._charging=t}get charging(){return this._charging}get levelColor(){var t,e;const i=Number(this._level);return this.charging&&(null===(t=this.config.charging_state)||void 0===t?void 0:t.color)?this.config.charging_state.color:isNaN(i)?"inherit":this.appearance.color_gradient&&this.isColorGradientValid(this.appearance.color_gradient)?function(t,e){e/=100;const i=t.map((e,i)=>({pct:1/(t.length-1)*i,color:a(e)}));let n=1;for(n=1;n<i.length-1&&!(e<i[n].pct);n++);const r=i[n-1],s=i[n],o=s.pct-r.pct,c=(e-r.pct)/o,l=1-c,h=c,g={r:Math.floor(r.color.r*l+s.color.r*h),g:Math.floor(r.color.g*l+s.color.g*h),b:Math.floor(r.color.b*l+s.color.b*h)};return"rgb("+[g.r,g.g,g.b].join(",")+")"}(this.appearance.color_gradient,i):(null===(e=(this.appearance.color_thresholds||[{value:20,color:"var(--label-badge-red)"},{value:55,color:"var(--label-badge-yellow)"},{value:101,color:"var(--label-badge-green)"}]).find(t=>i<=t.value))||void 0===e?void 0:e.color)||"inherit"}get icon(){var t;const e=Number(this._level);if(this.charging&&(null===(t=this.config.charging_state)||void 0===t?void 0:t.icon))return this.config.charging_state.icon;if(isNaN(e))return"mdi:battery-unknown";const i=10*Math.round(e/10);switch(i){case 100:return this.charging?"mdi:battery-charging-100":"mdi:battery";case 0:return this.charging?"mdi:battery-charging-outline":"mdi:battery-outline";default:return(this.charging?"mdi:battery-charging-":"mdi:battery-")+i}}get classNames(){return this.action?"clickable":""}update(t){var e;const i=t.states[this.config.entity];if(!i)return void n("Entity not found: "+this.config.entity,"error");let a;if(this.name=this.config.name||i.attributes.friendly_name,this.config.attribute)a=i.attributes[this.config.attribute];else{const t=[i.attributes.battery_level,i.attributes.battery,i.state];a=(null===(e=t.find(t=>null!=t))||void 0===e?void 0:e.toString())||"Unknown"}if(this.config.state_map){const t=this.config.state_map.find(t=>t.from==a);null==t?n(`Missing option for '${a}' in 'state_map'`):a=t.to.toString()}this.config.multiplier&&!isNaN(Number(a))&&(a=(this.config.multiplier*Number(a)).toString()),this.level=void 0===this.config.value_override?a:this.config.value_override,this.setChargingState(t)}setChargingState(t){const e=this.config.charging_state;if(!e)return;let i=this.level;if(e.entity_id){if(!t.states[e.entity_id])return void n(`'charging_state' entity id (${e.entity_id}) not found`);i=t.states[e.entity_id].state}this.charging=null==e.state?!!i:e.state==i}isColorGradientValid(t){if(!(t.length<2)){for(const e of t)if(!this.colorPattern.test(e))return n("Color '${color}' is not valid. Please provide valid HTML hex color in #XXXXXX format."),!1;return!0}n("Value for 'color_gradient' should be an array with at least 2 colors.")}}const s=t=>e`
<div class="battery ${t.classNames}" @click=${t.action}>
    <div class="icon">
        <ha-icon
            style="color: ${t.levelColor}"
            icon="${t.icon}"
        ></ha-icon>
    </div>
    <div class="name">
        ${t.name}
    </div>
    <div class="state">
        ${t.level}${isNaN(Number(t.level))?"":e`&nbsp;%`}
    </div>
</div>
`,o=(t,i)=>{return e`
<ha-card>
    ${t?(n=t,e`
<div class="card-header">
    <div class="name">
        ${n}
    </div>
</div>
`):""}
    <div class="card-content">
        ${i}
    </div>
</ha-card>
`;var n},c=(t,i)=>{const n="expander"+Math.random().toString().substr(2);return e`
    ${t.slice(0,i)}
    <input type="checkbox" class="expand" id="${n}" />
    <label for="${n}"><div>&lsaquo;</div></label>
    <div>${t.slice(i)}</div>
    `},l=()=>e``,h=i`.clickable{cursor: pointer;}.battery{display: flex;line-height: 40px;margin: 8px 0;}.battery .name{flex: 1 0 60px;margin-left: 16px;}.battery .icon{flex: 0 0 40px;border-radius: 50%;text-align: center;}.expand{display: none;}.expand + label{display: block;text-align: right;cursor: pointer;}.expand + label > div{display: inline-block;transform: rotate(-90deg);font-size: 26px;height: 29px;width: 29px;text-align: center;}.expand + label > div,.expand + label + div{transition: 0.5s ease-in-out;}.expand:checked + label > div{transform: rotate(-90deg) scaleX(-1);}.expand + label + div{max-height: 0;overflow: hidden;}.expand:checked + label + div{max-height: 1000px;}`,g={"more-info":t=>{const e=new Event("hass-more-info",{composed:!0});e.detail={entityId:t.entity.entity},t.card.dispatchEvent(e)},navigate:t=>{if(!t.config.navigation_path)return void n("Missing 'navigation_path' for 'navigate' tap action");window.history.pushState(null,"",t.config.navigation_path);const e=new Event("location-changed",{composed:!0});e.detail={replace:!1},window.dispatchEvent(e)},"call-service":t=>{if(!t.config.service)return void n("Missing 'service' for 'call-service' tap action");const[e,i]=t.config.service.split(".",2),a=Object.assign({},t.config.service_data);d.hass.callService(e,i,a)},url:t=>{t.config.url_path?window.location.href=t.config.url_path:n("Missing 'url_path' for 'url' tap action")}};class d{static getAction(t){return t.config&&"none"!=t.config.action?e=>{e.stopPropagation(),t.config.action in g?g[t.config.action](t):n("Unknown tap action type: "+t.config.action)}:null}}customElements.define("battery-state-card",class extends t{constructor(){super(...arguments),this.rawConfig="",this.config={},this.simpleView=!1,this.batteries=[]}static get properties(){return{batteries:Array,config:Object}}static get styles(){return h}setConfig(t){if(!t.entities&&!t.entity)throw new Error("You need to define entities");const e=JSON.stringify(t);if(this.rawConfig===e)return;this.rawConfig=e,this.config=t,this.simpleView=!!t.entity;let i=t.entity?[t]:t.entities.map(t=>("string"==typeof t&&(t={entity:t}),t));this.batteries=i.map(t=>new r(t,this.config,d.getAction({card:this,config:t.tap_action||this.config.tap_action||null,entity:t})))}set hass(t){d.hass=t;let e=!1;if(this.batteries.forEach((i,n)=>{i.update(t),e=e||i.updated}),e){switch(this.config.sort_by_level){case"asc":this.batteries.sort((t,e)=>this.sort(t.level,e.level));break;case"desc":this.batteries.sort((t,e)=>this.sort(e.level,t.level));break;default:this.config.sort_by_level&&n("Unknown sort option. Allowed values: 'asc', 'desc'")}this.batteries=[...this.batteries]}}render(){if(this.simpleView)return s(this.batteries[0]);if(0==this.batteries.length)return l;const t=this.batteries.map(t=>s(t));return o(this.config.name,this.config.collapse?[c(t,this.config.collapse)]:t)}getCardSize(){let t=this.batteries.length;return this.config.collapse&&(t=this.config.collapse+1),t+1}sort(t,e){let i=Number(t),n=Number(e);return i=isNaN(i)?-1:i,n=isNaN(n)?-1:n,i-n}})}();
//# sourceMappingURL=battery-state-card.js.map
