---
# This is a bootstrap for my Lovelace configuration.
#
# Views are included individually to guarentee the order of the tabs
# of the view in the UI.
#
title: Floorplan

views:
  - title: Floorplan
    icon: mdi:floor-plan
    panel: true
    cards:
      - type: custom:floorplan-card
        full_height: true
        config:
          image: /local/floorplan/floorplan.svg?v=1.1.14
          stylesheet: /local/floorplan/floorplan.css?v=1.1.14

          defaults:
            hover_action: hover-info
            tap_action: more-info
            hold_action: more-info
            hover_info_filter:
              - access_token
              - adb_response
              - app_id
              - app_name
              - attribution
              - color_mode
              - device_class
              - effect_list
              - entity_picture
              - entity_picture_local
              - friendly_name
              - frontend_stream_type
              - hdmi_input
              - hs_color
              - icon
              - ip
              - is_guest
              - is_volume_muted
              - is_wired
              - last_video_id
              - mac
              - manufacturer
              - max_color_temp_kelvin
              - max_mireds
              - media_position_updated_at
              - min_color_temp_kelvin
              - min_mireds
              - model
              - name
              - order
              - oui
              - percentage_step
              - qos_policy_applied
              - rate_limit_on
              - rate_limit_remaining
              - rate_limit_reset
              - rate_limit_reset_seconds
              - rate_limit_total
              - restored
              - sound_mode_list
              - source_list
              - source_type
              - state_class
              - supported_color_modes
              - supported_features
              - unit_of_measurement
              - video_url
              - volume_level
              - xy_color

          # log_level: debug
          console_log_level: warn

          rules:
            - name: Date
              entities:
                - sensor.date
              state_action:
                - service: floorplan.text_set
                  service_data: '${entity.state ? entity.state : "undefined"}'
                - service: floorplan.class_set
                  service_data:
                    class: 'static-text'

            - name: Time
              entities:
                - sensor.time
              state_action:
                - service: floorplan.text_set
                  service_data: '${entity.state ? entity.state : "undefined"}'
                - service: floorplan.class_set
                  service_data:
                    class: 'static-text'

            - name: Weather Icon
              entities:
                - sensor.openweathermap_condition
              state_action:
                - service: floorplan.image_set
                  service_data: |
                    >
                    var imageName = "";
                    switch (entity.state) {
                      case "sunny":
                      case "clr":
                      case "exceptional":
                        imageName = "clear-day";
                        break;
                      case "clear-night":
                        imageName = "clear-night";
                        break;
                      case "rainy":
                        imageName = "rain";
                        break;
                      case "snowy":
                        imageName = "snow";
                        break;
                      case "sleet":
                        imageName = "sleet";
                        break;
                      case "windy":
                      case "windy-variant":
                      case "wind_":
                        imageName = "wind";
                        break;
                      case "fog":
                        imageName = "fog";
                        break;
                      case "cloudy":
                        imageName = "cloudy";
                        break;
                      case "partlycloudy":
                        imageName = "partly-cloudy-day";
                        break;
                      case "partly-cloudy-night":
                        imageName = "partly-cloudy-night";
                        break;
                      case "hail":
                        imageName = "hail";
                        break;
                      case "thunderstorm":
                        imageName = "thunderstorm";
                        break;
                      default:
                        imageName = "cloudy";
                        break;
                    }
                    return "/local/icons/weather_icons/1c/" + imageName + ".svg";

            - name: Weather
              entities:
                - sensor.openweathermap_temperature
              state_action:
                - service: floorplan.text_set
                  service_data: '${entity.state ? Math.round(entity.state) + "Â°F" : "undefined"}'
                - service: floorplan.class_set
                  service_data: |
                    >
                    if (entity.state < 32)
                      return "temp-very-low-background";
                    else if (entity.state < 50)
                      return "temp-below-average-background";
                    else if (entity.state < 80)
                      return "temp-average-background";
                    else
                      return "temp-very-high-background";

            - name: Lights
              entities:
                - light.living_room
                - switch.front_entry_light
                - switch.garage_entry_light
                - light.living_room_floor_lamp
                - light.living_room_lamp
                - light.kitchen
                - switch.dining_room_light
                - switch.hallway_light
                - light.family_room
                - light.play_space
                - light.family_room_lamp
                - switch.stair_light
                - switch.office_shelf_led
                # - light.theater_room
                # - light.theater_walls
                - light.master_bedroom
                - light.master_bedroom_floor_lamp
                - light.ethan
                - switch.ethans_lamp
                # - light.emma
                - light.guest_room
                - light.outside_front
                - switch.outside_side_light
                - switch.outside_back_light
                - switch.xmas_light
                - light.garage
              tap_action:
                service: homeassistant.toggle
              state_action:
                - service: floorplan.class_set
                  service_data: '${entity.state === "on" ? "light-on" : "light-off"}'

            - name: Color Lights
              entities:
                - light.office_light
                - light.office_lamp
                - light.office_desk_led
              tap_action:
                service: homeassistant.toggle
              state_action:
                service: floorplan.style_set
                service_data: |
                  >
                  var elements = [
                    `${entity.entity_id}`,
                  ];

                  var color = 'rgb(88, 89, 89)';

                  if (entity.state === 'on') {
                    if (entity.attributes.rgb_color) {
                      var rgb = entity.attributes.rgb_color;
                      color = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;
                    }
                    else if (entity.attributes.color_temp) {
                      var rgb = util.color.miredToRGB(entity.attributes.color_temp);
                      color = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;
                    }
                  }
                  var style = `fill: ${color};`;

                  return {
                    elements: elements,
                    style: style,
                  };

            - name: Doors
              entities:
                - binary_sensor.front_door_is_open
                - binary_sensor.sliding_door_is_open
                - binary_sensor.garage_entry_door_is_open
                - binary_sensor.garage_side_door_is_open
                # - binary_sensor.entry_closet_door_is_open
                # - binary_sensor.laundry_door_is_open
                # - binary_sensor.master_bathroom_door_is_open
                # - binary_sensor.master_bedroom_closet_door_is_open
                # - binary_sensor.master_bedroom_door_is_open
                # - binary_sensor.bathroom_door_is_open
                # - binary_sensor.bathroom_closet_door_is_open
                # - binary_sensor.basement_bathroom_door_is_open
                # - binary_sensor.bedroom_1_door_is_open
                # - binary_sensor.bedroom_2_door_is_open
                # - binary_sensor.bedroom_3_door_is_open
                # - binary_sensor.bedroom_4_door_is_open
                # - binary_sensor.pantry_door_is_open
                # - binary_sensor.storage_closet_door_is_open
                # - binary_sensor.theater_room_door_is_open
                # - binary_sensor.utility_room_door_is_open
              tap_action: false
              hover_action: false
              state_action:
                service: floorplan.class_set
                service_data: |
                  >
                  var floorplan = element.dataset.floorplan;
                  var state = entity.state === "on" ? "open" : "closed";
                  return `${floorplan} ${state}`;

            # - name: Windows
            #   entities:
            #     - sensor.window_bedroom_m
            #     - sensor.window_bathroom_m
            #     - sensor.window_living_room_1
            #     - sensor.window_living_room_2
            #     - sensor.window_dining_room_1
            #     - sensor.window_dining_room_2
            #     - sensor.window_kitchen
            #     - sensor.window_bedroom_1
            #     - sensor.window_bedroom_2
            #     - sensor.window_garage
            #     - sensor.window_family_room_1
            #     - sensor.window_family_room_2
            #     - sensor.window_bedroom_3
            #     - sensor.window_bedroom_4
            #   tap_action: false
            #   hover_action: false
            #   state_action:
            #     service: floorplan.class_set
            #     service_data: '${entity.state === "on" ? "window-open" : "window-closed"}'

            - name: Locks
              entities:
                - lock.lock_front
              state_action:
                service: floorplan.class_set
                service_data: '${entity.state === "locked" ? "locked" : "unlocked"}'

            - name: Covers
              entities:
                - cover.garage_door
              tap_action: false
              double_tap_action:
                service: homeassistant.toggle
              state_action:
                service: floorplan.class_set
                service_data: |
                  >
                  var floorplan = element.dataset.floorplan;
                  var state = ["Open", "Closing"].includes(entity.state) ? "open" : "closed";
                  return `${floorplan} ${state}`;

            - name: Leak Sensors
              entities:
                - binary_sensor.water_main_water_leak_detected
                - binary_sensor.basement_bathroom_leak_sensor_water_alarm_water_leak_detected
                - binary_sensor.bathroom_leak_sensor_water_alarm_water_leak_detected
                - binary_sensor.fridge_leak_sensor_water_alarm_water_leak_detected
                # - binary_sensor.dishwasher_leak_sensor_water_alarm_water_leak_detected
                - binary_sensor.laundry_leak_sensor_water_alarm_water_leak_detected
                - binary_sensor.master_bathroom_leak_sensor_water_alarm_water_leak_detected
                - binary_sensor.water_heater_leak_sensor_water_alarm_water_leak_detected
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "on") ? "leak-on" : "leak-off"}'

            - name: Fans
              entities:
                - switch.computer_exhaust_fan
                - fan.living_room
                - fan.master_bedroom
              state_action:
                service: floorplan.class_set
                service_data: |
                  >
                  if (entity.state === "on") {
                    if (entity.attributes.percentage === 25)
                      return "spin-low";
                    else if (entity.attributes.percentage === 50)
                      return "spin-medium";
                    else if (entity.attributes.percentage === 75)
                      return "spin-high";
                    else if (entity.state === "on" || entity.attributes.percentage === 100)
                      return "spin-full";
                  }
                  return "spin-off";

            - name: Motion
              entities:
                - binary_sensor.home_occupancy
                - binary_sensor.kitchen_occupancy
                - binary_sensor.family_room_occupancy
                - binary_sensor.master_bedroom_occupancy
                - binary_sensor.emma_occupancy
                - binary_sensor.ethan_occupancy
                - binary_sensor.guest_room_occupancy
                - binary_sensor.office_occupancy
                - binary_sensor.garage_occupancy
              hover_action: false
              tap_action: false
              state_action:
                service: floorplan.class_set
                service_data: |
                  >
                  if (["on", "Detected"].includes(entity.state))
                    return "room-motion";
                  else
                    return "room-no-motion";

            - name: Devices
              entities:
                - binary_sensor.ardena_connected
                - binary_sensor.athos_connected
                - binary_sensor.erebus_connected
                - binary_sensor.nasya
                - binary_sensor.madrona
                - device_tracker.lantea
                - switch.octoprint_psu
                - media_player.vizio_living_room
                - media_player.vizio_family_room
              state_action:
                service: floorplan.class_set
                service_data: |
                  >
                  if (["on", "Online", "home"].includes(entity.state))
                    return "device-on";
                  else
                    return "device-off";

            - name: Printers
              entities:
                - sensor.canon_mf743c_status
              state_action:
                service: floorplan.class_set
                service_data: |
                  >
                  if (entity.state == "idle")
                    return "mediaplayer-idle";
                  else if (entity.state == "printing")
                    return "mediaplayer-playing";
                  else
                    return "mediaplayer-off";

            - name: Media Players
              entities:
                - media_player.plex_living_room
                - media_player.plex_family_room
                - media_player.plex_master_bedroom
                - media_player.living_room_shield
                - media_player.family_room_shield
                - media_player.master_bedroom_shield
                - media_player.living_room_speaker
                - media_player.family_room_speaker
                - media_player.office_speaker
                - media_player.cast_living_room
                - media_player.cast_family_room
                - media_player.cast_master_bedroom
                - media_player.playstation_4
                - media_player.denon_avr_s760h
                - media_player.yamaha_receiver
              state_action:
                service: floorplan.class_set
                service_data: |
                  >
                  if (entity.state == "on")
                    return "mediaplayer-on";
                  else if (entity.state == "playing")
                    return "mediaplayer-playing";
                  else if (entity.state == "standby")
                    return "mediaplayer-standby";
                  else if (entity.state == "idle")
                    return "mediaplayer-idle";
                  else if (entity.state == "paused")
                    return "mediaplayer-paused";
                  else
                    return "mediaplayer-off";

            - name: Temperature
              entities:
                - sensor.home_temperature
                - sensor.kitchen_temperature
                - sensor.family_room_temperature
                - sensor.master_bedroom_temperature
                - sensor.emma_temperature
                - sensor.ethan_temperature
                - sensor.guest_room_temperature
                - sensor.office_temperature
                - sensor.garage_multisensor_air_temperature
                - sensor.water_main_air_temperature
              state_action:
                - service: floorplan.text_set
                  service_data: '${entity.state ? Math.round(entity.state) + "Â°F" : "undefined"}'
                - service: floorplan.class_set
                  service_data: |
                    >
                    var temp = parseFloat(entity.state.replace("Â°", ""));
                    if (temp < 65)
                      return "temp-very-low-background";
                    else if (temp < 70)
                      return "temp-below-average-background";
                    else if (temp < 74)
                      return "temp-average-background";
                    else
                      return "temp-very-high-background";

            # Cameras
            - entity: camera.emma
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "idle") ? "camera-idle" : ""}'
              tap_action:
                action: fire-dom-event
                browser_mod:
                  service: browser_mod.popup
                  data:
                    title: Emma
                    size: wide
                    content:
                      type: vertical-stack
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.emma
                          intersection: 0.75
                          muted: false
                          ui: true
            - entity: camera.ethan
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "idle") ? "camera-idle" : ""}'
              tap_action:
                action: fire-dom-event
                browser_mod:
                  service: browser_mod.popup
                  data:
                    title: Ethan
                    size: wide
                    content:
                      type: vertical-stack
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.ethan
                          intersection: 0.75
                          muted: false
                          ui: true
            - entity: camera.family_room
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "idle") ? "camera-idle" : ""}'
              tap_action:
                action: fire-dom-event
                browser_mod:
                  service: browser_mod.popup
                  data:
                    title: Family Room
                    size: wide
                    content:
                      type: vertical-stack
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.family_room
                          intersection: 0.75
                          muted: false
                          ui: true
            - entity: camera.garage
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "idle") ? "camera-idle" : ""}'
              tap_action:
                action: fire-dom-event
                browser_mod:
                  service: browser_mod.popup
                  data:
                    title: Garage
                    size: wide
                    content:
                      type: vertical-stack
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.garage
                          intersection: 0.75
                          muted: false
                          ui: true
            - entity: camera.ender_3_pro
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "idle") ? "camera-idle" : ""}'
            - entity: camera.doorbell
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "idle") ? "camera-idle" : ""}'

            - name: Cars
              entities:
                - binary_sensor.opengarage_vehicle_present
              hover_action: false
              state_action:
                service: floorplan.class_set
                service_data: '${(entity.state === "on") ? "layer-visible" : "layer-hidden"}'
