---
# Button Card Templates configuration
#
# https://github.com/custom-cards/button-card#configuration
#
common:
  styles:
    card:
      - padding: 5px 15px
        height: 60px
    icon:
      - height: 30px
        width: 30px
    name:
      - text-transform: uppercase
        font-size: 0.8em
    label:
      - text-transform: uppercase
      - justify-self: start
      - font-weight: bold

common_small:
  styles:
    card:
      - padding: 5px 10px
        height: 36px
    icon:
      - height: 26px
        width: 26px
    name:
      - text-transform: uppercase
        font-size: 0.8em
    label:
      - text-transform: uppercase
      - justify-self: start
      - font-weight: bold

person:
  variables:
    status: ""
    proximity: ""
    battery: ""
    charging: ""
  aspect_ratio: 1/1
  show_entity_picture: true
  custom_fields:
    status: |
      [[[
        if (variables.status) {
          let status = states[variables.status].state === 'not_home' ? 'Away' : states[variables.status].state;
          return `<span>${status}</span>`
        }
        else {
          return `&nbsp;`
        }
      ]]]
    proximity: |
      [[[
        if (variables.proximity && states[variables.proximity].state > 400) {
          let icon = "map-marker-distance";
          let color = "var(--paper-item-icon-active-color)";
          let location = (states[variables.proximity].state / 5280).toFixed(1);

          switch (states[variables.proximity].attributes.dir_of_travel) {
            case "towards":
              icon = "map-marker-left";
              color = "var(--label-badge-green)";
              break;
            case "away_from":
              icon = "map-marker-right";
              color = "var(--paper-orange-400)";
              break;
            case "not set":
            case "unknown":
              icon = "map-marker-right";
              color = "var(--label-badge-red)";
              break;
          }

          return `<ha-icon
            icon="mdi:${icon}"
            style="width: 12px; height: 12px; color: ${color};">
            </ha-icon> <span>\<span style="color: var(--text-color-sensor);">${location} mi</span></span>`
        }
        else {
          return `&nbsp;`
        }
      ]]]
    battery: |
      [[[
        let icon = "cellphone";
        let color = "var(--paper-item-icon-active-color)";
        if (variables.charging && states[variables.charging].state === 'charging') {
          icon = "flash";
          color = "var(--label-badge-green)";
        }
        if (variables.battery) {
          return `<ha-icon
            icon="mdi:${icon}"
            style="width: 12px; height: 12px; color: ${color};">
            </ha-icon> <span style="color: var(--text-color-sensor);">${states[variables.battery].state}% battery</span>`
        }
        else {
          return `&nbsp;`
        }
      ]]]
  styles:
    card:
      - padding: 10%
      - font-size: 12px
      - text-shadow: 0 0 0 black
      - text-transform: capitalize
      - justify-self: end
      - align-self: middle
      # - --mdc-ripple-color: blue
      # - --mdc-ripple-press-opacity: 0.5
    grid:
      - grid-template-areas: '"i status" "n n" "battery battery" "proximity proximity" "sd sd"'
      - grid-template-columns: 1fr 1fr
      - grid-template-rows: 1fr min-content min-content min-content min-content
    name:
      - font-size: 16px
      - align-self: middle
      - justify-self: start
      - padding-bottom: 0
    icon:
      - width: 100%
    img_cell:
      - border-radius: 50%;
    custom_fields:
      status:
        - align-self: start
        - justify-self: end
        - color: var(--text-medium-light-color)
      proximity:
        - padding-bottom: 0
        - align-self: middle
        - justify-self: start
        - color: var(--text-medium-light-color)
        - --text-color-sensor: '
          [[[
            if (variables.battery) {
              if (states[variables.proximity].state > 400) {
                switch(states[variables.proximity].attributes.dir_of_travel) {
                  case "towards":
                    return "var(--label-badge-green)";
                    break;
                  case "away_from":
                    return "var(--paper-orange-400)";
                    break;
                  case "not set":
                  case "unknown":
                    return "var(--label-badge-red)";
                    break;
                }
              }
            }
          ]]]'
      battery:
        - padding-bottom: 0
        - align-self: middle
        - justify-self: start
        - color: var(--text-medium-light-color)
        - --text-color-sensor: '
          [[[
            if (variables.battery) {
              if (states[variables.battery].state < 20) {
                return "var(--label-badge-red)";
              }
              else if (states[variables.battery].state < 30) {
                return "var(--paper-orange-400)";
              }
              else if (states[variables.battery].state < 40) {
                return "var(--label-badge-yellow)";
              }
            }
          ]]]'
