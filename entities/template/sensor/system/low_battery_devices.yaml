---
# The template integration allows creating entities which derive their values
# from other data. This is done by specifying templates for properties of an
# entity, like the name or the state.
#
# https://www.home-assistant.io/integrations/template/
#
sensor:
  - name: Low Battery Devices
    icon: >-
      {% if is_state('sensor.low_battery_devices', '0') %}
        mdi:battery-check
      {% else %}
        mdi:battery-alert
      {% endif %}
    state: >-
      {% set threshold = 30 %}
      {% set ignore_entities = [
        "sensor.galaxy_s21_battery_level",
        "sensor.pixel_7_battery_level",
        "sensor.ipad_josh_battery_level",
        "sensor.quest_battery_level"
      ] %}
      {{ states.sensor
        | reject('in', ['unknown', 'unavailable', 'undefined'])
        | rejectattr('entity_id', 'in', ignore_entities)
        | rejectattr('attributes.device_class', 'undefined')
        | selectattr('attributes.device_class', '==', 'battery')
        | map(attribute='state')
        | map('int', -1)
        | select('<=', threshold)
        | select('>=', 0)
        | list
        | count
      }}
    attributes:
      entity_id: >-
        {% set threshold = 30 %}
        {% set ignore_entities = [
          'sensor.galaxy_s21_battery_level',
          'sensor.pixel_7_battery_level',
          'sensor.ipad_josh_battery_level',
          'sensor.quest_battery_level'
        ] %}
        {% set result = namespace(devices=[]) %}
        {% set devices = states.sensor
          | reject('in', ['unknown', 'unavailable', 'undefined'])
          | rejectattr('entity_id', 'in', ignore_entities)
          | rejectattr('attributes.device_class', 'undefined')
          | selectattr('attributes.device_class', '==', 'battery')
          | list
        %}
        {% for device in devices %}
          {% if device.state | int(-1) <= threshold %}
            {% set result.devices = result.devices + [device.entity_id] %}
          {% endif %}
        {% endfor %}
        {{ result.devices }}
