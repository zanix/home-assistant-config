---
id: system_hacs_updates
alias: '[System] HACS Updates'
description: 'Create a notification when there is updates pending in HACS'

trigger:
  platform: state
  entity_id: sensor.hacs

variables:
  updates: '{{ iif(trigger.to_state.state|int(default=0) == 1, "Update", "Updates", "") }}'
  title: 'HACS: {{ trigger.to_state.state|int }} {{ updates }} Pending'

condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != "unknown" and trigger.from_state.state != "unknown" }}'

action:
  - if:
      - condition: template
        value_template: '{{ (trigger.to_state.state|int(default=0)) == 0 and (trigger.from_state.state|int(default=0)) > 0 }}'

    then:
      - service: persistent_notification.dismiss
        data:
          notification_id: hacs-update

      - service: script.notify_mobile
        data:
          who: 'josh'
          title: ''
          message: 'clear_notification'
          tag: 'hacs-update'

    else:
      - parallel:
          - service: script.notify_web
            data:
              title: '{{ title }}'
              message: >-
                {%- set list = namespace(updates=[]) -%}
                {%- for repo in trigger.to_state.attributes.repositories -%}
                  {%- if repo["installed_version"] != repo["available_version"] -%}
                    {% set update = '**' ~ repo.display_name ~ '** _' ~ repo["installed_version"] ~ '_ -> _' ~ repo["available_version"] ~ '_' %}
                    {%- set list.updates = list.updates + [update] -%}
                  {%- endif -%}
                {%- endfor -%}
                {{ list.updates | join("\n") }}
              id: 'hacs-update'

          - service: script.notify_mobile
            data:
              who: 'josh'
              title: '{{ title }}'
              message: >-
                {%- set list = namespace(updates=[]) -%}
                {%- for repo in trigger.to_state.attributes.repositories -%}
                  {%- if repo["installed_version"] != repo["available_version"] -%}
                    {% set update = '<b>' ~ repo.display_name ~ '</b> <em>' ~ repo["installed_version"] ~ '</em> -> <em>' ~ repo["available_version"] ~ '</em>' %}
                    {%- set list.updates = list.updates + [update] -%}
                  {%- endif -%}
                {%- endfor -%}
                {{ list.updates | join("<br>") }}
              icon: '/local/icons/update.png'
              group: 'Upgrade'
              tag: 'hacs-update'
              url: 'hacs'
