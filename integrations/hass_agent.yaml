---
# HASS.Agent is a Windows-based client for Home Assistant, developed in .NET 6.
# It provides notifications, quick actions, commands, sensors and more.
#
# https://github.com/LAB02-Research/HASS.Agent
#
script:
  hass_agent_launch:
    alias: '[HASS.Agent] Launch Application'
    description: 'Opens an application.'
    icon: mdi:application-outline

    fields:
      computer:
        description: 'The HASS.Agent computer.'
        example: 'computer'
        required: true
        selector:
          text:
      command:
        description: 'Application name or command line.'
        example: '"notepad++.exe" or "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"'
        required: true
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "homeassistant/switch/{{ computer }}/{{ computer }}%20Launch/action"
          payload_template: '{{ command }}'

  hass_agent_launch_url:
    alias: '[HASS.Agent] Launch URL'
    description: 'Open a URL or file using the default application.'
    icon: mdi:application-outline

    fields:
      computer:
        description: 'The HASS.Agent computer.'
        example: 'computer'
        required: true
        selector:
          text:
      url:
        description: 'URL or file path.'
        example: '"steam://rungameid/1151640", or "https://hassagent.readthedocs.io"'
        required: true
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "homeassistant/button/{{ computer }}/{{ computer }}%20Launch%20URL/action"
          payload_template: '{{ command }}'

  notify_hass_agent:
    alias: '[Notify] HASS.Agent'
    description: 'Notify via HASS.Agent'
    icon: mdi:cellphone-message
    mode: parallel

    fields:
      computer:
        description: 'Which copmuter to send to.'
        example: 'ardena'
        required: true
        selector:
          text:
      title:
        description: 'Title of the notification.'
        example: 'Startup: Home Assistant is Up and Running!'
        selector:
          text:
      message:
        description: 'Message of the notification.'
        example: 'Message text'
        required: true
        selector:
          text:
      image:
        description: 'Image to attach.'
        example: '/local/image.png'
        selector:
          text:
      camera:
        description: 'Camera stream to attach.'
        example: 'camera.doorbell'
        selector:
          entity:
            domain: camera
      duration:
        description: 'The duration in seconds for which the notification will be displayed. Default is 5.'
        default: '5'
        example: '5'
        selector:
          number:
            mode: box

    # Set local variables for reuse in this script.
    variables:
      notification_service: 'notify.{{ computer|default("ardena") }}'
      image_path: |
        {%- if image is string -%}
          {%- if image.startswith("http") -%}
            {{ image }}
          {%- else -%}
            {{ states("sensor.base_url") }}/{{ image }}
          {%- endif -%}
        {%- endif -%}
      duration: '{{ duration|default(5) }}'

    sequence:
      - choose:
          # Send camera image.
          - conditions: '{{ camera is string }}'
            sequence:
              - service: '{{ notification_service }}'
                data:
                  title: '{{ title }}'
                  message: '{{ message }}'
                  data:
                    image: '{{ states("sensor.base_url") }}{{ state_attr(camera,"entity_picture") }}'
                    duration: '{{ duration }}'

          # Send an image.
          - conditions: '{{ image is string }}'
            sequence:
              - service: '{{ notification_service }}'
                data:
                  title: '{{ title }}'
                  message: '{{ message }}'
                  data:
                    image: '{{ image_path }}'
                    duration: '{{ duration }}'

        # Send a basic notification message.
        default:
          - service: '{{ notification_service }}'
            data:
              title: '{{ title }}'
              message: '{{ message }}'
              data:
                duration: '{{ duration }}'
