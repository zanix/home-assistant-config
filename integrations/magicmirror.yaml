---
# The open source modular smart mirror platform.
# This is a bunch of rest sensors and switches to interact with the
# Remote Contol module for MagicMirror
#
# https://magicmirror.builders
# https://github.com/Jopyth/MMM-Remote-Control
#
sensor:
  - platform: rest
    name: "MagicMirror Brightness"
    resource: !secret magicmirror_api_brightness
    scan_interval: 10
    value_template: '{{ value_json.result }}'

switch:
  - platform: rest
    name: "MagicMirror Monitor"
    resource: !secret magicmirror_api_monitor
    scan_interval: 10
    body_on: '{"monitor": "on"}'
    body_off: '{"monitor": "off"}'
    is_on_template: '{{ value_json.monitor|replace("off", "false")|replace("on", "true") }}'
    headers:
      Content-Type: application/json

rest_command:
  magicmirror_brightness:
    url: !secret magicmirror_api_brightness
    method: POST
    payload: '{"brightness": {{ brightness }}}'
    content_type: "application/json; charset=utf-8"

light:
  - platform: template
    lights:
      magicmirror:
        friendly_name: "MagicMirror"
        value_template: "{{ states('switch.magicmirror_monitor') }}"
        icon_template: >-
          {% if is_state('switch.magicmirror_monitor', 'on') %}
            mdi:monitor
          {% else %}
            mdi:monitor-off
          {% endif %}
        turn_on:
          service: homeassistant.turn_on
          data:
            entity_id: switch.magicmirror_monitor
        turn_off:
          service: homeassistant.turn_off
          data:
            entity_id: switch.magicmirror_monitor
        set_level:
          service: rest_command.magicmirror_brightness
          data:
            brightness: "{{ (brightness * 100 / 255)|int }}"
        level_template: >-
          {%- if is_state('switch.magicmirror_monitor', 'on') -%}
            {{ (states('sensor.magicmirror_brightness')|float(default=0) * 2.55)|round() }}
          {%- else -%}
            0
          {%- endif -%}

automation:
  - id: mm_bright_when_kitchen_light_on
    alias: "[MM] Bright when Kitchen Light On"
    trigger:
      - platform: state
        entity_id: light.kitchen
        from: "off"
        to: "on"
      # - platform: state
      #   entity_id: switch.dining_room_light
      #   from: "off"
      #   to: "on"
      - platform: numeric_state
        entity_id: light.kitchen
        attribute: brightness
        above: 45
    condition:
      - condition: or
        conditions:
          # - condition: state
          #   entity_id: switch.dining_room_light
          #   state: "on"
          - condition: and
            conditions:
              - condition: state
                entity_id: light.kitchen
                state: "on"
              - condition: numeric_state
                entity_id: light.kitchen
                attribute: brightness
                above: 45
      - condition: sun
        after: sunset
      - condition: time
        before: "21:00:00"
    action:
      - service: rest_command.magicmirror_brightness
        data:
          brightness: 100

  - id: mm_dim_when_kitchen_light_off
    alias: "[MM] Dim when Kitchen Light Off"
    trigger:
      - platform: state
        entity_id: light.kitchen
        from: "on"
        to: "off"
      # - platform: state
      #   entity_id: switch.dining_room_light
      #   from: "on"
      #   to: "off"
      - platform: numeric_state
        entity_id: light.kitchen
        attribute: brightness
        below: 45
    condition:
      # - condition: state
      #   entity_id: switch.dining_room_light
      #   state: "off"
      - condition: or
        conditions:
          - condition: state
            entity_id: light.kitchen
            state: "off"
          - condition: numeric_state
            entity_id: light.kitchen
            attribute: brightness
            below: 45
      - condition: sun
        after: sunset
      - condition: time
        before: "21:00:00"
    action:
      - service: rest_command.magicmirror_brightness
        data:
          brightness: 40

  - id: mm_dim_at_sunset
    alias: "[MM] Dim at Sunset"
    trigger:
      platform: sun
      event: sunset
    condition:
      # - condition: state
      #   entity_id: switch.dining_room_light
      #   state: "off"
      - condition: or
        conditions:
          - condition: state
            entity_id: light.kitchen
            state: "off"
          - condition: numeric_state
            entity_id: light.kitchen
            attribute: brightness
            below: 45
      - condition: time
        before: "21:00:00"
    action:
      - service: rest_command.magicmirror_brightness
        data:
          brightness: 40

  - id: mm_on_when_arrive
    alias: "[MM] On when Arrive"
    trigger:
      platform: state
      entity_id: group.people
      from: "not_home"
      to: "home"
    condition:
      - condition: time
        after: "06:30:00"
      - condition: time
        before: "21:00:00"
    action:
      - service: homeassistant.turn_on
        data:
          entity_id: switch.magicmirror_monitor

  - id: mm_off_when_away
    alias: "[MM] Off when Away"
    trigger:
      platform: state
      entity_id: group.people
      from: "home"
      to: "not_home"
      for:
        minutes: 10
    condition:
      - condition: time
        after: "06:30:00"
      - condition: time
        before: "21:00:00"
    action:
      - service: homeassistant.turn_off
        data:
          entity_id: switch.magicmirror_monitor

  - id: mm_off_at_night
    alias: "[MM] Off at Night"
    trigger:
      platform: time
      at: "21:10:00"
    action:
      - service: homeassistant.turn_off
        data:
          entity_id: switch.magicmirror_monitor

  - id: mm_on_at_morning
    alias: "[MM] On at Morning"
    trigger:
      platform: time
      at: "06:30:00"
    action:
      - service: homeassistant.turn_on
        data:
          entity_id: switch.magicmirror_monitor
      - service: rest_command.magicmirror_brightness
        data:
          brightness: 100
