---
# IOT Link is a full featured service for connecting devices with IOT enabled
# services using MQTT.
#
#  https://iotlink.gitlab.io
#
script:
  iotlink_refresh:
    alias: '[IOT Link] Refresh'
    description: 'Refresh System Information.'
    icon: mdi:reload

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/refresh"
          payload: ""

  iotlink_shutdown:
    alias: '[IOT Link] Shutdown'
    description: 'Shutdown Host System.'
    icon: mdi:power

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: script.iotlink_notify
        data:
          computer: "{{ computer }}"
          title: SHUTTING DOWN
          message: This computer will shut down in 5 seconds

      - delay:
          seconds: 5

      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/shutdown"
          payload: ""

  iotlink_reboot:
    alias: '[IOT Link] Reboot'
    description: 'Reboot Host System.'
    icon: mdi:reload-alert

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: script.iotlink_notify
        data:
          computer: "{{ computer }}"
          title: REBOOTING
          message: This computer will reboot in 5 seconds

      - delay:
          seconds: 5

      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/reboot"
          payload: ""

  iotlink_hibernate:
    alias: '[IOT Link] Hibernate'
    description: 'Hibernate Host System.'
    icon: mdi:backup-restore

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: script.iotlink_notify
        data:
          computer: "{{ computer }}"
          title: HIBERNATING
          message: This computer will hibernate in 5 seconds

      - delay:
          seconds: 5

      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/hibernate"
          payload: ""

  iotlink_suspend:
    alias: '[IOT Link] Suspend'
    description: 'Suspend Host System.'
    icon: mdi:sleep

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: script.iotlink_notify
        data:
          computer: "{{ computer }}"
          title: SLEEPING
          message: This computer will go to sleep in 5 seconds

      - delay:
          seconds: 5

      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/suspend"
          payload: ""

  iotlink_logoff:
    alias: '[IOT Link] Logoff'
    description: 'Logoff User Session.'
    icon: mdi:logout

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:
      username:
        description: 'Username (or empty for all current users).'
        example: 'username'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/logoff"
          payload: "{{ username }}"

  iotlink_lock:
    alias: '[IOT Link] Lock'
    description: 'Lock User Session.'
    icon: mdi:lock

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:
      username:
        description: 'Username (or empty for all current users).'
        example: 'username'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/lock"
          payload: ""

  iotlink_media_play:
    alias: '[IOT Link] Media - Play/Pause'
    description: 'Media - Play/Pause.'
    icon: mdi:play

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/media/playpause"
          payload: ""

  iotlink_media_stop:
    alias: '[IOT Link] Media - Stop'
    description: 'Media - Stop.'
    icon: mdi:stop

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/media/stop"
          payload: ""

  iotlink_media_next:
    alias: '[IOT Link] Media - Next'
    description: 'Media - Next.'
    icon: mdi:skip-next

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/media/next"
          payload: ""

  iotlink_media_previous:
    alias: '[IOT Link] Media - Previous'
    description: 'Media - Previous.'
    icon: mdi:skip-previous

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/media/previous"
          payload: ""

  iotlink_displays_on:
    alias: '[IOT Link] Displays ON'
    description: 'Turn on Displays.'
    icon: mdi:monitor

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/displays/on"
          payload: ""

  iotlink_displays_off:
    alias: '[IOT Link] Displays OFF'
    description: 'Turn off Displays.'
    icon: mdi:monitor-off

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/displays/off"
          payload: ""

  iotlink_run_app:
    alias: '[IOT Link] Run Application'
    description: 'Opens an application.'
    icon: mdi:application-outline

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:
      command:
        description: 'Application name or command line.'
        example: '"notepad++.exe" or "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"'
        selector:
          text:
      args:
        description: 'Command line arguments.'
        example: 'https://iotlink.gitlab.io'
        selector:
          text:
      path:
        description: 'Working directory which the application or command line will be executed from.'
        example: 'C:\\Program Files (x86)\\Google\\Chrome\\Application'
        selector:
          text:

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/run"
          payload_template: '{ "command": "{{ command }}", "args": "{{ args }}", "path": "{{ path }}", "user": "", "visible": true, "fallback": true }'

  iotlink_notify:
    alias: '[IOT Link] Notify'
    description: 'Sends a notification to the computer.'
    icon: mdi:bell-ring

    fields:
      computer:
        description: 'The IOT Link computer.'
        example: 'computer'
        selector:
          text:
      title:
        description: 'Notification Title (String - Len: +/- 27)'
        example: 'Notification Title'
        selector:
          text:
      message:
        description: 'Message (String - Len: +/- 100)'
        example: 'This is an example of a notification'
        selector:
          text:
      icon:
        description: 'Custom icon URL (http or https) or file path (file:///). Must be accessible from the notified computer.'
        example: '/local/image.png'
        selector:
          text:
      launch_params:
        description: (Optional) Behavior when the notification is clicked.
        example: 'Open Url: toast://open/https://iotlink.gitlab.io, Open App: toast://open/C:\Program Files (x86)\Google\Chrome\Application\chrome.exe#https://iotlink.gitlab.io#C:\\Program Files (x86)\Google\Chrome\Application'
        selector:
          text:

    variables:
      icon_path: |
        {%- if icon is string -%}
          {%- if icon.startswith("http") -%}
            {{ icon }}
          {%- else -%}
            {{ states.sensor.base_url.state }}/{{ icon }}
          {%- endif -%}
        {%- endif -%}
      launch_params: '{{ launch_params|default("") }}'

    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/{{ computer }}/commands/notify"
          payload_template: '{ "title": "{{ title }}", "message": "{{ message }}", "iconUrl": "{{ icon_path }}", "launchParams": "{{ launch_params }}" }'
