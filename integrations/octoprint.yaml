---
# OctoPrint is a web interface for your 3D printer.
#
# https://github.com/OctoPrint/OctoPrint-MQTT
# https://github.com/cmroche/OctoPrint-HomeAssistant
#
homeassistant:
  customize_glob:
    "sensor.octoprint_*_temperature":
      unit_of_measurement: 'C'
    "sensor.octoprint_*_target":
      unit_of_measurement: 'C'

camera:
  - platform: mjpeg
    name: Ender 3 Pro
    still_image_url: !secret octoprint_image_url
    mjpeg_url: !secret octoprint_mjpeg_url

switch:
  - platform: rest
    name: Ender 3 Pro
    resource: !secret octoprint_api_psu_control
    body_on: '{ "command":"turnPSUOn" }'
    body_off: '{ "command":"turnPSUOff" }'
    is_on_template: "{{ value_json.isPSUOn == true }}"
    headers:
      Content-Type: application/json
      X-Api-Key: !secret octoprint_api_key

sensor:
  - platform: mqtt
    name: "OctoPrint Layer Progress"
    state_topic: "octoprint/event/DisplayLayerProgress_layerChanged"
    json_attributes_topic: "octoprint/event/DisplayLayerProgress_layerChanged"
    icon: mdi:stack-overflow
    value_template: '{{ value_json.currentLayer }} / {{ value_json.totalLayer }}'

  - platform: template
    sensors:
      octoprint_print_time_format:
        friendly_name: OctoPrint Print Time
        availability_template: "{{ states.sensor.octoprint_print_time.state and states('sensor.octoprint_print_time') != 'None' }}"
        value_template: >-
          {%- if states.sensor.octoprint_print_time.state and states('sensor.octoprint_print_time') != 'None' -%}
            {%- set time = states('sensor.octoprint_print_time').split(':') -%}
            {%- set seconds = time[2]|int -%}
            {%- set minutes = time[1]|int -%}
            {%- set hours = time[0]|int -%}
            {%- set days = 0 -%}
            {%- if time|length > 3 -%}
              {% set seconds = time[3]|int %}
              {% set minutes = time[2]|int %}
              {% set hours = time[1]|int %}
              {% set days = time[0]|int %}
            {%- endif -%}
            {%- if days > 0 -%}
              {{ days }}d
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 %}, {% endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if hours > 0 or days > 0 %}, {% endif -%}
              {{ minutes }}m
            {%- endif -%}
            {%- if seconds > 0 -%}
              {%- if minutes > 0 or hours > 0 or days > 0 %}, {% endif -%}
              {{ seconds }}s
            {%- endif %}
          {%- else -%}
            0:0:0
          {%- endif -%}
        icon_template: mdi:clock-start

      octoprint_print_time_left_format:
        friendly_name: OctoPrint Print Time Left
        availability_template: "{{ states.sensor.octoprint_print_time_left.state and states('sensor.octoprint_print_time_left') != 'None' }}"
        value_template: >-
          {%- if states.sensor.octoprint_print_time_left.state and states('sensor.octoprint_print_time_left') != 'None' -%}
            {%- set time = states('sensor.octoprint_print_time_left').split(':') -%}
            {%- set seconds = time[2]|int -%}
            {%- set minutes = time[1]|int -%}
            {%- set hours = time[0]|int -%}
            {%- set days = 0 -%}
            {%- if time|length > 3 -%}
              {% set seconds = time[3]|int %}
              {% set minutes = time[2]|int %}
              {% set hours = time[1]|int %}
              {% set days = time[0]|int %}
            {%- endif -%}
            {%- if days > 0 -%}
              {{ days }}d
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 %}, {% endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if hours > 0 or days > 0 %}, {% endif -%}
              {{ minutes }}m
            {%- endif -%}
            {%- if seconds > 0 -%}
              {%- if minutes > 0 or hours > 0 or days > 0 %}, {% endif -%}
              {{ seconds }}s
            {%- endif %}
          {%- else -%}
            0:0:0
          {%- endif -%}
        icon_template: mdi:clock-end

      octoprint_print_file_size:
        friendly_name: File Size
        availability_template: "{{ states.sensor.octoprint_print_estimated_time.state and states('sensor.octoprint_print_estimated_time') != 'None' }}"
        value_template: >-
          {%- if states.sensor.octoprint_print_estimated_time.state and states('sensor.octoprint_print_estimated_time') != 'None' -%}
            {%- set file = state_attr("sensor.octoprint_print_estimated_time", "file") -%}
            {{ (file["size"] / 1049000)|round(2) }}
          {%- else -%}
            0
          {%- endif -%}
        icon_template: mdi:file-code-outline
        unit_of_measurement: 'MB'

      octoprint_filament_length:
        friendly_name: Filament Length
        availability_template: "{{ states.sensor.octoprint_print_estimated_time.state and states('sensor.octoprint_print_estimated_time') != 'None' }}"
        value_template: >-
          {%- if states.sensor.octoprint_print_estimated_time.state and states('sensor.octoprint_print_estimated_time') != 'None' -%}
            {%- set filament = state_attr('sensor.octoprint_print_estimated_time', 'filament') -%}
            {{ (filament["tool0"]["length"] / 1000)|round(2) }}
          {%- else -%}
            0
          {%- endif -%}
        icon_template: mdi:ruler
        unit_of_measurement: 'm'

      octoprint_filament_cost:
        friendly_name: "Cost"
        availability_template: "{{ states.sensor.octoprint_print_estimated_time.state and states('sensor.octoprint_print_estimated_time') != 'None' }}"
        value_template: >-
          {%- if states.sensor.octoprint_print_estimated_time.state and states('sensor.octoprint_print_estimated_time') != 'None' -%}
            {%- set filament = state_attr('sensor.octoprint_print_estimated_time', 'filament') -%}
            {{ ((filament["tool0"]["length"] / 1000)|multiply(0.072))|round(2) }}
          {%- else -%}
            0
          {%- endif -%}
        icon_template: mdi:currency-usd
        unit_of_measurement: '$'

automation:
  - id: notify_ender_3_pro
    alias: "[Notify] Ender 3 Pro"
    trigger:
      - platform: state
        entity_id: sensor.octoprint_print_status
        from: Printing
        to: Operational
    action:
      - service: script.notify_mobile
        data:
          who: "josh"
          title: "3D Print Finished"
          message: "{{ states('sensor.octoprint_print_file') }} finished printing in {{ states('sensor.octoprint_print_time_format') }}"
          icon: "/local/icons/printer-3d.png"
          group: "3d-printer"

history:
  exclude:
    entities:
      - sensor.octoprint_print_file_size
      - sensor.octoprint_filament_length
      - sensor.octoprint_filament_cost
      - sensor.octoprint_print_time_format
      - sensor.octoprint_print_time_left_format
      - sensor.octoprint_layer_progress

recorder:
  exclude:
    entities:
      - sensor.octoprint_print_file_size
      - sensor.octoprint_filament_length
      - sensor.octoprint_filament_cost
      - sensor.octoprint_print_time_format
      - sensor.octoprint_print_time_left_format
      - sensor.octoprint_layer_progress

influxdb:
  exclude:
    entities:
      - sensor.octoprint_print_file_size
      - sensor.octoprint_filament_length
      - sensor.octoprint_filament_cost
      - sensor.octoprint_print_time_format
      - sensor.octoprint_print_time_left_format
      - sensor.octoprint_layer_progress
